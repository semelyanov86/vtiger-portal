_type: export
__export_format: 4
__export_date: 2023-04-23T11:57:26.716Z
__export_source: insomnia.desktop.app:v2022.4.2
resources:
  - _id: req_wrk_66e74e4b495c4404841a78c723c211ded66e0308
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682251034319
    created: 1682250708675
    url: "{{ base_url }}/tickets"
    name: Create new ticket
    description: |-
      Here you can create new ticket.

      Example request:
      ```json
      {
        "ticket_title": "Problem with internet",
        "ticketpriorities": "Normal",
        "ticketseverities": "Minor",
        "ticketcategories": "Big Problem",
        "description": "There are no internet in my appartment."
      }
      ```

      Example response:
      ```json
      {
      	"ticket_no": "TT4",
      	"assigned_user_id": "19x1",
      	"parent_id": "11x6",
      	"ticketpriorities": "Normal",
      	"product_id": "",
      	"ticketseverities": "Minor",
      	"ticketstatus": "Open",
      	"ticketcategories": "Big Problem",
      	"hours": 0,
      	"days": 0,
      	"createdtime": "2023-04-23T11:55:34Z",
      	"modifiedtime": "2023-04-23T11:55:34Z",
      	"from_portal": false,
      	"modifiedby": "19x1",
      	"ticket_title": "Problem with internet",
      	"description": "There are no internet in my appartment.",
      	"solution": "",
      	"contact_id": "12x11",
      	"created_user_id": "",
      	"source": "PORTAL",
      	"starred": false,
      	"tags": [
      		""
      	],
      	"id": "17x47",
      	"label": "Problem with internet"
      }
      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "ticket_title": "Problem with internet",
          "ticketpriorities": "Normal",
          "ticketseverities": "Minor",
          "ticketcategories": "Big Problem",
          "description": "There are no internet in my appartment."
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_a7a80c970c224b47b9eec2c19abffcde
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682250708675
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682098348631
    created: 1682098348631
    name: tickets
    description: Operations with HelpDesk module
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682098348631
    _type: request_group
  - _id: wrk_66e74e4b495c4404841a78c723c211de
    parentId: null
    modified: 1681752522262
    created: 1681752522262
    name: Vtiger Customer Portal
    description: ""
    scope: design
    _type: workspace
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deb8795f33
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682232610388
    created: 1682232473773
    url: "{{ base_url }}/tickets/{{ ticketId }}/documents"
    name: Related documents from ticket
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682232473773
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de793d958d
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682236042212
    created: 1682232473771
    url: "{{ base_url }}/tickets/{{ ticketId }}/file/{{ fileId }}"
    name: Get file in Ticket
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682232473771
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de46f4f7b3
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682174927901
    created: 1682171278798
    url: "{{ base_url }}/tickets"
    name: Get Tickets
    description: >-
      Here you can get all tickets, attached to authenticated user. Optionally
      you can pass also pagination params.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"ticket_no": "TT2",
      			"assigned_user_id": "19x1",
      			"parent_id": "11x6",
      			"ticketpriorities": "Normal",
      			"product_id": "",
      			"ticketseverities": "",
      			"ticketstatus": "In Progress",
      			"ticketcategories": "",
      			"hours": 0,
      			"days": 0,
      			"createdtime": "2022-12-03T18:35:49Z",
      			"modifiedtime": "2023-04-22T05:45:02Z",
      			"from_portal": false,
      			"modifiedby": "19x1",
      			"ticket_title": "gdfgdfgvsfd",
      			"description": "Here is some description",
      			"solution": "",
      			"contact_id": "",
      			"created_user_id": "",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "17x16",
      			"label": ""
      		},
      		{
      			"ticket_no": "TT3",
      			"assigned_user_id": "19x1",
      			"parent_id": "11x6",
      			"ticketpriorities": "Low",
      			"product_id": "",
      			"ticketseverities": "Minor",
      			"ticketstatus": "Open",
      			"ticketcategories": "Big Problem",
      			"hours": 2,
      			"days": 0,
      			"createdtime": "2023-03-15T14:54:01Z",
      			"modifiedtime": "2023-04-21T17:37:51Z",
      			"from_portal": false,
      			"modifiedby": "19x1",
      			"ticket_title": "sdfdsfdsf",
      			"description": "Some description",
      			"solution": "Some solution",
      			"contact_id": "12x11",
      			"created_user_id": "",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				"test1",
      				"test2"
      			],
      			"id": "17x28",
      			"label": ""
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_8d0ad7d75fb54917bcca31b74d2be90e
      - name: size
        disabled: true
        value: "10"
        id: pair_d1e556b86b9f4dbf9cd74fd3d9cba060
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682171278798
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deeb2dc7bf
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682171279330
    created: 1682145840383
    url: "{{ base_url }}/tickets/{{ ticketId }}/comments"
    name: Related comments from ticket
    description: >-
      This endpoint for getting related comments, attached to ticket. Note, that
      here is displayed only not internal comments. Currently there is no
      pagination supported and displayed maximum 100 comments.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"id": "32x39",
      			"commentcontent": "This is public comment",
      			"source": "CRM",
      			"customer": "",
      			"userid": "",
      			"reasontoedit": "",
      			"creator": "19x1",
      			"assigned_user_id": "19x1",
      			"createdtime": "2023-04-21T17:37:51Z",
      			"modifiedtime": "2023-04-21T17:37:51Z",
      			"related_to": "17x28",
      			"parent_comments": "",
      			"is_private": false,
      			"filename": "0",
      			"related_email_id": "0"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682145840383
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211dee9835bc2
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682145840869
    created: 1682098348610
    url: "{{ base_url }}/tickets/{{ ticketId }}"
    name: Find HelpDesk by ID
    description: |-
      Here you can get ticket information based on it's ID

      Example response:
      ```json
      {
      	"ticket_no": "TT3",
      	"assigned_user_id": "19x1",
      	"parent_id": "11x6",
      	"ticketpriorities": "Low",
      	"product_id": "",
      	"ticketseverities": "Minor",
      	"ticketstatus": "Open",
      	"ticketcategories": "Big Problem",
      	"hours": 2,
      	"days": 0,
      	"createdtime": "2023-03-15T14:54:01Z",
      	"modifiedtime": "2023-04-21T17:37:51Z",
      	"from_portal": false,
      	"modifiedby": "19x1",
      	"ticket_title": "sdfdsfdsf",
      	"description": "Some description",
      	"solution": "Some solution",
      	"contact_id": "12x11",
      	"created_user_id": "",
      	"source": "CRM",
      	"starred": "0",
      	"tags": [
      		"test1",
      		"test2"
      	],
      	"id": "17x28",
      	"label": "sdfdsfdsf"
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682098348610
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de01c821a8
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211defbd34a2b
    modified: 1682250709221
    created: 1682057273135
    url: "{{ base_url }}/modules/{{ moduleName }}"
    name: Module Info
    description: >-
      Here you can get full structure about module, you passwd in request. Note,
      you need to pass system module name of vtiger, for example Project. List
      of modules with their ids:

      * Accounts	3

      * Assets	27

      * Calendar	1

      * Campaigns	17

      * Cases	39

      * CampanyDetails	26

      * Contacts	4

      * Currency	21

      * DocumentFolders	22

      * Documents	7

      * EmailCampaigns	37

      * Emails	8

      * Events	18

      * Faq	10

      * Groups	20

      * HelpDesk	9

      * Invoice	16

      * Leads	2

      * LineItem	33

      * ModComments	28

      * Olark	40

      * PBXManager	24

      * Potentials	5

      * PriceBooks	12

      * PrintTemplates	41

      * Products	6

      * ProductTaxes	35

      * Project	31

      * ProjectMilestone	29

      * ProjectTask	30

      * PurchaseOrder	14

      * Quotes	13

      * SalesOrder	15

      * ServiceContracts	23

      * Services	25

      * SLA	38

      * Tax	34

      * Users	19

      * Vendors	11


      Example response of HelpDesk module:


      ```json

      {
      	"label": "Tickets",
      	"name": "HelpDesk",
      	"createable": true,
      	"updateable": true,
      	"deleteable": true,
      	"retrieveable": true,
      	"fields": [
      		{
      			"name": "ticket_no",
      			"label": "Ticket Number",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": false,
      			"editable": false,
      			"default": ""
      		},
      		{
      			"name": "assigned_user_id",
      			"label": "Assigned To",
      			"mandatory": true,
      			"isunique": false,
      			"nullable": false,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "parent_id",
      			"label": "Organization Name",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "ticketpriorities",
      			"label": "Priority",
      			"mandatory": true,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "product_id",
      			"label": "Product Name",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "ticketseverities",
      			"label": "Severity",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "ticketstatus",
      			"label": "Status",
      			"mandatory": true,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "ticketcategories",
      			"label": "Category",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "hours",
      			"label": "Hours",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "days",
      			"label": "Days",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "createdtime",
      			"label": "Created Time",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": false,
      			"editable": false,
      			"default": ""
      		},
      		{
      			"name": "modifiedtime",
      			"label": "Modified Time",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": false,
      			"editable": false,
      			"default": ""
      		},
      		{
      			"name": "from_portal",
      			"label": "From Portal",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "modifiedby",
      			"label": "Last Modified By",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": false,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "ticket_title",
      			"label": "Title",
      			"mandatory": true,
      			"isunique": false,
      			"nullable": false,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "description",
      			"label": "Description",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "solution",
      			"label": "Solution",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "contact_id",
      			"label": "Contact Name",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "source",
      			"label": "Source",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": false,
      			"default": ""
      		},
      		{
      			"name": "starred",
      			"label": "starred",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "tags",
      			"label": "tags",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "kanban_color",
      			"label": "Color",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": true,
      			"editable": true,
      			"default": ""
      		},
      		{
      			"name": "id",
      			"label": "ticketid",
      			"mandatory": false,
      			"isunique": false,
      			"nullable": false,
      			"editable": false,
      			"default": ""
      		}
      	],
      	"idPrefix": "17",
      	"isEntity": true,
      	"allowDuplicates": true,
      	"labelFields": "title"
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682057273135
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211defbd34a2b
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682057273145
    created: 1682057273145
    name: module
    description: Module informations with all data in it
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682057273145
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deaa5108ed
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de1a8565a9
    modified: 1682246266586
    created: 1682010335863
    url: "{{ base_url }}/managers/{{ managerId }}"
    name: Find manager by ID
    description: >-
      Here you can get user from vtiger by it's ID. As a query param in address
      you need to pass vtiger user ID, for example `19x1`


      Example response:

      ```json

      {
      	"id": "19x1",
      	"user_name": "admin",
      	"first_name": "",
      	"last_name": "Administrator",
      	"email2": "",
      	"title": "",
      	"phone_work": "",
      	"department": "",
      	"description": "",
      	"address_street": "",
      	"address_city": "",
      	"address_state": "",
      	"address_postalcode": "",
      	"address_country": "",
      	"imagename": ""
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
      disabled: false
    metaSortKey: -1682010335863
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de1a8565a9
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682010335872
    created: 1682010335872
    name: manager
    description: Users module in vtiger, getting info about assigned managers
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682010335872
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de816b2196
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    modified: 1682092428365
    created: 1682089127951
    url: "{{ base_url }}/company"
    name: Get company data
    description: >-
      Here you can get all organisation details from vtiger. Note, this endpoint
      is available without authorization.


      Example response:

      ```json

      {
      	"organizationname": "vtiger",
      	"address": "95, 12th Main Road, 3rd Block, Rajajinagar",
      	"city": "Bangalore",
      	"state": "Karnataka",
      	"country": "India",
      	"code": "560010",
      	"phone": "+91 9243602352",
      	"fax": "+91 9243602352",
      	"website": "www.vtiger.com",
      	"logoname": "vtiger-crm-logo.png",
      	"logo": "",
      	"vatid": "",
      	"inn": "",
      	"kpp": "",
      	"bankaccount": "",
      	"bankname": "",
      	"bankid": "",
      	"corraccount": "",
      	"director": "",
      	"bookkeeper": "",
      	"entepreneur": "",
      	"entepreneurreg": "",
      	"okpo": "",
      	"id": "23x1"
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
      disabled: true
    metaSortKey: -1682089127951
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682002384621
    created: 1682002384621
    name: support
    description: Technical stuff for analytics and checking portal status
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682002384621
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de572982bb
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    modified: 1682002585932
    created: 1682002384612
    url: "{{ base_url }}/ping"
    name: Status of application
    description: >-
      Here you can check if application is active or not. As a response you will
      get 200 status with success json message.


      Example response:

      ```json

      {
      	"message": "active",
      	"success": true
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1682002384612
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_6fc38a12f86b4d308e683aa89c9c9fe9
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681883793300
    created: 1681883789866
    url: http://vtiger.test:8000/webservice.php?id=12x11&operation=retrieve&sessionName=3619dcf3643f82678f049
    name: New Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1681883789866
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de051cf8c0
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1682092745582
    created: 1682092427875
    url: "{{ base_url }}/users/password"
    name: Reset Password
    description: >-
      Using this endpoint you can reset password. For this purposes you need
      provide password token and new password. Example request:


      ```json

      {
        "token": "ISBTSR6CWE7ZNQGWN2QIHRFGNA",
        "password": "NewPassword"
      }

      ```


      Example response:

      ```json

      {
      	"id": 14,
      	"crmid": "12x11",
      	"firstname": "Sergei",
      	"lastname": "Emelianov",
      	"description": "Here is changed description second",
      	"account_id": "11x6",
      	"account_name": "",
      	"title": "Director",
      	"department": "Management",
      	"email": "se@sergeyem.ru",
      	"created_at": "2023-04-20T06:35:29Z",
      	"updated_at": "2023-04-21T17:57:18.50397715+02:00",
      	"is_active": true,
      	"mailingcity": "Cheboksary",
      	"mailingstreet": "Bulvar Yunosti, 3",
      	"mailingcountry": "Russia",
      	"othercountry": "Russia",
      	"mailingstate": "Chuvashia",
      	"mailingpobox": "",
      	"othercity": "Cheboksary",
      	"otherstate": "Chuvashia",
      	"mailingzip": "428010",
      	"otherzip": "428010",
      	"otherstreet": "Bulvar Yunosti, 3",
      	"otherpobox": "",
      	"image": ""
      }

      ```
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "token": "MB4S35ETWCRAC3OQINBXBHKGUU",
          "password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_38a86f18a3854531b5509610f9c5c4df
    authentication: {}
    metaSortKey: -1682092427875
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752584161
    created: 1681752584161
    name: user
    description: Operations about user
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1681752584161
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de75ca1604
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1682092606435
    created: 1682002384617
    url: "{{ base_url }}/users/restore"
    name: Restore Password
    description: >-
      If you forgot password in portal, you can send json with email field. Then
      system will send an email to provided address with token link inside it.


      Example request body:


      ```json

      {
        "email": "emelyanov86@km.ru"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "email": "se@sergeyem.ru"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_442c4140830040aa823cf438bee63491
    authentication: {}
    metaSortKey: -1682002384617
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de94b9a1a1
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1682236484462
    created: 1681838399470
    url: "{{ base_url }}/users/my"
    name: Get data about authenticated user
    description: >-
      In this endpoint you can get profile data about current authenticated
      user. You need to pass only GET request without any params. But you MUST
      provide authorization bearer token.


      Example response:

      ```json

      {
      	"id": 4,
      	"crmid": "12x11",
      	"firstname": "Sergei",
      	"lastname": "Emelianov",
      	"description": "",
      	"account_id": "11x6",
      	"account_name": "",
      	"title": "Director",
      	"department": "Management",
      	"email": "se@sergeyem.ru",
      	"created_at": "2023-04-17T17:44:09Z",
      	"updated_at": "2023-04-17T17:44:09Z",
      	"is_active": false,
      	"mailingcity": "Cheboksary",
      	"mailingstreet": "Bulvar Yunosti, 3",
      	"mailingcountry": "Russia",
      	"othercountry": "Russia",
      	"mailingstate": "Chuvashia",
      	"mailingpobox": "",
      	"othercity": "Cheboksary",
      	"otherstate": "Chuvashia",
      	"mailingzip": "428010",
      	"otherzip": "428010",
      	"otherstreet": "Bulvar Yunosti, 3",
      	"otherpobox": "",
      	"image": "",
      	"imageattachmentids": "12x42",
      	"imagecontent": "FDFWEREREFWD"
      }

      ```


      Note, that here is stored ID of attached image. To get a base64 decoded image, you need to send additional response.


      If you will not provide token or provide wrong one, you will get 403 status with message:


      ```json

      {
      	"error": "Token Error",
      	"field": "Bearer",
      	"message": "Wrong Token in authorization header"
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_e691c6b54ceb4f55aa5bf8004e1b456f
        name: Accept
        value: application/json
        description: ""
      - id: pair_aba2096e90e34148b6344199f0e566bd
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1681838399470
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de740025cb
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1681827945965
    created: 1681827945965
    url: "{{ base_url }}/users/logout"
    name: Logs out current logged in user session
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1681827945965
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de00ac9da2
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1682010433337
    created: 1681827520782
    url: "{{ base_url }}/users/login"
    name: Login in system
    description: >-
      Authorisation endpoint, allows user to get a Bearer token from system.
      Example response with status code 201:


      ```json

      {
      	"id": 1,
      	"token": "WHXDXIXGAMFFYE76DBY6DHUWJY",
      	"expiry": "2023-07-17T16:33:29.670530331+02:00"
      }

      ```


      To get a bearer token, you need to pass email and password in request body:


      ```json

      {
        "email": "se@sergeyem.ru",
        "password": "1qaz2wsx"
      }

      ```


      In case you passed incorrect password, you will get 422 error with example json:


      ```json

      {
      	"error": "Validation Error",
      	"field": "password",
      	"message": "Password you passed to us is incorrect"
      }

      ```


      If you passed wrong or incorrect email, you will get 400 error with content:

      ```json

      {
      	"error": "Validation Error",
      	"field": "Email",
      	"message": "Key: 'UserSignInInput.Email' Error:Field validation for 'Email' failed on the 'email' tag"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "email": "se@sergeyem.ru",
          "password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_9c3cbbca3ddf46fe8f1e8a0fafa6fcee
      - id: pair_8a676909b6184d22a3c688567414753d
        name: Accept
        value: application/json
        description: ""
    authentication: {}
    metaSortKey: -1681827520782
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211defe3d55d0
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1682001735558
    created: 1681752584137
    url: "{{ base_url }}/users"
    name: Create user
    description: >-
      Registration endpoint. Accept following required fields:

      * email - contact email in Vtiger

      * code - registration code, stored in vtiger contact.

      * password - minimum 8 characters for future authorisation


      Example request

      ```json

      {
      	"email": "se@sergeyem.ru",
      	"code": "1134",
      	"password": "1qaz2wsx"
      }

      ```


      In case of validation error, returns status 400 with example response:

      ```json

      {
      	"error": "Validation Error",
      	"field": "Password",
      	"message": "Key: 'UserSignUpInput.Password' Error:Field validation for 'Password' failed on the 'min' tag"
      }

      ```


      Example of success response:

      ```json

      {
      	"id": 4,
      	"crmid": "12x11",
      	"firstname": "Sergei",
      	"lastname": "Emelianov",
      	"description": "",
      	"account_id": "11x6",
      	"account_name": "",
      	"title": "Director",
      	"department": "Management",
      	"email": "se@sergeyem.ru",
      	"created_at": "2023-04-17T19:44:08.791999494+02:00",
      	"updated_at": "2023-04-17T19:44:08.791999601+02:00",
      	"is_active": false,
      	"mailingcity": "Cheboksary",
      	"mailingstreet": "Bulvar Yunosti, 3",
      	"mailingcountry": "Russia",
      	"othercountry": "Russia",
      	"mailingstate": "Chuvashia",
      	"mailingpobox": "",
      	"othercity": "Cheboksary",
      	"otherstate": "Chuvashia",
      	"mailingzip": "428010",
      	"otherzip": "428010",
      	"otherstreet": "Bulvar Yunosti, 3",
      	"otherpobox": "",
      	"image": ""
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"email": "se@sergeyem.ru",
        	"code": "1134",
        	"password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_e7f38670bc6d43399150e6c8704932f3
      - id: pair_c93d6c0444da43de8b5ead7e4db71887
        name: Accept
        value: application/json
        description: ""
    authentication: {}
    metaSortKey: -1681752584137
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_7051e4988ba662848196b333737a56823b214220
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752522266
    created: 1681752522266
    name: Base Environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1681752522266
    _type: environment
  - _id: jar_7051e4988ba662848196b333737a56823b214220
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752522267
    created: 1681752522267
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_034c419a866f48258ca444d906a7a806
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682251033807
    created: 1681752522263
    fileName: Vtiger Customer Portal
    contents: >
      openapi: 3.0.0

      info:
        description: "This is API documentation for Vtiger custmer portal service. This is only client for Vtiger API. This is a place for your customers to see and update tickets, view past quotes and invoices, and share files. The customer portal is a self-service portal where customers can get their business-related questions answered."
        version: 1.0.2
        title: Vtiger Go Customer Portal
        termsOfService: http://swagger.io/terms/
        contact:
          email: se@sergeyem.ru
        license:
          name: Apache 2.0
          url: http://www.apache.org/licenses/LICENSE-2.0.html
      tags:
        - name: user
          description: Operations with users, mapped to contacts module
          externalDocs:
            description: Contacts module
            url: https://www.vtiger.com/features/contact-management/
        - name: support
          description: Technical stuff for analytics and checking portal status
        - name: manager
          description: Users module in vtiger, getting info about assigned managers
        - name: module
          description: Module informations with all data in it
        - name: tickets
          description: Operations with HelpDesk module
      paths:
        /users:
          post:
            tags:
              - user
            summary: Create user
            description: Here you can register new contact in portal using activation code
            operationId: createUser
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
                      password:
                         type: string
                         example: "PasswordHere"
                      code:
                          type: string
                          example: "1122"
              description: Passing email and password you can authorize in system and get bearer token
              required: true
            responses:
              "201":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "400":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/login:
          post:
            tags:
              - user
            summary: Login in system
            description: "Here you can get authentication bearer"
            operationId: loginUser
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
                      password:
                         type: string
                         example: "PasswordHere"
              description: Pass needed data to create new user from contact in Vtiger
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Token"
              "400":
                description: Invalid username/password supplied
        /users/restore:
          post:
            tags:
              - user
            summary: Restore Password
            description: "Send password restore token to email"
            operationId: restorePassword
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
              description: Pass an email address where you receive an email with token link
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/MessageResponse"
              "400":
                description: Invalid email supplied
              "422":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/password:
          put:
            tags:
              - user
            summary: Reset Password
            description: "Reset password usin password reset token"
            operationId: resetPassword
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "FDDD23FDDFKR"
                      password:
                        type: string
                        example: "NewPassword"
              description: Pass a token and new password to update a user
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "400":
                description: Invalid token provided
              "422":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/logout:
          get:
            tags:
              - user
            summary: Logs out current logged in user session
            description: ""
            operationId: logoutUser
            responses:
              default:
                description: successful operation
        /users/my:
          get:
            tags:
              - user
            summary: Get data about authenticated user
            description: You must provide an Authorisation header in order to get currenc user data
            operationId: myUser
            security:
              - bearerAuth: []
            responses:
              "201":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "401":
                description: anonymous access
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error:
                          type: string
                          example: "Anonymous Access"
                        field:
                          type: string
                          example: "crmid"
                        message:
                          type: string
                          example: "Got anonymous user from token or user without crmid"
        "/managers/{managerId}":
          get:
            tags:
              - manager
            summary: Find manager by ID
            description: Returns a single manager
            operationId: getManagerById
            security:
              - bearerAuth: []
            parameters:
              - name: managerId
                in: path
                description: ID of manager to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Manager"
              "400":
                description: Invalid ID supplied
              "404":
                description: Manager not found
        "/modules/{moduleName}":
          get:
            tags:
              - module
            summary: Module Info
            description: Get all information about module by it name
            operationId: describeModule
            security:
              - bearerAuth: []
            parameters:
              - name: moduleName
                in: path
                description: Name of module to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Module"
              "400":
                description: Invalid Name supplied
              "404":
                description: Module not found
              "500":
                description: Vtiger error response
        /ping:
          get:
            tags:
              - support
            summary: Status of application
            description: Get response with full status of application
            operationId: ping
            responses:
              "200":
                description: successfull operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/MessageResponse"
        /company:
          get:
            tags:
              - support
            summary: Get company data
            description: All company information stored in company details of Vtiger. Accessable without bearer token.
            operationId: companyDetails
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Company"
        "/tickets/{ticketId}":
          get:
            tags:
              - tickets
            summary: Find HelpDesk by ID
            description: Returns a single ticket
            operationId: getHelpDeskById
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/HelpDesk"
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
        "/tickets/{ticketId}/comments":
          get:
            tags:
              - tickets
            summary: Related comments from ticket
            description: Returns an array of comments from related ticket
            operationId: getCommentsFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Comment"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
        "/tickets/{ticketId}/documents":
          get:
            tags:
              - tickets
            summary: Related documents from ticket
            description: Returns an array of documents from related ticket
            operationId: getDocumentsFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Document"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
        "/tickets/{ticketId}/file/{fileId}":
          get:
            tags:
              - tickets
            summary: Get file in Ticket
            description: Returns an array of documents from related ticket
            operationId: getFileFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: fileId
                in: path
                description: ID of file
                required: true
                schema:
                  type: string
                  format: string
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/File"                
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk or file not found
              "403":
                description: Operation not permitted
        "/tickets":
          post:
              tags:
                - tickets
              summary: Create new ticket
              description: Allows authorized user create new ticket and send it to Vtiger CRM.
              operationId: createTicket
              security:
                - bearerAuth: []
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        ticket_title:
                          description: Title of ticket
                          type: string
                          example: "Problem with internet"
                        ticketpriorities:
                          description: Proirity of ticket
                          type: string
                          example: "Normal"
                        ticketseverities:
                          description: Severity of ticket
                          type: string
                          example: "Minor"
                        ticketcategories:
                          description: Category of ticket
                          type: string
                          example: "Big Problem"
                        description:
                          description: Some description of ticket
                          type: string
                          example: "There are no internet in my appartment."
              responses:
                "201":
                  description: Ticket created
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/HelpDesk"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: HelpDesk or file not found
                "403":
                  description: Operation not permitted
          get:
            tags:
              - tickets
            summary: Get Tickets
            description: This endpoint returns a list of tickets based on the provided page number and page size.
            operationId: getAllTickets
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/HelpDesk"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
      externalDocs:
        description: Find out more about Swagger
        url: http://swagger.io
      servers:
        - url: http://127.0.0.1:4045/api/v1
      components:
        securitySchemes:
          bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: Token
        responses:
          UnauthorizedError:
            description: Access token is missing or invalid
            content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error:
                          type: string
                          example: "Anonymous Access"
                        field:
                          type: string
                          example: "crmid"
                        message:
                          type: string
                          example: "Got anonymous user from token or user without crmid"
        requestBodies:
          UserArray:
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
            description: List of user object
            required: true
        schemas:
          User:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              crmid:
                type: string
                example: "12x11"
              firstname:
                type: string
                example: "Ivan"
              lastname:
                type: string
                example: "Ivanov"
              description:
                type: string
                example: "This is description of contact"
              account_id:
                type: string
                example: "11x6"
              account_name:
                type: string
                example: "Coca Cola"
              title:
                type: string
                example: "Manager"
              departmant:
                type: string
                example: "Management"
              created_at:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
              updated_at:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
              is_active:
                type: boolean
              mailingcity:
                type: string
                example: "Moscow"
              email:
                type: string
                example: "emelyanov86@km.ru"
              password:
                type: string
              mailingstreet:
                type: string
                example: "Repina street, 143"
              mailingcountry:
                type: string
                example: "Russia"
              mailingstate:
                type: string
                example: "Chuvashia"
              image:
                type: string
              imagecontent:
                type: string
            xml:
              name: User
          Manager:
            type: object
            properties:
              id:
                type: string
                example: "19x1"
              user_name:
                type: string
                example: "jdoe"
              first_name:
                type: string
                example: "John"
              last_name:
                type: string
                example: "Doe"
              email2:
                type: string
                example: "john.doe@example.com"
              title:
                type: string
                example: "Project Manager"
              phone_work:
                type: string
                example: "+1 555 123456"
              department:
                type: string
                example: "IT Department"
              description:
                type: string
                example: "Responsible for managing IT projects."
              address_street:
                type: string
                example: "123 Main St"
              address_city:
                type: string
                example: "New York"
              address_state:
                type: string
                example: "NY"
              address_postalcode:
                type: string
                example: "10001"
              address_country:
                type: string
                example: "USA"
              imagename:
                type: string
                example: "johndoe.jpg"
                
          Token:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              token:
                type: string
                example: "DSR24DSRDWEFR"
              expiry:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
          ApiResponse:
            type: object
            properties:
              code:
                type: integer
                format: int32
              type:
                type: string
              message:
                type: string
          ValidationResponse:
            type: object
            properties:
              message:
                type: string
                example: "Key: 'UserSignUpInput.Password' Error:Field validation for 'Password' failed on the 'min' tag"
              field:
                type: string
                example: "Password"
              error:
                type: string
                example: "Validation Error"
          MessageResponse:
            type: object
            properties:
              message:
                type: string
                example: "Response was success"
              success:
                type: boolean
                example: true
          Module:
            type: object
            properties:
              label:
                type: string
                example: "Invoices"
              name:
                type: string
                example: "Invoice"
              createable:
                type: boolean
                example: true
              updateable:
                type: boolean
                example: true
              deleteable:
                type: boolean
                example: true
              retrieveable:
                type: boolean
                example: true
              fields:
                type: array
                items:
                  $ref: '#/components/schemas/ModuleField'
                example:
                  - name: "subject"
                    label: "Subject"
                    mandatory: true
                    isunique: true
                    nullable: false
                    editable: true
                    default: ""
                  - name: "duedate"
                    label: "Due Date"
                    mandatory: false
                    isunique: false
                    nullable: true
                    editable: true
                    default: "default2"
              idPrefix:
                type: string
                example: "2"
              isEntity:
                type: boolean
                example: true
              allowDuplicates:
                type: boolean
                example: false
              labelFields:
                type: string
                example: "subject"
          ModuleField:
            type: object
            properties:
              name:
                type: string
                example: "invoicestatus"
              label:
                type: string
                example: "Invoice Status"
              mandatory:
                type: boolean
                example: true
              isunique:
                type: boolean
                example: true
              nullable:
                type: boolean
                example: false
              editable:
                type: boolean
                example: true
              default:
                type: string
                example: "Created"
          HelpDesk:
            type: object
            properties:
              ticket_no:
                type: string
                example: TICKET_28
              assigned_user_id:
                type: string
                example: 19x1
              parent_id:
                type: string
                example: 11x329
              ticketpriorities:
                type: string
                example: Normal
              product_id:
                type: string
                example: ''
              ticketseverities:
                type: string
                example: ''
              ticketstatus:
                type: string
                example: Open
              ticketcategories:
                type: string
                example: ''
              hours:
                type: number
                example: 0.00000000
              days:
                type: number
                example: 0.00000000
              createdtime:
                type: string
                format: date-time
                example: '2017-02-08T10:56:07Z'
              modifiedtime:
                type: string
                format: date-time
                example: '2018-07-13T18:55:51Z'
              from_portal:
                type: string
                example: '0'
              modifiedby:
                type: string
                example: 19x1
              ticket_title:
                type: string
                example: Problem with emails
              description:
                type: string
                example: They are not attached to client
              solution:
                type: string
                example: Solution not provided yet
              contact_id:
                type: string
                example: ''
              created_user_id:
                type: string
                example: 19x1
              source:
                type: string
                example: IMPORT
              starred:
                type: boolean
                example: false
              tags:
                type: array
                example: ["test1", "test2"]
              id:
                type: string
                example: 17x923
              label:
                type: string
                example: Problem with emails
          Comment:
            type: "object"
            properties:
              id:
                type: "string"
                example: "37x123"
              commentcontent:
                type: "string"
                example: "This is a test comment."
              source:
                type: "string"
                example: "CRM"
              customer:
                type: "string"
                example: "11x456"
              userid:
                type: "string"
                example: "19x789"
              reasontoedit:
                type: "string"
                example: "Typo fix"
              creator:
                type: "string"
                example: "19x123"
              assigned_user_id:
                type: "string"
                example: "19x456"
              createdtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21T10:00:00Z"
              modifiedtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21T10:15:00Z"
              related_to:
                type: "string"
                example: "17x923"
              parent_comments:
                type: "string"
                example: ""
              is_private:
                type: "boolean"
                example: false
              filename:
                type: "string"
                example: "attachment.txt"
              related_email_id:
                type: "string"
                example: "eml-654"
          Document:
            type: "object"
            properties:
              notes_title:
                type: "string"
                example: "Sample Document"
              createdtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21 10:00:00"
              modifiedtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21 10:15:00"
              filename:
                type: "string"
                example: "document.pdf"
              assigned_user_id:
                type: "string"
                example: "19x1"
              notecontent:
                type: "string"
                example: "This is a sample document content."
              filetype:
                type: "string"
                example: "application/pdf"
              filesize:
                type: "string"
                example: "1024"
              filelocationtype:
                type: "string"
                example: "I"
              fileversion:
                type: "string"
                example: "1.0"
              filestatus:
                type: "string"
                example: "1"
              filedownloadcount:
                type: "string"
                example: "5"
              folderid:
                type: "string"
                example: "22x1"
              note_no:
                type: "string"
                example: "DOC1"
              modifiedby:
                type: "string"
                example: "19x1"
              source:
                type: "string"
                example: "CRM"
              starred:
                type: "boolean"
                example: false
              tags:
                type: "array"
                items:
                  type: "string"
                example: ["tag1", "tag2"]
              id:
                type: "string"
                example: "15x40"
              imageattachmentids:
                type: "string"
                example: "15x41"
          File:
            type: "object"
            properties:
              fileid:
                type: "string"
                example: "file-123"
              filename:
                type: "string"
                example: "example.txt"
              filetype:
                type: "string"
                example: "text/plain"
              filesize:
                type: "integer"
                format: "int32"
                example: 1024
              filecontent:
                type: "string"
                example: "This is the content of the file."
          Company:
            type: object
            properties:
              organizationname:
                type: string
                example: "Индивидуальный предприниматель Емельянов Сергей Петрович"
              address:
                type: string
                example: "Бульвар Юности, д. 3, кв. 251"
              city:
                type: string
                example: "Чебоксары"
              state:
                type: string
                example: "Чувашия"
              country:
                type: string
                example: "Россия"
              code:
                type: string
                example: "428034"
              phone:
                type: string
                example: "+78432023893"
              fax:
                type: string
                example: "+78352223606"
              website:
                type: string
                example: "https://itvolga.com"
              logoname:
                type: string
                example: "logo.png"
              logo:
                type: string
                example: ''
              vatid:
                type: string
                example: ''
              inn:
                type: string
                example: "212802719116"
              kpp:
                type: string
                example: "0"
              bankaccount:
                type: string
                example: "40802810602500022487"
              bankname:
                type: string
                example: 'ТОЧКА ПАО БАНКА "ФК ОТКРЫТИЕ"'
              bankid:
                type: string
                example: "044525999"
              corraccount:
                type: string
                example: "30101810845250000999"
              director:
                type: string
                example: "Емельянов С.П."
              bookkeeper:
                type: string
                example: "Емельянов С.П."
              entepreneur:
                type: string
                example: "Емельянов Сергей Петрович"
              entepreneurreg:
                type: string
                example: "308213034700026"
              okpo:
                type: string
                example: "0157757201"
              id:
                type: string
                example: "23x1"
    contentType: yaml
    _type: api_spec
  - _id: env_env_7051e4988ba662848196b333737a56823b214220_sub
    parentId: env_7051e4988ba662848196b333737a56823b214220
    modified: 1682232639925
    created: 1681752584168
    name: OpenAPI env
    data:
      scheme: http
      base_path: /api/v1
      host: 127.0.0.1:4050
      bearerToken: DJWC32V7MAGCRDT27RVTVLPSQA
      URL: http://127.0.0.1:4050/api/v1
      MAIN_URL: http://127.0.0.1:4050
      managerId: 19x1
      moduleName: HelpDesk
      fileId: 15x46
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - URL
        - MAIN_URL
        - bearerToken
        - managerId
        - moduleName
        - fileId
    color: null
    isPrivate: false
    metaSortKey: 1681752584168
    _type: environment
  - _id: env_1bfede95dc144997a9155f6e79a3eaa5
    parentId: env_7051e4988ba662848196b333737a56823b214220
    modified: 1682232632967
    created: 1681826841922
    name: Local
    data:
      scheme: http
      base_path: /api/v1
      host: 127.0.0.1:4050
      URL: http://127.0.0.1:4050/api/v1
      MAIN_URL: http://127.0.0.1:4050
      bearerToken: OLQDS2TSQFIZJ324MODWT4472Q
      managerId: 19x1
      moduleName: HelpDesk
      ticketId: 17x28
      fileId: 15x46
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - URL
        - MAIN_URL
        - bearerToken
        - managerId
        - moduleName
        - ticketId
        - fileId
    color: null
    isPrivate: false
    metaSortKey: 1681826841922
    _type: environment
