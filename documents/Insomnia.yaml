_type: export
__export_format: 4
__export_date: 2023-06-03T06:08:14.104Z
__export_source: insomnia.desktop.app:v2022.4.2
resources:
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de074600fd
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de3d18b2ea
    modified: 1685358715076
    created: 1684649257100
    url: "{{ base_url }}/statistics"
    name: Statistics
    description: |-
      Gettint all statistics data for portal widgets

      Example response:

      ```json
      {
      	"data": {
      		"tickets": {
      			"total": 3,
      			"Open": 2,
      			"In Progress": 1,
      			"Wait For Response": 0,
      			"Closed": 0,
      			"Open-hours": 7.6,
      			"Open-days": 2.6,
      			"In Progress-hours": 5,
      			"In Progress-days": 0,
      			"Wait For Response-hours": 0,
      			"Wait For Response-days": 0,
      			"Closed-Hours": 0,
      			"Closed-Days": 0
      		},
      		"projects": {
      			"total": 0,
      			"open": 0,
      			"open_hours": 0,
      			"closed": 0,
      			"closed_hours": 0
      		},
      		"tasks": {
      			"total": 0,
      			"open": 0,
      			"open-hours": 0,
      			"In Progress": 0,
      			"In Progress-hours": 0,
      			"Completed": 0,
      			"Completed-hours": 0
      		},
      		"invoices": {
      			"total_qty": 0,
      			"total_sum": 0,
      			"open_qty": 0,
      			"open_sum": 0,
      			"paid_qty": 0,
      			"paid_sum": 0
      		}
      	}
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_d32aa0dd617d4e978c6dafaaa68808aa
        name: Accept
        value: application/json
        description: ""
      - id: pair_ace14ef02dcd4a0e8c0494b026dd9203
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684649257100
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de3d18b2ea
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1684649257152
    created: 1684649257152
    name: statistics
    description: Endpoints for dashboards
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1684649257152
    _type: request_group
  - _id: wrk_66e74e4b495c4404841a78c723c211de
    parentId: null
    modified: 1681752522262
    created: 1681752522262
    name: Vtiger Customer Portal
    description: ""
    scope: design
    _type: workspace
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de6c65dc60
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685772418020
    created: 1685770578025
    url: "{{ base_url }}/projects/{{ projectId }}/tasks/{{ taskId }}"
    name: Task Update
    description: |-
      Feature for partly update of project task

      Example request:
      ```json
      {
        "projecttaskstatus": "Closed",
        "projecttaskname": "Need to fix issue",
        "description": "There is very big problem",
        "projecttaskpriority": "Urgent",
        "projecttasktype": "administrative"
      }
      ```

      Example response:
      ```json
      {
      	"projecttaskname": "Need to fix issue",
      	"projecttasktype": "administrative",
      	"projecttaskpriority": "Urgent",
      	"projectid": "29x54",
      	"assigned_user_id": "19x1",
      	"projecttasknumber": "2",
      	"projecttask_no": "PT1",
      	"projecttaskprogress": "20%",
      	"projecttaskhours": "18",
      	"startdate": "2023-04-30T00:00:00Z",
      	"enddate": "2023-05-23T00:00:00Z",
      	"createdtime": "2023-04-28T06:07:22Z",
      	"modifiedtime": "2023-06-03T06:06:12Z",
      	"description": "There is very big problem",
      	"source": "CRM",
      	"starred": false,
      	"tags": [
      		""
      	],
      	"projecttaskstatus": "Closed",
      	"id": "28x56",
      	"label": "Need to fix issue"
      }
      ```
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
          "projecttaskstatus": "Closed",
          "projecttaskname": "Need to fix issue",
          "description": "There is very big problem",
          "projecttaskpriority": "Urgent",
          "projecttasktype": "administrative"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_f3617631f654414ea4d19c704f474982
      - id: pair_970078c553eb4e998a7812788409b51b
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1685770578025
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1684500052715
    created: 1684500052715
    name: project
    description: Project module in Vtiger CRM
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1684500052715
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deb0d90dd1
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685684665879
    created: 1685638229603
    url: "{{ base_url }}/projects/{{ projectId }}/tasks"
    name: Create new task
    description: >-
      Here you can create project task, attached to project. Note, that after
      creation status field will be default. You do not need to pass it.


      Example request:

      ```json

      {
        "projecttaskname": "Landing page creation",
        "projecttasktype": "administrative",
        "projecttaskpriority": "normal",
        "description": "Need to create creative landing for our key services"
      }

      ```


      Example response:

      ```json

      {
      	"projecttaskname": "Landing page creation",
      	"projecttasktype": "administrative",
      	"projecttaskpriority": "normal",
      	"projectid": "29x54",
      	"assigned_user_id": "19x1",
      	"projecttasknumber": "0",
      	"projecttask_no": "PT4",
      	"projecttaskprogress": "10%",
      	"projecttaskhours": "",
      	"startdate": "0001-01-01T00:00:00Z",
      	"enddate": "0001-01-01T00:00:00Z",
      	"createdtime": "2023-06-01T16:54:17Z",
      	"modifiedtime": "2023-06-01T16:54:17Z",
      	"description": "Need to create creative landing for our key services",
      	"source": "PORTAL",
      	"starred": false,
      	"tags": [
      		""
      	],
      	"projecttaskstatus": "Open",
      	"id": "28x94",
      	"label": "Landing page creation"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "projecttaskname": "Landing page creation",
          "projecttasktype": "administrative",
          "projecttaskpriority": "normal",
          "description": "Need to create creative landing for our key services"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_af1834fa6a9f43e3879f87384edd9998
      - id: pair_38d01a75c3514a6a9bfba2599131a92c
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1685638229603
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deed91bbf7
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684583594109
    created: 1684566934469
    url: "{{ base_url }}/projects/{{ projectId }}/tasks"
    name: Get Project Tasks
    description: >-
      Here you can get all project tasks from related project. Note, that all
      permissions checked based on project, if user is allowed to see project or
      not.


      Example response:


      ```json

      {
      	"data": [
      		{
      			"projecttaskname": "Install hosting",
      			"projecttasktype": "administrative",
      			"projecttaskpriority": "low",
      			"projectid": "29x54",
      			"assigned_user_id": "19x1",
      			"projecttasknumber": "2",
      			"projecttask_no": "PT1",
      			"projecttaskprogress": "20%",
      			"projecttaskhours": "15 some",
      			"startdate": "2023-04-30T00:00:00Z",
      			"enddate": "2023-05-23T00:00:00Z",
      			"createdtime": "2023-04-28T06:07:22Z",
      			"modifiedtime": "2023-05-19T18:30:49Z",
      			"description": "Some descr",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"projecttaskstatus": "Open",
      			"id": "28x56",
      			"label": ""
      		},
      		{
      			"projecttaskname": "Framework installation and setup",
      			"projecttasktype": "administrative",
      			"projecttaskpriority": "normal",
      			"projectid": "29x54",
      			"assigned_user_id": "19x1",
      			"projecttasknumber": "0",
      			"projecttask_no": "PT2",
      			"projecttaskprogress": "10%",
      			"projecttaskhours": "13",
      			"startdate": "2023-05-02T00:00:00Z",
      			"enddate": "2023-05-05T00:00:00Z",
      			"createdtime": "2023-04-28T06:07:55Z",
      			"modifiedtime": "2023-04-28T06:07:55Z",
      			"description": "This is installation only",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"projecttaskstatus": "Open",
      			"id": "28x57",
      			"label": ""
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_a480914d95d04f5da3b5a5e27968cab0
      - name: size
        disabled: true
        value: "20"
        id: pair_2988274cb64d4880b228080f47a672db
    headers:
      - id: pair_43f30568ad674245a1edb1ac94aaeb54
        name: Accept
        value: application/json
        description: ""
      - id: pair_e54fbb184f8f48ac9b871c99979ee01e
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684566934469
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de597c735f
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684590648606
    created: 1684566934462
    url: "{{ base_url }}/projects/{{ projectId }}/tasks/{{ taskId }}/comments"
    name: Project Task Comments
    description: >-
      List of all related comments from project task. Note, that you need to
      pass also project id, to check contact permissions.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"id": "32x68",
      			"commentcontent": "This is test comment",
      			"source": "CRM",
      			"customer": "",
      			"userid": "",
      			"reasontoedit": "",
      			"creator": "19x1",
      			"assigned_user_id": "19x1",
      			"createdtime": "2023-05-20T07:17:13Z",
      			"modifiedtime": "2023-05-20T07:17:13Z",
      			"related_to": "28x56",
      			"parent_comments": "",
      			"is_private": false,
      			"filename": "0",
      			"related_email_id": "0"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_bb92f18126e34dd59a63c0372dc32c2c
        name: Accept
        value: application/json
        description: ""
      - id: pair_75a00e6fe12c4f30a791d9181c6e2213
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684566934462
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de1658ebcf
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685338663818
    created: 1684566934449
    url: "{{ base_url }}/projects/{{ projectId }}/tasks/{{ taskId }}/comments"
    name: Add comment
    description: |-
      Post comment to project task

      Example response:

      ```json
      {
        "commentcontent": "Please fix problem ASAP"
      }
      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "commentcontent": "Please fix problem ASAP"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_706feb9eec0a4a3090597fe22aca0e3c
      - id: pair_736ff2dfdc1042b2ad85d55fc8510071
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684566934449
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211dedb7dde10
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684567288523
    created: 1684566934447
    url: "{{ base_url }}/projects/{{ projectId }}/tasks/{{ taskId }}/documents"
    name: Project Task Documents
    description: |-
      Here you can get list of all documents, attached to project task.

      Example response:
      ```json
      {
      	"data": [
      		{
      			"notes_title": "ProfileStandard",
      			"createdtime": "2023-05-20T07:20:39Z",
      			"modifiedtime": "2023-05-20T07:20:39Z",
      			"filename": "ProfileStandard.jsfile.txt",
      			"assigned_user_id": "19x1",
      			"notecontent": "",
      			"filetype": "application/x-javascript",
      			"filesize": "60592",
      			"filelocationtype": "I",
      			"fileversion": "",
      			"filestatus": "1",
      			"filedownloadcount": "",
      			"folderid": "22x1",
      			"note_no": "DOC5",
      			"modifiedby": "19x1",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "15x69",
      			"imageattachmentids": "15x70"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_bae89ba2d2cd4bbfb03fb2dafaa36def
        name: Accept
        value: application/json
        description: ""
      - id: pair_2b9c7b721df64bf9b9e509dc65cd2011
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684566934447
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de09d91eb1
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685770578624
    created: 1684500052656
    url: "{{ base_url }}/projects/{{ projectId }}"
    name: Find Project by ID
    description: |-
      Allows to retrieve project by it's ID

      Example response:
      ```json
      {
      	"data": {
      		"projectname": "Website development",
      		"startdate": "2023-04-30T00:00:00Z",
      		"targetenddate": "2023-05-04T00:00:00Z",
      		"actualenddate": "2023-05-31T00:00:00Z",
      		"projectstatus": "in progress",
      		"projecttype": "administrative",
      		"linktoaccountscontacts": "11x6",
      		"project_no": "PROJ1",
      		"targetbudget": "111000fdf fdgfd",
      		"projecturl": "https://sergeyem.ru",
      		"projectpriority": "normal",
      		"progress": "10%",
      		"isconvertedfrompotential": false,
      		"potentialid": "13x14",
      		"created_time": "2023-04-28T06:03:56Z",
      		"modified_time": "2023-05-25T06:22:51Z",
      		"assigned_user_id": "19x1",
      		"description": "This is test project",
      		"source": "",
      		"starred": false,
      		"tags": [
      			""
      		],
      		"id": "29x54",
      		"label": "Website development",
      		"statistics": {
      			"total_tasks": 3,
      			"total_hours": 31,
      			"open_tasks": 3,
      			"low_tasks": 1,
      			"normal_tasks": 2
      		}
      	}
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_90b36b777d734ee58135bda99ecb3489
        name: Accept
        value: application/json
        description: ""
      - id: pair_9cc79ef1d82040d296cccd573f4a84b8
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052708
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de8d9cdc46
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685638230272
    created: 1684500052658
    url: "{{ base_url }}/projects"
    name: Get Projects
    description: >-
      Allows to get list of all projects. Accept also pagination params.

      Also available search functionality, but note: due to vtiger limitations with OR clause, search is available only for attached Accounts to project, not contacts. If Project is attached to concrete contact, it will be not displayed.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"projectname": "Website development",
      			"startdate": "2023-04-30T00:00:00Z",
      			"targetenddate": "2023-05-04T00:00:00Z",
      			"actualenddate": "2023-05-31T00:00:00Z",
      			"projectstatus": "prospecting",
      			"projecttype": "administrative",
      			"linktoaccountscontacts": "11x6",
      			"project_no": "PROJ1",
      			"targetbudget": "111000fdf fdgfd",
      			"projecturl": "https://sergeyem.ru",
      			"projectpriority": "normal",
      			"progress": "10%",
      			"isconvertedfrompotential": false,
      			"potentialid": "13x14",
      			"created_time": "2023-04-28T06:03:56Z",
      			"modified_time": "2023-05-19T12:46:19Z",
      			"assigned_user_id": "19x1",
      			"description": "This is test project",
      			"source": "",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "29x54",
      			"label": ""
      		},
      		{
      			"projectname": "Documents preparation",
      			"startdate": "2023-05-02T00:00:00Z",
      			"targetenddate": "2023-05-05T00:00:00Z",
      			"actualenddate": "0001-01-01T00:00:00Z",
      			"projectstatus": "initiated",
      			"projecttype": "administrative",
      			"linktoaccountscontacts": "11x6",
      			"project_no": "PROJ2",
      			"targetbudget": "133",
      			"projecturl": "",
      			"projectpriority": "low",
      			"progress": "20%",
      			"isconvertedfrompotential": false,
      			"potentialid": "",
      			"created_time": "2023-04-28T06:04:37Z",
      			"modified_time": "2023-04-28T06:04:37Z",
      			"assigned_user_id": "19x1",
      			"description": "This is another test",
      			"source": "",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "29x55",
      			"label": ""
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: false
        value: "1"
        id: pair_491a66276de743d6bcc0320583aafd4c
      - name: size
        disabled: false
        value: "20"
        id: pair_61d53eb2a1374bf79da28d34c6c3ad7e
      - name: sort
        disabled: true
        value: project_no
        id: pair_f3908a90e06b42538ae8bb9542117618
      - name: search
        disabled: true
        value: PROJ2
        id: pair_8a23d75d547049b0957a8ffb6296205f
    headers:
      - id: pair_2eceff9f1a4e4ea6826f6a348aeeb387
        name: Accept
        value: application/json
        description: ""
      - id: pair_ebfe9ecb16f142f5831253aa8a47c6db
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052658
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deeb0e336e
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684500569450
    created: 1684500052652
    url: "{{ base_url }}/projects/{{ projectId }}/comments"
    name: Related comments from project
    description: |-
      Get list of comments, attached to project

      Example response:
      ```json
      {
      	"data": [
      		{
      			"id": "32x63",
      			"commentcontent": "This is test comment",
      			"source": "CRM",
      			"customer": "",
      			"userid": "",
      			"reasontoedit": "",
      			"creator": "19x1",
      			"assigned_user_id": "19x1",
      			"createdtime": "2023-05-19T12:48:41Z",
      			"modifiedtime": "2023-05-19T12:48:41Z",
      			"related_to": "29x54",
      			"parent_comments": "",
      			"is_private": false,
      			"filename": "0",
      			"related_email_id": "0"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_0d63f10aa45244b7bc8c53826bc4e9e6
        name: Accept
        value: application/json
        description: ""
      - id: pair_b581d8515521408daf70527a00672b8f
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052652
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de2af8354f
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1685288626222
    created: 1684500052649
    url: "{{ base_url }}/projects/{{ projectId }}/comments"
    name: Add comment
    description: |-
      Allows you to add new comment to current project. Example request:
      ```json
      {
        "commentcontent": "Please fix problem ASAP"
      }
      ```

      Example response:
      ```json
      {
      	"data": {
      		"id": "32x65",
      		"commentcontent": "Tired to wait",
      		"source": "PORTAL",
      		"customer": "12x11",
      		"userid": "",
      		"reasontoedit": "",
      		"creator": "19x1",
      		"assigned_user_id": "19x1",
      		"createdtime": "2023-05-19T12:52:01Z",
      		"modifiedtime": "2023-05-19T12:52:01Z",
      		"related_to": "29x54",
      		"parent_comments": "",
      		"is_private": false,
      		"filename": "",
      		"related_email_id": "0"
      	}
      }
      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "commentcontent": "Tired to wait"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_07d3909b63d34587910c737a571f1889
      - id: pair_bf4f4d7a29c24f96beb0076b7691d8dc
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052649
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de9e555e50
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684500984395
    created: 1684500052645
    url: "{{ base_url }}/projects/{{ projectId }}/documents"
    name: Related documents from project
    description: >-
      Getting list of all attached documents. Note, in this response there is no
      content of file. To get content, send separate request.

      ```json

      {
      	"data": [
      		{
      			"notes_title": "getUser",
      			"createdtime": "2023-05-19T12:53:59Z",
      			"modifiedtime": "2023-05-19T12:53:59Z",
      			"filename": "getUser.ts",
      			"assigned_user_id": "19x1",
      			"notecontent": "",
      			"filetype": "text/vnd.qt.linguist",
      			"filesize": "161",
      			"filelocationtype": "I",
      			"fileversion": "",
      			"filestatus": "1",
      			"filedownloadcount": "",
      			"folderid": "22x1",
      			"note_no": "DOC4",
      			"modifiedby": "19x1",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "15x66",
      			"imageattachmentids": "15x67"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_3fb75483ad4845d9844798ff2a2f57fe
        name: Accept
        value: application/json
        description: ""
      - id: pair_b1feb7be623e43bea09279f4ce4348aa
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052645
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de258f1317
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de98f54143
    modified: 1684504988253
    created: 1684500052642
    url: "{{ base_url }}/projects/{{ projectId }}/file/{{ fileId }}"
    name: Get file in Project
    description: >-
      Allows you to download file by it's id.


      Example response:

      ```json

      {
      	"data": {
      		"fileid": "67",
      		"filename": "getUser.ts",
      		"filetype": "text/vnd.qt.linguist",
      		"filesize": 161,
      		"filecontents": "aW1wb3J0IHsgYXhpb3MgfSBmcm9tICdAL2xpYi9heGlvcyc7CgppbXBvcnQgeyBBdXRoVXNlciB9IGZyb20gJy4uL3R5cGVzJzsKCmV4cG9ydCBjb25zdCBnZXRVc2VyID0gKCk6IFByb21pc2U8QXV0aFVzZXI+ID0+IHsKICByZXR1cm4gYXhpb3MuZ2V0KCcvYXV0aC9tZScpOwp9Owo="
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_f2c8b4c39ad04184b43312c16d609e18
        name: Accept
        value: application/json
        description: ""
      - id: pair_6a4f05de86ee41838d28c59e82669414
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684500052642
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de4ae3365e
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de4cf5bc59
    modified: 1685040646057
    created: 1684494653803
    url: "{{ base_url }}/services"
    name: Get Services
    description: >-
      Allows you to get all services. Note, that you can pass pagination params,
      as well as discontinued filter. By default filter set to true, it means,
      it returns only active services.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"servicename": "Cleaning laptop",
      			"service_no": "SER1",
      			"discontinued": true,
      			"sales_start_date": "2023-04-24T00:00:00Z",
      			"sales_end_date": "2023-05-15T00:00:00Z",
      			"start_date": "2023-05-25T00:00:00Z",
      			"expiry_date": "2023-05-31T00:00:00Z",
      			"website": "https://itvolga.com",
      			"service_usageunit": "Hours",
      			"qty_per_unit": 4,
      			"servicecategory": "Support",
      			"unit_price": 15,
      			"taxclass": "",
      			"commissionrate": 2.5,
      			"purchase_cost": 56.4,
      			"tax2": 10,
      			"tax3": 12.5,
      			"currency1": 15,
      			"currency_id": "21x1",
      			"created_time": "2023-04-26T18:06:58Z",
      			"modified_time": "2023-05-19T06:40:42Z",
      			"assigned_user_id": "19x1",
      			"description": "Some description",
      			"source": "",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "25x52",
      			"label": "Cleaning laptop",
      			"currency": {
      				"id": "21x1",
      				"currency_name": "Euro",
      				"currency_code": "EUR",
      				"currency_symbol": "€",
      				"conversion_rate": 0,
      				"currency_status": "Active",
      				"defaultid": "-11",
      				"deleted": false
      			}
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_272118ca0b4a4f2a957370b77eb3b03d
      - name: size
        disabled: true
        value: "20"
        id: pair_aa7dd2b6106e443cb7e6e5e6f53a26d4
      - name: filter[discontinued]
        disabled: true
        value: "true"
        id: pair_e1c7e202403e4cb584c00a4a783a2a8e
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684494653803
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de4cf5bc59
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1684494653836
    created: 1684494653836
    name: service
    description: Endpoints for getting services from Vtiger.
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1684494653836
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211decdabdf8b
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de4cf5bc59
    modified: 1685080482948
    created: 1684494653802
    url: "{{ base_url }}/services/{{ serviceId }}"
    name: Find Service by ID
    description: >-
      Allows you to get service by it's ID. Note, that by default services has
      no image.


      ```json

      {
      	"data": {
      		"servicename": "Cleaning laptop",
      		"service_no": "SER1",
      		"discontinued": true,
      		"sales_start_date": "2023-04-24T00:00:00Z",
      		"sales_end_date": "2023-05-15T00:00:00Z",
      		"start_date": "2023-05-25T00:00:00Z",
      		"expiry_date": "2023-05-31T00:00:00Z",
      		"website": "https://itvolga.com",
      		"service_usageunit": "Hours",
      		"qty_per_unit": 4,
      		"servicecategory": "Support",
      		"unit_price": 15,
      		"taxclass": "",
      		"commissionrate": 2.5,
      		"purchase_cost": 56.4,
      		"tax2": 10,
      		"tax3": 12.5,
      		"currency1": 15,
      		"currency_id": "21x1",
      		"created_time": "2023-04-26T18:06:58Z",
      		"modified_time": "2023-05-19T06:40:42Z",
      		"assigned_user_id": "19x1",
      		"description": "Some description",
      		"source": "",
      		"starred": false,
      		"tags": [
      			""
      		],
      		"id": "25x52",
      		"label": "Cleaning laptop",
      		"currency": {
      			"id": "21x1",
      			"currency_name": "Euro",
      			"currency_code": "EUR",
      			"currency_symbol": "€",
      			"conversion_rate": 0,
      			"currency_status": "Active",
      			"defaultid": "-11",
      			"deleted": false
      		}
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_bb9f738810b74cccb1cb0b33b46d59c6
        name: Accept
        value: application/json
        description: ""
      - id: pair_523b1c6dd99d44dd898c52e99dfd020a
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684494653802
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de8114b41b
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de38a00715
    modified: 1684477124616
    created: 1684400189086
    url: "{{ base_url }}/products"
    name: Get Products
    description: >-
      Allows to get list of all product with pagination and filter params.
      Accepted filter:

      * `filter[discontinued]` - accept boolean. Should we get not active products or not. By default it is set to true. If value is false, we will show only not-active products
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_a02b2009dd8440ef8cf2b910efedfca7
      - name: size
        disabled: true
        value: "20"
        id: pair_d236621dadb64bb8afe8e9f8387761b5
      - name: filter[discontinued]
        disabled: true
        value: "false"
        id: pair_c483262fd8ba47d685db57a5c927bcd2
    headers:
      - id: pair_0674116b1053427b85f06aff3c337a1c
        name: Accept
        value: application/json
        description: ""
      - id: pair_89bd8e9c6a4944889d91936dd2efadce
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684400189086
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de38a00715
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1684400189124
    created: 1684400189124
    name: product
    description: Product data from vtiger
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1684400189124
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deee15caf7
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de38a00715
    modified: 1684494654331
    created: 1684400189085
    url: "{{ base_url }}/products/{{ productId }}"
    name: Find Product by ID
    description: |-
      Allows to get product by it's ID.

      Example response:

      ```json
      {
      	"data": {
      		"productname": "Keyboard Logitech",
      		"product_no": "PRO1",
      		"productcode": "KEY-112",
      		"discontinued": false,
      		"manufacturer": "MetBeat Corp",
      		"productcategory": "Hardware",
      		"sales_start_date": "2022-09-18T00:00:00Z",
      		"sales_end_date": "2023-05-31T00:00:00Z",
      		"start_date": "2023-05-14T00:00:00Z",
      		"expiry_date": "2023-06-01T00:00:00Z",
      		"website": "https://itvolga.com",
      		"vendor_id": "",
      		"mfr_part_no": "224-ffre",
      		"vendor_part_no": "22--RRR",
      		"serial_no": "3423-21234-324",
      		"productsheet": "Some Sheet",
      		"glacct": "302-Rental-Income",
      		"createdtime": "2022-09-19T09:57:19Z",
      		"modifiedtime": "2023-05-18T09:48:31Z",
      		"unit_price": 50.5,
      		"commissionrate": 2,
      		"taxclass": "",
      		"usageunit": "Each",
      		"qty_per_unit": 6.4,
      		"qtyinstock": 100.6,
      		"reorderlevel": 0,
      		"assigned_user_id": "19x1",
      		"qtyindemand": 0,
      		"description": "fg sfgsagfdsfg sfgsfgsg",
      		"purchase_cost": 500,
      		"starred": false,
      		"id": "14x9",
      		"imageattachmentids": "14x62",
      		"label": "Keyboard Logitech",
      		"currency1": 50.5,
      		"currency_id": "21x1",
      		"currency": {
      			"id": "21x1",
      			"currency_name": "Euro",
      			"currency_code": "EUR",
      			"currency_symbol": "€",
      			"conversion_rate": 0,
      			"currency_status": "Active",
      			"defaultid": "-11",
      			"deleted": false
      		},
      		"imagecontent": ""
      	}
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_ec11eec3fda14b98818d4d1ed407dcf0
        name: Accept
        value: application/json
        description: ""
      - id: pair_ecd9e51c5bd6496db165b5a29d8f117d
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684400189085
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211dea4c3e151
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de0ca7a98c
    modified: 1684400189657
    created: 1684330548698
    url: "{{ base_url }}/service-contracts"
    name: Get All Service contracts
    description: >-
      This endpoint allows to get all service contracts based on pagination
      params


      Example response:


      ```json

      {
      	"data": [
      		{
      			"id": "24x58",
      			"assigned_user_id": "19x1",
      			"start_date": "2023-05-14T00:00:00Z",
      			"end_date": "0001-01-01T00:00:00Z",
      			"sc_related_to": "11x6",
      			"tracking_unit": "Hours",
      			"total_units": 0,
      			"used_units": 0,
      			"subject": "Some test service contract",
      			"due_date": "2023-05-18T00:00:00Z",
      			"planned_duration": 0,
      			"actual_duration": 0,
      			"contract_status": "In Planning",
      			"contract_priority": "Normal",
      			"contract_type": "",
      			"progress": 0,
      			"contract_no": "SERCON1",
      			"createdtime": "2023-05-16T10:52:46Z",
      			"modifiedtime": "2023-05-16T10:52:46Z",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"label": ""
      		},
      		{
      			"id": "24x59",
      			"assigned_user_id": "19x1",
      			"start_date": "2023-05-15T00:00:00Z",
      			"end_date": "2023-05-16T00:00:00Z",
      			"sc_related_to": "12x11",
      			"tracking_unit": "",
      			"total_units": 0,
      			"used_units": 0,
      			"subject": "Second test contract",
      			"due_date": "2023-05-18T00:00:00Z",
      			"planned_duration": 0,
      			"actual_duration": 0,
      			"contract_status": "In Progress",
      			"contract_priority": "High",
      			"contract_type": "Support",
      			"progress": 0,
      			"contract_no": "SERCON2",
      			"createdtime": "2023-05-16T10:53:22Z",
      			"modifiedtime": "2023-05-16T10:53:22Z",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"label": ""
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_22f16a2ba6134e0faba2833f3ccac3fa
      - name: size
        disabled: true
        value: "20"
        id: pair_248ad9504e9c4ef7a89dc5e0c67b8648
    headers:
      - id: pair_c838895e60434023a52e2c44ae178a9e
        name: Accept
        value: application/json
        description: ""
      - id: pair_38e2dc454f3b40e29cce41e6b9fcb997
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684330548698
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de0ca7a98c
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1684238814952
    created: 1684238814952
    name: service-contracts
    description: Service contracts data
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1684238814953
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211debe4cfbb3
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de0ca7a98c
    modified: 1684477456054
    created: 1684238814920
    url: "{{ base_url }}/service-contracts/{{ scId }}"
    name: Find Service Contract by ID
    description: >-
      Here you can get full information about service contract by it's ID.
      Example response:


      ```json

      {
      	"data": {
      		"id": "24x59",
      		"assigned_user_id": "19x1",
      		"start_date": "2023-05-15T00:00:00Z",
      		"end_date": "2023-05-16T00:00:00Z",
      		"sc_related_to": "12x11",
      		"tracking_unit": "",
      		"total_units": 0,
      		"used_units": 0,
      		"subject": "Second test contract",
      		"due_date": "2023-05-18T00:00:00Z",
      		"planned_duration": 0,
      		"actual_duration": 0,
      		"contract_status": "In Progress",
      		"contract_priority": "High",
      		"contract_type": "Support",
      		"progress": 0,
      		"contract_no": "SERCON2",
      		"createdtime": "2023-05-16T10:53:22Z",
      		"modifiedtime": "2023-05-16T10:53:22Z",
      		"starred": false,
      		"tags": [
      			""
      		],
      		"label": "Second test contract"
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_e4f8a2815d344b0fb625186a2960d5c4
        name: Accept
        value: application/json
        description: ""
      - id: pair_196643013f384a4f97dae96a1a1ff493
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684238814920
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de9127d807
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211debaeba7e7
    modified: 1685080146216
    created: 1682659418912
    url: "{{ base_url }}/invoices"
    name: Get Invoices
    description: In order to work correctly, make sure that dates field are required
      in Vtiger
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_ffdcb556596e46cbafc3f38b8aa8efa8
      - name: size
        disabled: true
        value: "20"
        id: pair_7945c57b1f7549428d1c5757539fa58c
    headers:
      - id: pair_9e6ce9a150434956bb54f8ef74ccba6f
        name: Accept
        value: application/json
        description: ""
      - id: pair_4d19daa7cd3c4bcba449f9a525191bf9
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682659418912
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211debaeba7e7
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682578163825
    created: 1682578163825
    name: invoice
    description: Endpoints for getting invoices
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682578163825
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de68d60525
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211debaeba7e7
    modified: 1685080305886
    created: 1682578221793
    url: "{{ base_url }}/invoices/{{ invoiceId }}"
    name: Find Invoice by id
    description: >-
      Here you can get full invoice details by it's ID.


      Example response:


      ```json

      {
      	"data": {
      		"subject": "Some laptops",
      		"salesorder_id": "",
      		"customerno": "",
      		"contact_id": "12x11",
      		"invoicedate": "2023-04-26",
      		"duedate": "2023-05-01",
      		"vtiger_purchaseorder": "",
      		"txtAdjustment": 0,
      		"salescommission": 0,
      		"exciseduty": 0,
      		"hdnSubTotal": 1015,
      		"hdnGrandTotal": 1289.05,
      		"hdnTaxType": "group",
      		"hdnDiscountPercent": "",
      		"hdnDiscountAmount": "",
      		"hdnS_H_Amount": 0,
      		"account_id": "11x6",
      		"invoicestatus": "",
      		"assigned_user_id": "19x1",
      		"createdtime": "2023-04-26 18:07:57",
      		"modifiedtime": "2023-04-26 18:07:57",
      		"modifiedby": "19x1",
      		"currency_id": "21x1",
      		"conversion_rate": 1,
      		"bill_street": "Bulvar Yunosti, 3",
      		"ship_street": "Bulvar Yunosti, 3",
      		"bill_city": "Cheboksary",
      		"ship_city": "Cheboksary",
      		"bill_state": "Chuvashia",
      		"ship_state": "Chuvashia",
      		"bill_code": "428010",
      		"ship_code": "428010",
      		"bill_country": "Russia",
      		"ship_country": "Russia",
      		"bill_pobox": "",
      		"ship_pobox": "",
      		"description": "",
      		"terms_conditions": "- Unless otherwise agreed in writing by the supplier all invoices are payable within thirty (30) days of the date of invoice, in the currency of the invoice, drawn on a bank based in India or by such other method as is agreed in advance by the Supplier.\n\n - All prices are not inclusive of VAT which shall be payable in addition by the Customer at the applicable rate.",
      		"invoice_no": "INV1",
      		"pre_tax_total": 1015,
      		"received": 0,
      		"balance": 1289.05,
      		"hdnS_H_Percent": 0,
      		"potential_id": "",
      		"source": "CRM",
      		"starred": false,
      		"tags": "",
      		"region_id": "0",
      		"id": "2x53",
      		"label": "Some laptops",
      		"shipping_&_handling": 0,
      		"shipping_&_handling_shtax1": 4.5,
      		"shipping_&_handling_shtax2": 10,
      		"shipping_&_handling_shtax3": 12.5,
      		"LineItems": [
      			{
      				"parent_id": "2xArray",
      				"productid": "14x10",
      				"sequence_no": 1,
      				"quantity": 1,
      				"listprice": 1000,
      				"discount_percent": "",
      				"discount_amount": "",
      				"comment": "",
      				"description": "",
      				"incrementondel": true,
      				"tax1": 4.5,
      				"tax2": 10,
      				"tax3": 12.5,
      				"image": "",
      				"purchase_cost": 500,
      				"margin": 500,
      				"id": "33x4",
      				"product_name": "Laptop HP",
      				"entity_type": "Products",
      				"deleted": false
      			},
      			{
      				"parent_id": "2xArray",
      				"productid": "25x52",
      				"sequence_no": 2,
      				"quantity": 1,
      				"listprice": 15,
      				"discount_percent": "",
      				"discount_amount": "",
      				"comment": "",
      				"description": "",
      				"incrementondel": true,
      				"tax1": 4.5,
      				"tax2": 10,
      				"tax3": 12.5,
      				"image": "",
      				"purchase_cost": 0,
      				"margin": 15,
      				"id": "33x5",
      				"product_name": "Cleaning laptop",
      				"entity_type": "Services",
      				"deleted": false
      			}
      		],
      		"LineItems_FinalDetails": {
      			"1": {
      				"checked_discount_zero1": " checked",
      				"comment1": "",
      				"discountTotal1": "0.00",
      				"discount_amount1": 0,
      				"discount_percent1": 0,
      				"entityType1": "Products",
      				"final_details": {
      					"adjustment": "0.00",
      					"chargesAndItsTaxes": {
      						"1": {
      							"taxes": {
      								"1": "4.500",
      								"2": "10.000",
      								"3": "12.500"
      							},
      							"value": "0"
      						}
      					},
      					"deductTaxes": [],
      					"deductTaxesTotalAmount": "0.00",
      					"discountTotal_final": "0.00",
      					"discount_amount_final": "0.00",
      					"discount_percentage_final": 0,
      					"discount_type_final": "zero",
      					"grandTotal": "1289.05",
      					"hdnSubTotal": "1015.00",
      					"preTaxTotal": "1015.00",
      					"sh_taxes": [
      						{
      							"amount": 0,
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": 0,
      							"regions": [],
      							"taxid": "1",
      							"taxlabel": "VAT",
      							"taxname": "shtax1",
      							"type": "Fixed"
      						},
      						{
      							"amount": 0,
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": 0,
      							"regions": [],
      							"taxid": "2",
      							"taxlabel": "Sales",
      							"taxname": "shtax2",
      							"type": "Fixed"
      						},
      						{
      							"amount": 0,
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": 0,
      							"regions": [],
      							"taxid": "3",
      							"taxlabel": "Service",
      							"taxname": "shtax3",
      							"type": "Fixed"
      						}
      					],
      					"shipping_handling_charge": "0.00",
      					"shtax_totalamount": "0.00",
      					"tax_totalamount": "274.04",
      					"taxes": {
      						"1": {
      							"amount": 45.67,
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": "4.500",
      							"regions": [],
      							"taxid": "1",
      							"taxlabel": "VAT",
      							"taxname": "tax1",
      							"type": "Fixed"
      						},
      						"2": {
      							"amount": "101.50",
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": "10.000",
      							"regions": [],
      							"taxid": "2",
      							"taxlabel": "Sales",
      							"taxname": "tax2",
      							"type": "Fixed"
      						},
      						"3": {
      							"amount": 126.87,
      							"compoundon": [],
      							"method": "Simple",
      							"percentage": "12.500",
      							"regions": [],
      							"taxid": "3",
      							"taxlabel": "Service",
      							"taxname": "tax3",
      							"type": "Fixed"
      						}
      					},
      					"taxtype": "group",
      					"totalAfterDiscount": "1015.00"
      				},
      				"hdnProductId1": "10",
      				"hdnProductcode1": "PRO2",
      				"listPrice1": "1000.00",
      				"margin1": "500.00",
      				"netPrice1": "1000.00",
      				"productDeleted1": false,
      				"productDescription1": null,
      				"productImage1": "storage/2023/May/week3/61_dress1.jpg",
      				"productName1": "Laptop HP",
      				"productTotal1": "1000.00",
      				"purchaseCost1": "500.00",
      				"qty1": "1",
      				"qtyInStock1": "499",
      				"subprod_names1": "",
      				"subprod_qty_list1": [],
      				"subproduct_ids1": "",
      				"taxTotal1": "0.00",
      				"totalAfterDiscount1": "1000.00",
      				"unitPrice1": "1000.00"
      			},
      			"2": {
      				"checked_discount_zero2": " checked",
      				"comment2": "",
      				"delRow2": "Del",
      				"discountTotal2": "0.00",
      				"discount_amount2": 0,
      				"discount_percent2": 0,
      				"entityType2": "Services",
      				"hdnProductId2": "52",
      				"hdnProductcode2": "SER1",
      				"listPrice2": "15.00",
      				"margin2": "15.00",
      				"netPrice2": "15.00",
      				"productDeleted2": false,
      				"productDescription2": null,
      				"productName2": "Cleaning laptop",
      				"productTotal2": "15.00",
      				"purchaseCost2": "0.00",
      				"qty2": "1",
      				"qtyInStock2": "NA",
      				"subproduct_ids2": "",
      				"taxTotal2": "0.00",
      				"totalAfterDiscount2": "15.00",
      				"unitPrice2": "15.00"
      			}
      		}
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682578221793
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211def30bcb59
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211dee75bc045
    modified: 1685599226505
    created: 1685556697764
    url: "{{ base_url }}/faqs/starred"
    name: Get Only Starred Faqs
    description: Filter only starred faqs to display in widgets
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_3950d64bbb344a0d941d0545bd14b36b
        name: Accept
        value: application/json
        description: ""
      - id: pair_37fcf2a103cf47e3ae6ba9fb7b4d190d
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1685556697764
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211dee75bc045
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682529682973
    created: 1682529682973
    name: faq
    description: Frequently asked questions
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682529682973
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de590cffc0
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211dee75bc045
    modified: 1682660893388
    created: 1682529682947
    url: "{{ base_url }}/faqs"
    name: Get All Faqs
    description: |-
      Here you can get all FAQs from vtiger.

      Example response:
      ```json
      {
      	"data": [
      		{
      			"product_id": "",
      			"id": "6x49",
      			"faqcategories": "General",
      			"faqstatus": "Published",
      			"question": "How to write text?",
      			"faq_answer": "Just write it and that is it",
      			"createdtime": "2023-04-26T16:43:32Z",
      			"modifiedtime": "2023-04-26T16:43:32Z",
      			"starred": false,
      			"tags": [
      				""
      			]
      		},
      		{
      			"product_id": "",
      			"id": "6x50",
      			"faqcategories": "General",
      			"faqstatus": "Published",
      			"question": "What is your name?",
      			"faq_answer": "My name is sergey!!",
      			"createdtime": "2023-04-26T16:43:53Z",
      			"modifiedtime": "2023-04-26T16:43:53Z",
      			"starred": false,
      			"tags": [
      				""
      			]
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }
      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_6ba29562780446e5a70b238008cb3d50
      - name: size
        disabled: true
        value: "20"
        id: pair_5d77c17d02154269b0acdc2b458ef56f
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682529682947
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de6d74493f
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685369401537
    created: 1685369330631
    url: "{{ base_url }}/users/my"
    name: Update ticket
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "ticket_title": "Problem with internet",
          "ticketpriorities": "Normal",
          "ticketseverities": "Minor",
          "ticketcategories": "Big Problem",
          "description": "There are no internet in my appartment."
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_f90649c1a84d418aaeccbe10508b6c0c
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1685369330631
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682098348631
    created: 1682098348631
    name: tickets
    description: Operations with HelpDesk module
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682098348631
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211def8070423
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685259012380
    created: 1685212284466
    url: "{{ base_url }}/tickets/{{ ticketId }}"
    name: Partly Update ticket
    description: Allows to update specific field in HelpDesk module. Currently
      support only status field.
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
          "ticketstatus": "Closed"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_83afe002380e4bf48542718c983dd5e1
      - id: pair_c6d1cd93560d49e4914b2ac9d05413b0
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1685212284466
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de29bcffbf
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685287878476
    created: 1682489644953
    url: "{{ base_url }}/tickets/{{ ticketId }}/comments"
    name: Add comment
    description: >-
      To add a new comment to ticket, just need to send a POST request to this
      endpoint. In body you need to pass only comment content. Example request:


      ```json

      {
        "commentcontent": "Please fix problem ASAP"
      }

      ```


      As a result you will get a newly created comment:


      ```json

      {
      	"id": "32x48",
      	"commentcontent": "Please fix problem ASAP",
      	"source": "PORTAL",
      	"customer": "12x11",
      	"userid": "",
      	"reasontoedit": "",
      	"creator": "19x1",
      	"assigned_user_id": "19x1",
      	"createdtime": "2023-04-26T06:36:02Z",
      	"modifiedtime": "2023-04-26T06:36:02Z",
      	"related_to": "17x28",
      	"parent_comments": "",
      	"is_private": false,
      	"filename": "",
      	"related_email_id": "0"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "commentcontent": "Please fix problem ASAP"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_3f49f4b24a954a6a9cf01e99ec908408
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682489644953
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211ded66e0308
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1682401317405
    created: 1682250708675
    url: "{{ base_url }}/tickets"
    name: Create new ticket
    description: |-
      Here you can create new ticket.

      Example request:
      ```json
      {
        "ticket_title": "Problem with internet",
        "ticketpriorities": "Normal",
        "ticketseverities": "Minor",
        "ticketcategories": "Big Problem",
        "description": "There are no internet in my appartment."
      }
      ```

      Example response:
      ```json
      {
      	"ticket_no": "TT4",
      	"assigned_user_id": "19x1",
      	"parent_id": "11x6",
      	"ticketpriorities": "Normal",
      	"product_id": "",
      	"ticketseverities": "Minor",
      	"ticketstatus": "Open",
      	"ticketcategories": "Big Problem",
      	"hours": 0,
      	"days": 0,
      	"createdtime": "2023-04-23T11:55:34Z",
      	"modifiedtime": "2023-04-23T11:55:34Z",
      	"from_portal": false,
      	"modifiedby": "19x1",
      	"ticket_title": "Problem with internet",
      	"description": "There are no internet in my appartment.",
      	"solution": "",
      	"contact_id": "12x11",
      	"created_user_id": "",
      	"source": "PORTAL",
      	"starred": false,
      	"tags": [
      		""
      	],
      	"id": "17x47",
      	"label": "Problem with internet"
      }
      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "ticket_title": "Problem with internet",
          "ticketpriorities": "Normal",
          "ticketseverities": "Minor",
          "ticketcategories": "Big Problem",
          "description": "There are no internet in my appartment."
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_a7a80c970c224b47b9eec2c19abffcde
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682250708675
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deb8795f33
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685512196613
    created: 1682232473773
    url: "{{ base_url }}/tickets/{{ ticketId }}/documents"
    name: Related documents from ticket
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682232473773
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de793d958d
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685039933753
    created: 1682232473771
    url: "{{ base_url }}/tickets/{{ ticketId }}/file/{{ fileId }}"
    name: Get file in Ticket
    description: >-
      Getting file content related to ticket by it's id.


      Example response:


      ```json

      {
      	"data": {
      		"fileid": "46",
      		"filename": "Aqua_Site_Credentials.docx",
      		"filetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      		"filesize": 12709,
      		"filecontents": ""
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682232473771
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de46f4f7b3
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685197190425
    created: 1682171278798
    url: "{{ base_url }}/tickets"
    name: Get Tickets
    description: >-
      Here you can get all tickets, attached to authenticated user. Optionally
      you can pass also pagination params.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"ticket_no": "TT2",
      			"assigned_user_id": "19x1",
      			"parent_id": "11x6",
      			"ticketpriorities": "Normal",
      			"product_id": "",
      			"ticketseverities": "",
      			"ticketstatus": "In Progress",
      			"ticketcategories": "",
      			"hours": 0,
      			"days": 0,
      			"createdtime": "2022-12-03T18:35:49Z",
      			"modifiedtime": "2023-04-22T05:45:02Z",
      			"from_portal": false,
      			"modifiedby": "19x1",
      			"ticket_title": "gdfgdfgvsfd",
      			"description": "Here is some description",
      			"solution": "",
      			"contact_id": "",
      			"created_user_id": "",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				""
      			],
      			"id": "17x16",
      			"label": ""
      		},
      		{
      			"ticket_no": "TT3",
      			"assigned_user_id": "19x1",
      			"parent_id": "11x6",
      			"ticketpriorities": "Low",
      			"product_id": "",
      			"ticketseverities": "Minor",
      			"ticketstatus": "Open",
      			"ticketcategories": "Big Problem",
      			"hours": 2,
      			"days": 0,
      			"createdtime": "2023-03-15T14:54:01Z",
      			"modifiedtime": "2023-04-21T17:37:51Z",
      			"from_portal": false,
      			"modifiedby": "19x1",
      			"ticket_title": "sdfdsfdsf",
      			"description": "Some description",
      			"solution": "Some solution",
      			"contact_id": "12x11",
      			"created_user_id": "",
      			"source": "CRM",
      			"starred": false,
      			"tags": [
      				"test1",
      				"test2"
      			],
      			"id": "17x28",
      			"label": ""
      		}
      	],
      	"count": 2,
      	"page": 1,
      	"size": 20
      }

      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_8d0ad7d75fb54917bcca31b74d2be90e
      - name: size
        disabled: true
        value: "5"
        id: pair_d1e556b86b9f4dbf9cd74fd3d9cba060
      - name: sort
        disabled: true
        value: -ticket_no
        id: pair_c7e0f105a0594dd4a8f06275cefa002c
      - name: search
        disabled: true
        value: new
        id: pair_1f98e09450484cc5880a8ad2926b2c27
        description: ""
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682171278798
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deeb2dc7bf
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685285068997
    created: 1682145840383
    url: "{{ base_url }}/tickets/{{ ticketId }}/comments"
    name: Related comments from ticket
    description: >-
      This endpoint for getting related comments, attached to ticket. Note, that
      here is displayed only not internal comments. Currently there is no
      pagination supported and displayed maximum 100 comments.


      Example response:

      ```json

      {
      	"data": [
      		{
      			"id": "32x39",
      			"commentcontent": "This is public comment",
      			"source": "CRM",
      			"customer": "",
      			"userid": "",
      			"reasontoedit": "",
      			"creator": "19x1",
      			"assigned_user_id": "19x1",
      			"createdtime": "2023-04-21T17:37:51Z",
      			"modifiedtime": "2023-04-21T17:37:51Z",
      			"related_to": "17x28",
      			"parent_comments": "",
      			"is_private": false,
      			"filename": "0",
      			"related_email_id": "0",
      			"author": {
      				"firstname": "",
      				"lastname": "Administrator",
      				"email": "emelyanov86@km.ru",
      				"imagecontent": "",
      				"id": "19x1"
      			}
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 100
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682145840383
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211dee9835bc2
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211ded370d9cd
    modified: 1685211879193
    created: 1682098348610
    url: "{{ base_url }}/tickets/{{ ticketId }}"
    name: Find HelpDesk by ID
    description: |-
      Here you can get ticket information based on it's ID

      Example response:
      ```json
      {
      	"data": {
      		"ticket_no": "TT3",
      		"assigned_user_id": "19x1",
      		"parent_id": "11x6",
      		"ticketpriorities": "Normal",
      		"product_id": "",
      		"ticketseverities": "Minor",
      		"ticketstatus": "Open",
      		"ticketcategories": "Big Problem",
      		"hours": 2,
      		"days": 0,
      		"createdtime": "2023-03-15T14:54:01Z",
      		"modifiedtime": "2023-04-26T06:36:02Z",
      		"from_portal": false,
      		"modifiedby": "19x1",
      		"ticket_title": "Neew new mouse changes",
      		"description": "Current mouse not working",
      		"solution": "Some solution",
      		"contact_id": "12x11",
      		"created_user_id": "",
      		"source": "CRM",
      		"starred": false,
      		"tags": [
      			"test1",
      			"test2"
      		],
      		"id": "17x28",
      		"label": "Neew new mouse changes"
      	}
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682098348610
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de01c821a8
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211defbd34a2b
    modified: 1685253923481
    created: 1682057273135
    url: "{{ base_url }}/modules/{{ moduleName }}"
    name: Module Info
    description: >-
      Here you can get full structure about module, you passwd in request. Note,
      you need to pass system module name of vtiger, for example Project. List
      of modules with their ids:

      * Accounts	3

      * Assets	27

      * Calendar	1

      * Campaigns	17

      * Cases	39

      * CampanyDetails	26

      * Contacts	4

      * Currency	21

      * DocumentFolders	22

      * Documents	7

      * EmailCampaigns	37

      * Emails	8

      * Events	18

      * Faq	10

      * Groups	20

      * HelpDesk	9

      * Invoice	16

      * Leads	2

      * LineItem	33

      * ModComments	28

      * Olark	40

      * PBXManager	24

      * Potentials	5

      * PriceBooks	12

      * PrintTemplates	41

      * Products	6

      * ProductTaxes	35

      * Project	31

      * ProjectMilestone	29

      * ProjectTask	30

      * PurchaseOrder	14

      * Quotes	13

      * SalesOrder	15

      * ServiceContracts	23

      * Services	25

      * SLA	38

      * Tax	34

      * Users	19

      * Vendors	11


      Example response of HelpDesk module:


      ```json

      {
      	"data": {
      		"label": "Tickets",
      		"name": "HelpDesk",
      		"createable": true,
      		"updateable": true,
      		"deleteable": true,
      		"retrieveable": true,
      		"fields": [
      			{
      				"name": "ticket_no",
      				"label": "Ticket Number",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": false,
      				"editable": false,
      				"default": "",
      				"type": {
      					"name": "string"
      				}
      			},
      			{
      				"name": "assigned_user_id",
      				"label": "Assigned To",
      				"mandatory": true,
      				"isunique": false,
      				"nullable": false,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "owner"
      				}
      			},
      			{
      				"name": "parent_id",
      				"label": "Organization Name",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "reference",
      					"refersTo": [
      						"Accounts"
      					]
      				}
      			},
      			{
      				"name": "ticketpriorities",
      				"label": "Priority",
      				"mandatory": true,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "picklist",
      					"defaultValue": "Low",
      					"picklistValues": [
      						{
      							"label": "Low",
      							"value": "Low"
      						},
      						{
      							"label": "Normal",
      							"value": "Normal"
      						},
      						{
      							"label": "High",
      							"value": "High"
      						},
      						{
      							"label": "Urgent",
      							"value": "Urgent"
      						}
      					]
      				}
      			},
      			{
      				"name": "product_id",
      				"label": "Product Name",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "reference",
      					"refersTo": [
      						"Products"
      					]
      				}
      			},
      			{
      				"name": "ticketseverities",
      				"label": "Severity",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "picklist",
      					"defaultValue": "Minor",
      					"picklistValues": [
      						{
      							"label": "Minor",
      							"value": "Minor"
      						},
      						{
      							"label": "Major",
      							"value": "Major"
      						},
      						{
      							"label": "Feature",
      							"value": "Feature"
      						},
      						{
      							"label": "Critical",
      							"value": "Critical"
      						}
      					]
      				}
      			},
      			{
      				"name": "ticketstatus",
      				"label": "Status",
      				"mandatory": true,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "picklist",
      					"defaultValue": "Open",
      					"picklistValues": [
      						{
      							"label": "Open",
      							"value": "Open"
      						},
      						{
      							"label": "In Progress",
      							"value": "In Progress"
      						},
      						{
      							"label": "Wait For Response",
      							"value": "Wait For Response"
      						},
      						{
      							"label": "Closed",
      							"value": "Closed"
      						}
      					]
      				}
      			},
      			{
      				"name": "ticketcategories",
      				"label": "Category",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "picklist",
      					"defaultValue": "Big Problem",
      					"picklistValues": [
      						{
      							"label": "Big Problem",
      							"value": "Big Problem"
      						},
      						{
      							"label": "Small Problem",
      							"value": "Small Problem"
      						},
      						{
      							"label": "Other Problem",
      							"value": "Other Problem"
      						}
      					]
      				}
      			},
      			{
      				"name": "hours",
      				"label": "Hours",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "double"
      				}
      			},
      			{
      				"name": "days",
      				"label": "Days",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "double"
      				}
      			},
      			{
      				"name": "createdtime",
      				"label": "Created Time",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": false,
      				"editable": false,
      				"default": "",
      				"type": {
      					"name": "datetime"
      				}
      			},
      			{
      				"name": "modifiedtime",
      				"label": "Modified Time",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": false,
      				"editable": false,
      				"default": "",
      				"type": {
      					"name": "datetime"
      				}
      			},
      			{
      				"name": "from_portal",
      				"label": "From Portal",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "boolean"
      				}
      			},
      			{
      				"name": "modifiedby",
      				"label": "Last Modified By",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": false,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "reference",
      					"refersTo": [
      						"Users"
      					]
      				}
      			},
      			{
      				"name": "ticket_title",
      				"label": "Title",
      				"mandatory": true,
      				"isunique": false,
      				"nullable": false,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "string"
      				}
      			},
      			{
      				"name": "description",
      				"label": "Description",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "text"
      				}
      			},
      			{
      				"name": "solution",
      				"label": "Solution",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "text"
      				}
      			},
      			{
      				"name": "contact_id",
      				"label": "Contact Name",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "reference",
      					"refersTo": [
      						"Contacts"
      					]
      				}
      			},
      			{
      				"name": "source",
      				"label": "Source",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": false,
      				"default": "",
      				"type": {
      					"name": "string"
      				}
      			},
      			{
      				"name": "starred",
      				"label": "starred",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "boolean"
      				}
      			},
      			{
      				"name": "tags",
      				"label": "tags",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "string"
      				}
      			},
      			{
      				"name": "kanban_color",
      				"label": "Color",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": true,
      				"editable": true,
      				"default": "",
      				"type": {
      					"name": "picklist",
      					"defaultValue": "Red",
      					"picklistValues": [
      						{
      							"label": "Red",
      							"value": "Red"
      						},
      						{
      							"label": "Orange",
      							"value": "Orange"
      						},
      						{
      							"label": "Green",
      							"value": "Green"
      						},
      						{
      							"label": "Yellow",
      							"value": "Yellow"
      						},
      						{
      							"label": "Teal",
      							"value": "Teal"
      						},
      						{
      							"label": "Blue",
      							"value": "Blue"
      						},
      						{
      							"label": "Purple",
      							"value": "Purple"
      						},
      						{
      							"label": "Peru",
      							"value": "Peru"
      						},
      						{
      							"label": "Silver",
      							"value": "Silver"
      						},
      						{
      							"label": "Olive",
      							"value": "Olive"
      						}
      					]
      				}
      			},
      			{
      				"name": "id",
      				"label": "ticketid",
      				"mandatory": false,
      				"isunique": false,
      				"nullable": false,
      				"editable": false,
      				"default": "",
      				"type": {
      					"name": "autogenerated"
      				}
      			}
      		],
      		"idPrefix": "17",
      		"isEntity": true,
      		"allowDuplicates": true,
      		"labelFields": "title"
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1682057273135
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211defbd34a2b
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682057273145
    created: 1682057273145
    name: module
    description: Module informations with all data in it
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682057273145
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deaa5108ed
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de1a8565a9
    modified: 1685554975794
    created: 1682010335863
    url: "{{ base_url }}/managers/{{ managerId }}"
    name: Find manager by ID
    description: >-
      Here you can get user from vtiger by it's ID. As a query param in address
      you need to pass vtiger user ID, for example `19x1`


      Example response:

      ```json

      {
      	"data": {
      		"id": "19x1",
      		"user_name": "admin",
      		"first_name": "",
      		"last_name": "Administrator",
      		"email2": "",
      		"title": "",
      		"phone_work": "",
      		"department": "",
      		"description": "",
      		"address_street": "",
      		"address_city": "",
      		"address_state": "",
      		"address_postalcode": "",
      		"address_country": "",
      		"imagename": ""
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
      disabled: false
    metaSortKey: -1682010335863
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de1a8565a9
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682010335872
    created: 1682010335872
    name: manager
    description: Users module in vtiger, getting info about assigned managers
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682010335872
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de816b2196
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    modified: 1685554970919
    created: 1682089127951
    url: "{{ base_url }}/company"
    name: Get company data
    description: >-
      Here you can get all organisation details from vtiger. Note, this endpoint
      is available without authorization.


      Example response:

      ```json

      {
      	"data": {
      		"organizationname": "vtiger",
      		"address": "95, 12th Main Road, 3rd Block, Rajajinagar",
      		"city": "Bangalore",
      		"state": "Karnataka",
      		"country": "India",
      		"code": "560010",
      		"phone": "+91 9243602352",
      		"fax": "+91 9243602352",
      		"website": "www.vtiger.com",
      		"logoname": "vtiger-crm-logo.png",
      		"logo": "",
      		"vatid": "",
      		"inn": "",
      		"kpp": "",
      		"bankaccount": "",
      		"bankname": "",
      		"bankid": "",
      		"corraccount": "",
      		"director": "",
      		"bookkeeper": "",
      		"entepreneur": "",
      		"entepreneurreg": "",
      		"okpo": "",
      		"id": "23x1"
      	}
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
      disabled: true
    metaSortKey: -1682089127951
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1682002384621
    created: 1682002384621
    name: support
    description: Technical stuff for analytics and checking portal status
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1682002384621
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de572982bb
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de5bdcd3c0
    modified: 1682002585932
    created: 1682002384612
    url: "{{ base_url }}/ping"
    name: Status of application
    description: >-
      Here you can check if application is active or not. As a response you will
      get 200 status with success json message.


      Example response:

      ```json

      {
      	"message": "active",
      	"success": true
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1682002384612
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_6fc38a12f86b4d308e683aa89c9c9fe9
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681883793300
    created: 1681883789866
    url: http://vtiger.test:8000/webservice.php?id=12x11&operation=retrieve&sessionName=3619dcf3643f82678f049
    name: New Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1681883789866
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211deb8d9c1dc
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1685556529681
    created: 1682426774797
    url: "{{ base_url }}/tickets/{{ ticketId }}"
    name: Update user
    description: |-
      Here you can update information about authenticated user

      Example response:
      ```json
      {
      		"firstname": "Sergei",
      		"lastname": "Emelianov",
      		"description": "Here is changed description second",
      		"account_name": "CIT",
      		"title": "Director",
      		"department": "Management",
      		"email": "se@sergeyem.ru",
      		"mailingcity": "Cheboksary",
      		"mailingstreet": "Bulvar Yunosti, 3",
      		"mailingcountry": "Russia",
      		"othercountry": "Russia",
      		"mailingstate": "Chuvashia",
      		"mailingpobox": "",
      		"othercity": "Cheboksary",
      		"otherstate": "Chuvashia",
      		"mailingzip": "428010",
      		"otherzip": "428010",
      		"otherstreet": "Bulvar Yunosti, 3",
      		"otherpobox": "",
      		"phone": "+4915211100235"
      }
      ```
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
        		"firstname": "Sergei",
        		"lastname": "Emelianov",
        		"description": "Here is changed description second",
        		"account_name": "CIT",
        		"title": "Director",
        		"department": "Management",
        		"email": "se@sergeyem.ru",
        		"mailingcity": "Cheboksary",
        		"mailingstreet": "Bulvar Yunosti, 3",
        		"mailingcountry": "Russia",
        		"othercountry": "Russia",
        		"mailingstate": "Chuvashia",
        		"mailingpobox": "",
        		"othercity": "Cheboksary",
        		"otherstate": "Chuvashia",
        		"mailingzip": "428010",
        		"otherzip": "428010",
        		"otherstreet": "Bulvar Yunosti, 3",
        		"otherpobox": "",
        		"phone": "+4915211100235"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_8902278f1ddf46c0b704e345b31553df
      - id: pair_7098c1937d1b4e7da566ce8fda1b87c9
        name: Accept
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684590648138
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752584161
    created: 1681752584161
    name: user
    description: Operations about user
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1681752584161
    _type: request_group
  - _id: req_wrk_66e74e4b495c4404841a78c723c211dee56f68e2
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1685556413331
    created: 1684590648088
    url: "{{ base_url }}/users/all"
    name: Get Users From My Company
    description: |-
      Allows you to get list of vtiger contacts, attached to the same account

      Example response:
      ```json
      {
      	"data": [
      		{
      			"id": 0,
      			"crmid": "12x11",
      			"firstname": "Sergei",
      			"lastname": "Emelianov",
      			"description": "Here is changed description second",
      			"account_id": "11x6",
      			"account_name": "",
      			"title": "Director",
      			"department": "Management",
      			"email": "se@sergeyem.ru",
      			"created_at": "0001-01-01T00:00:00Z",
      			"updated_at": "0001-01-01T00:00:00Z",
      			"is_active": false,
      			"mailingcity": "Cheboksary",
      			"mailingstreet": "Bulvar Yunosti, 3",
      			"mailingcountry": "Russia",
      			"othercountry": "Russia",
      			"mailingstate": "Chuvashia",
      			"mailingpobox": "",
      			"othercity": "Cheboksary",
      			"otherstate": "Chuvashia",
      			"mailingzip": "428010",
      			"otherzip": "428010",
      			"otherstreet": "Bulvar Yunosti, 3",
      			"otherpobox": "",
      			"image": "",
      			"imageattachmentids": "12x42",
      			"imagecontent": "",
      			"phone": "+4915211100235"
      		}
      	],
      	"count": 1,
      	"page": 1,
      	"size": 20
      }
      ```
    method: GET
    body: {}
    parameters:
      - name: page
        disabled: true
        value: "1"
        id: pair_2c05910616074fce9ac59f82c5d7f1e0
      - name: size
        disabled: true
        value: "20"
        id: pair_f2cf2041aa8b4951b29195f6530c5863
    headers:
      - id: pair_47af84f5043f4f22a6d698ae3aa2902b
        name: Accept
        value: application/json
        description: ""
      - id: pair_7b85a5b6405d420ca6fc3c53aedb744d
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1684590648088
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de051cf8c0
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1683371854698
    created: 1682092427875
    url: "{{ base_url }}/users/password"
    name: Reset Password
    description: >-
      Using this endpoint you can reset password. For this purposes you need
      provide password token and new password. Example request:


      ```json

      {
        "token": "ISBTSR6CWE7ZNQGWN2QIHRFGNA",
        "password": "NewPassword"
      }

      ```


      Example response:

      ```json

      {
      	"id": 14,
      	"crmid": "12x11",
      	"firstname": "Sergei",
      	"lastname": "Emelianov",
      	"description": "Here is changed description second",
      	"account_id": "11x6",
      	"account_name": "",
      	"title": "Director",
      	"department": "Management",
      	"email": "se@sergeyem.ru",
      	"created_at": "2023-04-20T06:35:29Z",
      	"updated_at": "2023-04-21T17:57:18.50397715+02:00",
      	"is_active": true,
      	"mailingcity": "Cheboksary",
      	"mailingstreet": "Bulvar Yunosti, 3",
      	"mailingcountry": "Russia",
      	"othercountry": "Russia",
      	"mailingstate": "Chuvashia",
      	"mailingpobox": "",
      	"othercity": "Cheboksary",
      	"otherstate": "Chuvashia",
      	"mailingzip": "428010",
      	"otherzip": "428010",
      	"otherstreet": "Bulvar Yunosti, 3",
      	"otherpobox": "",
      	"image": ""
      }

      ```
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "token": "MB4S35ETWCRAC3OQINBXBHKGUU",
          "password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_38a86f18a3854531b5509610f9c5c4df
    authentication: {}
    metaSortKey: -1682092427875
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de75ca1604
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1684518263402
    created: 1682002384617
    url: "{{ base_url }}/users/restore"
    name: Restore Password
    description: >-
      If you forgot password in portal, you can send json with email field. Then
      system will send an email to provided address with token link inside it.


      Example request body:


      ```json

      {
        "email": "emelyanov86@km.ru"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "email": "emelyanov86@km.ru"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_442c4140830040aa823cf438bee63491
    authentication: {}
    metaSortKey: -1682002384617
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de94b9a1a1
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1685556698416
    created: 1681838399470
    url: "{{ base_url }}/users/my"
    name: Get data about authenticated user
    description: >-
      In this endpoint you can get profile data about current authenticated
      user. You need to pass only GET request without any params. But you MUST
      provide authorization bearer token.


      Example response:

      ```json

      {
      	"data": {
      		"id": 15,
      		"crmid": "12x11",
      		"firstname": "Sergei",
      		"lastname": "Emelianov",
      		"description": "Here is changed description second",
      		"account_id": "11x6",
      		"account_name": "",
      		"title": "Director",
      		"department": "Management",
      		"email": "se@sergeyem.ru",
      		"created_at": "2023-05-06T11:37:02Z",
      		"updated_at": "2023-05-07T16:20:02Z",
      		"is_active": false,
      		"mailingcity": "Cheboksary",
      		"mailingstreet": "Bulvar Yunosti, 3",
      		"mailingcountry": "Russia",
      		"othercountry": "Russia",
      		"mailingstate": "Chuvashia",
      		"mailingpobox": "",
      		"othercity": "Cheboksary",
      		"otherstate": "Chuvashia",
      		"mailingzip": "428010",
      		"otherzip": "428010",
      		"otherstreet": "Bulvar Yunosti, 3",
      		"otherpobox": "",
      		"image": "",
      		"imageattachmentids": "12x42",
      		"imagecontent": ""
      	}
      }

      ```


      Note, that here is stored ID of attached image. To get a base64 decoded image, you need to send additional response.


      If you will not provide token or provide wrong one, you will get 403 status with message:


      ```json

      {
      	"error": "Token Error",
      	"field": "Bearer",
      	"message": "Wrong Token in authorization header"
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_e691c6b54ceb4f55aa5bf8004e1b456f
        name: Accept
        value: application/json
        description: ""
      - id: pair_aba2096e90e34148b6344199f0e566bd
        name: Content-Type
        value: application/json
        description: ""
    authentication:
      type: bearer
      token: "{{bearerToken}}"
      prefix: ""
    metaSortKey: -1681838399470
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de740025cb
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1681827945965
    created: 1681827945965
    url: "{{ base_url }}/users/logout"
    name: Logs out current logged in user session
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1681827945965
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211de00ac9da2
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1685197194997
    created: 1681827520782
    url: "{{ base_url }}/users/login"
    name: Login in system
    description: >-
      Authorisation endpoint, allows user to get a Bearer token from system.
      Example response with status code 201:


      ```json

      {
      	"id": 1,
      	"token": "WHXDXIXGAMFFYE76DBY6DHUWJY",
      	"expiry": "2023-07-17T16:33:29.670530331+02:00"
      }

      ```


      To get a bearer token, you need to pass email and password in request body:


      ```json

      {
        "email": "se@sergeyem.ru",
        "password": "1qaz2wsx"
      }

      ```


      In case you passed incorrect password, you will get 422 error with example json:


      ```json

      {
      	"error": "Validation Error",
      	"field": "password",
      	"message": "Password you passed to us is incorrect"
      }

      ```


      If you passed wrong or incorrect email, you will get 400 error with content:

      ```json

      {
      	"error": "Validation Error",
      	"field": "Email",
      	"message": "Key: 'UserSignInInput.Email' Error:Field validation for 'Email' failed on the 'email' tag"
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "email": "se@sergeyem.ru",
          "password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_9c3cbbca3ddf46fe8f1e8a0fafa6fcee
      - id: pair_8a676909b6184d22a3c688567414753d
        name: Accept
        value: application/json
        description: ""
    authentication: {}
    metaSortKey: -1681827520782
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_66e74e4b495c4404841a78c723c211defe3d55d0
    parentId: fld_wrk_66e74e4b495c4404841a78c723c211de12dea96f
    modified: 1684649691332
    created: 1681752584137
    url: "{{ base_url }}/users"
    name: Create user
    description: >-
      Registration endpoint. Accept following required fields:

      * email - contact email in Vtiger

      * code - registration code, stored in vtiger contact.

      * password - minimum 8 characters for future authorisation


      Example request

      ```json

      {
      	"email": "se@sergeyem.ru",
      	"code": "1134",
      	"password": "1qaz2wsx"
      }

      ```


      In case of validation error, returns status 400 with example response:

      ```json

      {
      	"error": "Validation Error",
      	"field": "Password",
      	"message": "Key: 'UserSignUpInput.Password' Error:Field validation for 'Password' failed on the 'min' tag"
      }

      ```


      Example of success response:

      ```json

      {
      	"id": 4,
      	"crmid": "12x11",
      	"firstname": "Sergei",
      	"lastname": "Emelianov",
      	"description": "",
      	"account_id": "11x6",
      	"account_name": "",
      	"title": "Director",
      	"department": "Management",
      	"email": "se@sergeyem.ru",
      	"created_at": "2023-04-17T19:44:08.791999494+02:00",
      	"updated_at": "2023-04-17T19:44:08.791999601+02:00",
      	"is_active": false,
      	"mailingcity": "Cheboksary",
      	"mailingstreet": "Bulvar Yunosti, 3",
      	"mailingcountry": "Russia",
      	"othercountry": "Russia",
      	"mailingstate": "Chuvashia",
      	"mailingpobox": "",
      	"othercity": "Cheboksary",
      	"otherstate": "Chuvashia",
      	"mailingzip": "428010",
      	"otherzip": "428010",
      	"otherstreet": "Bulvar Yunosti, 3",
      	"otherpobox": "",
      	"image": ""
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"email": "emelyanov86@km.ru",
        	"code": "1545",
        	"password": "1qaz2wsx"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_e7f38670bc6d43399150e6c8704932f3
      - id: pair_c93d6c0444da43de8b5ead7e4db71887
        name: Accept
        value: application/json
        description: ""
    authentication: {}
    metaSortKey: -1681752584137
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_7051e4988ba662848196b333737a56823b214220
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752522266
    created: 1681752522266
    name: Base Environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1681752522266
    _type: environment
  - _id: jar_7051e4988ba662848196b333737a56823b214220
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1681752522267
    created: 1681752522267
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_034c419a866f48258ca444d906a7a806
    parentId: wrk_66e74e4b495c4404841a78c723c211de
    modified: 1685770578091
    created: 1681752522263
    fileName: Vtiger Customer Portal
    contents: >-
      openapi: 3.0.0

      info:
        description: "This is API documentation for Vtiger custmer portal service. This is only client for Vtiger API. This is a place for your customers to see and update tickets, view past quotes and invoices, and share files. The customer portal is a self-service portal where customers can get their business-related questions answered."
        version: 1.0.2
        title: Vtiger Go Customer Portal
        termsOfService: http://swagger.io/terms/
        contact:
          email: se@sergeyem.ru
        license:
          name: Apache 2.0
          url: http://www.apache.org/licenses/LICENSE-2.0.html
      tags:
        - name: user
          description: Operations with users, mapped to contacts module
          externalDocs:
            description: Contacts module
            url: https://www.vtiger.com/features/contact-management/
        - name: support
          description: Technical stuff for analytics and checking portal status
        - name: manager
          description: Users module in vtiger, getting info about assigned managers
          externalDocs:
            description: Users module
            url: https://help.vtiger.com/article/146605576-User-Management---Users
        - name: module
          description: Module informations with all data in it
        - name: tickets
          description: Operations with HelpDesk module
        - name: faq
          description: Frequently asked questions
        - name: invoice
          description: Endpoints for getting invoices
          externalDocs:
            description: Invoices module
            url: https://help.vtiger.com/article/117268545-Creating-and-Managing-Invoices
        - name: service-contracts
          description: Service contracts data
        - name: product
          description: Product data from vtiger
        - name: service
          description: Endpoints for getting services from Vtiger.
        - name: project
          description: Project module in Vtiger CRM
        - name: statistics
          description: Endpoints for dashboards
      paths:
        /users:
          post:
            tags:
              - user
            summary: Create user
            description: Here you can register new contact in portal using activation code. In order to register, you need to enter in vtiger crm in contact module special code, which allows contact to register in portal. Name of field stored in configuration of script. After successfull registration content of this field will be removed. After successfull registration system will also sent welcome email. You can disable sending email process in configuration.
            operationId: createUser
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
                      password:
                         type: string
                         example: "PasswordHere"
                      code:
                          type: string
                          example: "1122"
              description: Passing email and password you can authorize in system and get bearer token
              required: true
            responses:
              "201":
                description: successful operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "400":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/login:
          post:
            tags:
              - user
            summary: Login in system
            description: "Here you can get authentication bearer"
            operationId: loginUser
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
                      password:
                         type: string
                         example: "PasswordHere"
              description: Pass needed data to create new user from contact in Vtiger
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Token"
              "400":
                description: Invalid username/password supplied
        /users/restore:
          post:
            tags:
              - user
            summary: Restore Password
            description: "Send password restore token to email"
            operationId: restorePassword
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "emelyanov86@km.ru"
              description: Pass an email address where you receive an email with token link
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/MessageResponse"
              "400":
                description: Invalid email supplied
              "422":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/password:
          put:
            tags:
              - user
            summary: Reset Password
            description: "Reset password usin password reset token"
            operationId: resetPassword
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "FDDD23FDDFKR"
                      password:
                        type: string
                        example: "NewPassword"
              description: Pass a token and new password to update a user
              required: true
            responses:
              "201":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "400":
                description: Invalid token provided
              "422":
                description: Validation error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/ValidationResponse"
        /users/logout:
          get:
            tags:
              - user
            summary: Logs out current logged in user session
            description: ""
            operationId: logoutUser
            responses:
              default:
                description: successful operation
        "/users/all":
          get:
            tags:
              - user
            summary: Get Users From My Company
            description: This endpoint returns a list vtiger contacts, attached to the same company, as authorized user.
            operationId: getAllAccountUsers
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/User"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        /users/my:
          get:
            tags:
              - user
            summary: Get data about authenticated user
            description: You must provide an Authorisation header in order to get currenc user data. Note, that if user does not attached to any company, you will get 403 response.
            operationId: myUser
            security:
              - bearerAuth: []
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/User"
              "401":
                description: anonymous access
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error:
                          type: string
                          example: "Anonymous Access"
                        field:
                          type: string
                          example: "crmid"
                        message:
                          type: string
                          example: "Got anonymous user from token or user without crmid"
          put:
              tags:
                - user
              summary: Update User
              description: Allows authorized user information about yourself.
              operationId: updateUser
              security:
                - bearerAuth: []
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User" 
              responses:
                "202":
                  description: User updated
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/User"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: User or file not found
                "403":
                  description: Operation not permitted
        "/managers/{managerId}":
          get:
            tags:
              - manager
            summary: Find manager by ID
            description: Returns a single manager
            operationId: getManagerById
            security:
              - bearerAuth: []
            parameters:
              - name: managerId
                in: path
                description: ID of manager to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Manager"
              "400":
                description: Invalid ID supplied
              "404":
                description: Manager not found
        "/modules/{moduleName}":
          get:
            tags:
              - module
            summary: Module Info
            description: Get all information about module by it name
            operationId: describeModule
            security:
              - bearerAuth: []
            parameters:
              - name: moduleName
                in: path
                description: Name of module to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Module"
              "400":
                description: Invalid Name supplied
              "404":
                description: Module not found
              "500":
                description: Vtiger error response
        /ping:
          get:
            tags:
              - support
            summary: Status of application
            description: Get response with full status of application
            operationId: ping
            responses:
              "200":
                description: successfull operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/MessageResponse"
        /company:
          get:
            tags:
              - support
            summary: Get company data
            description: All company information stored in company details of Vtiger. Accessable without bearer token.
            operationId: companyDetails
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Company"
        "/tickets/{ticketId}":
          get:
            tags:
              - tickets
            summary: Find HelpDesk by ID
            description: Returns a single ticket
            operationId: getHelpDeskById
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/HelpDesk"
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
          put:
              tags:
                - tickets
              summary: Update ticket
              description: Allows authorized user update ticket.
              operationId: updateTicket
              security:
                - bearerAuth: []
              parameters:
                - name: ticketId
                  in: path
                  description: ID of ticket to update
                  required: true
                  schema:
                    type: string
                    format: string
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        ticket_title:
                          description: Title of ticket
                          type: string
                          example: "Problem with internet"
                        ticketpriorities:
                          description: Proirity of ticket
                          type: string
                          example: "Normal"
                        ticketseverities:
                          description: Severity of ticket
                          type: string
                          example: "Minor"
                        ticketcategories:
                          description: Category of ticket
                          type: string
                          example: "Big Problem"
                        description:
                          description: Some description of ticket
                          type: string
                          example: "There are no internet in my appartment."
              responses:
                "202":
                  description: Ticket updated
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/HelpDesk"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: HelpDesk or file not found
                "403":
                  description: Operation not permitted
          patch:
              tags:
                - tickets
              summary: Partly Update ticket
              description: Allows update specific field in ticket. Currently we support only status field.
              operationId: updateTicketPartly
              security:
                - bearerAuth: []
              parameters:
                - name: ticketId
                  in: path
                  description: ID of ticket to update
                  required: true
                  schema:
                    type: string
                    format: string
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        ticketstatus:
                          description: Status of ticket
                          type: string
                          example: "Closed"
              responses:
                "202":
                  description: Ticket updated
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/HelpDesk"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: HelpDesk or file not found
                "403":
                  description: Operation not permitted
        "/tickets/{ticketId}/comments":
          get:
            tags:
              - tickets
            summary: Related comments from ticket
            description: Returns an array of comments from related ticket
            operationId: getCommentsFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Comment"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
          post:
            tags:
              - tickets
            summary: Add comment
            description: Create new comment, attached to current ticket
            operationId: addCommentToTicket
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        commentcontent:
                          description: Comment content
                          type: string
                          example: "Please fix problem ASAP"
            responses:
              "201":
                description: comment created
                content:
                  application/json:
                      schema:
                        $ref: "#/components/schemas/Comment"         
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
        "/tickets/{ticketId}/documents":
          get:
            tags:
              - tickets
            summary: Related documents from ticket
            description: Returns an array of documents from related ticket
            operationId: getDocumentsFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Document"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk not found
              "403":
                description: Operation not permitted
        "/tickets/{ticketId}/file/{fileId}":
          get:
            tags:
              - tickets
            summary: Get file in Ticket
            description: Returns an array of documents from related ticket
            operationId: getFileFromTicket
            security:
              - bearerAuth: []
            parameters:
              - name: fileId
                in: path
                description: ID of file
                required: true
                schema:
                  type: string
                  format: string
              - name: ticketId
                in: path
                description: ID of ticket
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/File"                
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk or file not found
              "403":
                description: Operation not permitted
        "/tickets":
          post:
              tags:
                - tickets
              summary: Create new ticket
              description: Allows authorized user create new ticket and send it to Vtiger CRM.
              operationId: createTicket
              security:
                - bearerAuth: []
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        ticket_title:
                          description: Title of ticket
                          type: string
                          example: "Problem with internet"
                        ticketpriorities:
                          description: Proirity of ticket
                          type: string
                          example: "Normal"
                        ticketseverities:
                          description: Severity of ticket
                          type: string
                          example: "Minor"
                        ticketcategories:
                          description: Category of ticket
                          type: string
                          example: "Big Problem"
                        description:
                          description: Some description of ticket
                          type: string
                          example: "There are no internet in my appartment."
              responses:
                "201":
                  description: Ticket created
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/HelpDesk"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: HelpDesk or file not found
                "403":
                  description: Operation not permitted
          get:
            tags:
              - tickets
            summary: Get Tickets
            description: This endpoint returns a list of tickets based on the provided page number and page size. You can see tickets attached to company of authorized user.
            operationId: getAllTickets
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
              - name: sort
                in: query
                description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
                required: false
                schema:
                  type: string
                  example: -ticket_no
              - name: search
                in: query
                description: Search with LIKE filter in ticket_no and ticket_title fields
                required: false
                schema:
                  type: string
                  example: TT3
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/HelpDesk"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/faqs":
          get:
              tags:
                - faq
              summary: Get All Faqs
              description: This endpoint returns a list of frequently asked questions based on the provided page number and page size.
              operationId: getAllFaqs
              security:
                - bearerAuth: []
              parameters:
                - name: page
                  in: query
                  description: The page number to retrieve (default is 1)
                  required: false
                  schema:
                    type: integer
                    format: int32
                    default: 1
                - name: size
                  in: query
                  description: The number of items per page (default is 20)
                  required: false
                  schema:
                    type: integer
                    format: int32
                    default: 20
              responses:
                "200":
                  description: successful operation
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/Faq"
                          count:
                            type: number
                            example: 100
                          page:
                            type: number
                            example: 1
                          size:
                            type: number
                            example: 100
                "400":
                  description: Invalid pagination params
                "403":
                  description: Operation not permitted
        "/faqs/starred":
          get:
              tags:
                - faq
              summary: Get Only Starred Faqs
              description: This endpoint returns a list of frequently asked questions based on the starred status.
              operationId: getStarredFaqs
              security:
                - bearerAuth: []
              responses:
                "200":
                  description: successful operation
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              $ref: "#/components/schemas/Faq"
                          count:
                            type: number
                            example: 100
                          page:
                            type: number
                            example: 1
                          size:
                            type: number
                            example: 100
                "400":
                  description: Invalid pagination params
                "403":
                  description: Operation not permitted
        "/invoices":
          get:
            tags:
              - invoice
            summary: Get Invoices
            description: This endpoint returns a list of invoices based on the provided page number and page size.
            operationId: getAllInvoices
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/InvoiceShort"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/invoices/{invoiceId}":
          get:
            tags:
              - invoice
            summary: Find Invoice by id
            description: Returns a single Invoice
            operationId: getInvoiceById
            security:
              - bearerAuth: []
            parameters:
              - name: invoiceId
                in: path
                description: ID of invoice to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Invoice"
              "400":
                description: Invalid ID supplied
              "404":
                description: Invoice not found
              "403":
                description: Operation not permitted
        "/service-contracts/{scId}":
          get:
            tags:
              - service-contracts
            summary: Find Service Contract by ID
            description: Returns a single service contract
            operationId: getServiceContractById
            security:
              - bearerAuth: []
            parameters:
              - name: scId
                in: path
                description: ID of service contract to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/ServiceContract"
              "400":
                description: Invalid ID supplied
              "404":
                description: ServiceContract not found
              "403":
                description: Operation not permitted
        "/products":
          get:
            tags:
              - product
            summary: Get Products
            description: This endpoint returns a list of products based on the provided page number and page size and filter params.
            operationId: getAllProducts
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
              - name: filter[discontinued]
                in: query
                description: Filter products by their discontinued status (e.g., filter[discontinued]=false)
                required: false
                schema:
                  type: boolean
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Product"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/products/{productId}":
          get:
            tags:
              - product
            summary: Find Product by ID
            description: Returns a single product
            operationId: getProductById
            security:
              - bearerAuth: []
            parameters:
              - name: productId
                in: path
                description: ID of product to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Product"
              "400":
                description: Invalid ID supplied
              "404":
                description: Product not found
              "403":
                description: Operation not permitted
        "/services":
          get:
            tags:
              - service
            summary: Get Services
            description: This endpoint returns a list of services based on the provided page number and page size and filter params.
            operationId: getAllServices
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
              - name: filter[discontinued]
                in: query
                description: Filter services by their discontinued status (e.g., filter[discontinued]=false)
                required: false
                schema:
                  type: boolean
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Service"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/services/{serviceId}":
          get:
            tags:
              - service
            summary: Find Service by ID
            description: Returns a single service
            operationId: getServiceById
            security:
              - bearerAuth: []
            parameters:
              - name: serviceId
                in: path
                description: ID of service to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Service"
              "400":
                description: Invalid ID supplied
              "404":
                description: Product not found
              "403":
                description: Operation not permitted
        "/service-contracts":
          get:
            tags:
              - service-contracts
            summary: Get All Service Contracts
            description: This endpoint returns a list of service contracts based on the provided page number and page size.
            operationId: getAllServiceContracts
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/ServiceContract"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/projects":
          get:
            tags:
              - project
            summary: Get Projects
            description: This endpoint returns a list of projects based on the provided page number and page size.
            operationId: getAllProjects
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
              - name: sort
                in: query
                description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
                required: false
                schema:
                  type: string
                  example: -project_no
              - name: search
                in: query
                description: Search with LIKE filter in project_no and projecttitle and projecttype fields
                required: false
                schema:
                  type: string
                  example: TT3
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Project"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
        "/projects/{projectId}":
          get:
            tags:
              - project
            summary: Find Project by ID
            description: Returns a single project
            operationId: getProjectById
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project to return
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Project"
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
        "/projects/{projectId}/comments":
          get:
            tags:
              - project
            summary: Related comments from project
            description: Returns an array of comments from related project
            operationId: getCommentsFromProject
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Comment"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
          post:
            tags:
              - project
            summary: Add comment
            description: Create new comment, attached to current ticket
            operationId: addCommentToProject
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
            requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        commentcontent:
                          description: Comment content
                          type: string
                          example: "Please fix problem ASAP"
            responses:
              "201":
                description: comment created
                content:
                  application/json:
                      schema:
                        $ref: "#/components/schemas/Comment"         
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
        "/projects/{projectId}/documents":
          get:
            tags:
              - project
            summary: Related documents from project
            description: Returns an array of documents from related project
            operationId: getDocumentsFromProject
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Document"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
        "/projects/{projectId}/file/{fileId}":
          get:
            tags:
              - project
            summary: Get file in Project
            description: Returns an array of documents from related project
            operationId: getFileFromProject
            security:
              - bearerAuth: []
            parameters:
              - name: fileId
                in: path
                description: ID of file
                required: true
                schema:
                  type: string
                  format: string
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/File"                
              "400":
                description: Invalid ID supplied
              "404":
                description: HelpDesk or file not found
              "403":
                description: Operation not permitted
        "/projects/{projectId}/tasks/{taskId}":
          patch:
              tags:
                - project
              summary: Task Update
              description: Allows update specific field in project task.
              operationId: updateTaskPartly
              security:
                - bearerAuth: []
              parameters:
                - name: projectId
                  in: path
                  description: ID of related Project
                  required: true
                  schema:
                    type: string
                    format: string
                - name: taskId
                  in: path
                  description: ID of task
                  required: true
                  schema:
                    type: string
                    format: string
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        projecttaskstatus:
                          description: Status of task
                          type: string
                          example: "Closed"
                        projecttaskname:
                          description: Name of task
                          type: string
                          example: "Need to fix issue"
                        description:
                          description: Description of project task
                          type: string
                          example: "There is very big problem"
                        projecttaskpriority:
                          description: Priority of Project Task
                          type: string
                          example: "Urgent"
                        projecttasktype:
                          description: Type of task
                          type: string
                          example: "administrative"
              responses:
                "202":
                  description: Ticket updated
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ProjectTask"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: ProjectTask or project not found
                "403":
                  description: Operation not permitted
        "/projects/{projectId}/tasks":
          get:
            tags:
              - project
            summary: Get Project Tasks
            description: This endpoint returns a list of project tasks based on the provided page number and page size. There is permission validation based on project ID. If contact if not owned by project, it can not see project tasks.
            operationId: getTasksFromProject
            security:
              - bearerAuth: []
            parameters:
              - name: page
                in: query
                description: The page number to retrieve (default is 1)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 1
              - name: size
                in: query
                description: The number of items per page (default is 20)
                required: false
                schema:
                  type: integer
                  format: int32
                  default: 20
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/ProjectTask"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100
              "400":
                description: Invalid pagination params
              "403":
                description: Operation not permitted
          post:
              tags:
                - project
              summary: Create new task
              description: Allows authorized user create project task, attached to project
              operationId: createProjectTask
              security:
                - bearerAuth: []
              parameters:
                - name: projectId
                  in: path
                  description: ID of project
                  required: true
                  schema:
                    type: string
                    format: string
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        projecttaskname:
                          description: Title of task
                          type: string
                          example: "Problem with internet"
                        projecttasktype:
                          description: Type of task
                          type: string
                          example: "administrative"
                        projecttaskpriority:
                          description: Priority of task
                          type: string
                          example: "normal"
                        description:
                          description: Some description of task
                          type: string
                          example: "There are no internet in my appartment."
              responses:
                "201":
                  description: Task created
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ProjectTask"                
                "400":
                  description: Invalid ID supplied
                "422":
                  description: Validation error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/ValidationResponse"
                "404":
                  description: Task or file not found
                "403":
                  description: Operation not permitted
        "/projects/{projectId}/tasks/{taskId}/comments":
          get:
            tags:
              - project
            summary: Project Task Comments
            description: Returns an array of comments from related project and project task
            operationId: getCommentsFromProjectTask
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
              - name: taskId
                in: path
                description: ID of project Task
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Comment"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
          post:
            tags:
              - project
            summary: Add comment
            description: Create new comment, attached to current ticket
            operationId: addCommentToProjectTask
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
              - name: taskId
                in: path
                description: ID of project Task
                required: true
                schema:
                  type: string
                  format: string
            requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        commentcontent:
                          description: Comment content
                          type: string
                          example: "Please fix problem ASAP"
            responses:
              "201":
                description: comment created
                content:
                  application/json:
                      schema:
                        $ref: "#/components/schemas/Comment"         
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
        "/projects/{projectId}/tasks/{taskId}/documents":
          get:
            tags:
              - project
            summary: Project Task Documents
            description: Returns an array of documents from related project task
            operationId: getDocumentsFromProjectTask
            security:
              - bearerAuth: []
            parameters:
              - name: projectId
                in: path
                description: ID of project
                required: true
                schema:
                  type: string
                  format: string
              - name: taskId
                in: path
                description: ID of project Task
                required: true
                schema:
                  type: string
                  format: string
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: "#/components/schemas/Document"
                        count:
                          type: number
                          example: 100
                        page:
                          type: number
                          example: 1
                        size:
                          type: number
                          example: 100                  
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
        "/statistics":
          get:
            tags:
              - statistics
            summary: Statistics
            description: Short information for dashboards
            operationId: getStatistics
            security:
              - bearerAuth: []
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          $ref: "#/components/schemas/Statistics"
              "400":
                description: Invalid ID supplied
              "404":
                description: Project not found
              "403":
                description: Operation not permitted
      externalDocs:
        description: Find out more about Swagger
        url: http://swagger.io
      servers:
        - url: http://127.0.0.1:4045/api/v1
      components:
        securitySchemes:
          bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: Token
        responses:
          UnauthorizedError:
            description: Access token is missing or invalid
            content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error:
                          type: string
                          example: "Anonymous Access"
                        field:
                          type: string
                          example: "crmid"
                        message:
                          type: string
                          example: "Got anonymous user from token or user without crmid"
        requestBodies:
          UserArray:
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
            description: List of user object
            required: true
        schemas:
          User:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              crmid:
                type: string
                example: "12x11"
              firstname:
                type: string
                example: "Ivan"
              lastname:
                type: string
                example: "Ivanov"
              description:
                type: string
                example: "This is description of contact"
              account_id:
                type: string
                example: "11x6"
              account_name:
                type: string
                example: "Coca Cola"
              title:
                type: string
                example: "Manager"
              departmant:
                type: string
                example: "Management"
              created_at:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
              updated_at:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
              is_active:
                type: boolean
              mailingcity:
                type: string
                example: "Moscow"
              email:
                type: string
                example: "emelyanov86@km.ru"
              password:
                type: string
              mailingstreet:
                type: string
                example: "Repina street, 143"
              mailingcountry:
                type: string
                example: "Russia"
              mailingstate:
                type: string
                example: "Chuvashia"
              image:
                type: string
              imagecontent:
                type: string
              assigned_user_id:
                type: string
                example: "17x1"
            xml:
              name: User
          Manager:
            type: object
            properties:
              id:
                type: string
                example: "19x1"
              user_name:
                type: string
                example: "jdoe"
              first_name:
                type: string
                example: "John"
              last_name:
                type: string
                example: "Doe"
              email2:
                type: string
                example: "john.doe@example.com"
              title:
                type: string
                example: "Project Manager"
              phone_work:
                type: string
                example: "+1 555 123456"
              department:
                type: string
                example: "IT Department"
              description:
                type: string
                example: "Responsible for managing IT projects."
              address_street:
                type: string
                example: "123 Main St"
              address_city:
                type: string
                example: "New York"
              address_state:
                type: string
                example: "NY"
              address_postalcode:
                type: string
                example: "10001"
              address_country:
                type: string
                example: "USA"
              imagename:
                type: string
                example: "johndoe.jpg"
                
          Token:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              token:
                type: string
                example: "DSR24DSRDWEFR"
              expiry:
                type: string
                example: "2023-04-17T19:44:08.791999494+02:00"
          ApiResponse:
            type: object
            properties:
              code:
                type: integer
                format: int32
              type:
                type: string
              message:
                type: string
          ValidationResponse:
            type: object
            properties:
              message:
                type: string
                example: "Key: 'UserSignUpInput.Password' Error:Field validation for 'Password' failed on the 'min' tag"
              field:
                type: string
                example: "Password"
              error:
                type: string
                example: "Validation Error"
          MessageResponse:
            type: object
            properties:
              message:
                type: string
                example: "Response was success"
              success:
                type: boolean
                example: true
          Module:
            type: object
            properties:
              label:
                type: string
                example: "Invoices"
              name:
                type: string
                example: "Invoice"
              createable:
                type: boolean
                example: true
              updateable:
                type: boolean
                example: true
              deleteable:
                type: boolean
                example: true
              retrieveable:
                type: boolean
                example: true
              fields:
                type: array
                items:
                  $ref: '#/components/schemas/ModuleField'
                example:
                  - name: "subject"
                    label: "Subject"
                    mandatory: true
                    isunique: true
                    nullable: false
                    editable: true
                    default: ""
                  - name: "duedate"
                    label: "Due Date"
                    mandatory: false
                    isunique: false
                    nullable: true
                    editable: true
                    default: "default2"
              idPrefix:
                type: string
                example: "2"
              isEntity:
                type: boolean
                example: true
              allowDuplicates:
                type: boolean
                example: false
              labelFields:
                type: string
                example: "subject"
          ModuleField:
            type: object
            properties:
              name:
                type: string
                example: "invoicestatus"
              label:
                type: string
                example: "Invoice Status"
              mandatory:
                type: boolean
                example: true
              isunique:
                type: boolean
                example: true
              nullable:
                type: boolean
                example: false
              editable:
                type: boolean
                example: true
              default:
                type: string
                example: "Created"
          HelpDesk:
            type: object
            properties:
              ticket_no:
                type: string
                example: TICKET_28
              assigned_user_id:
                type: string
                example: 19x1
              parent_id:
                type: string
                example: 11x329
              ticketpriorities:
                type: string
                example: Normal
              product_id:
                type: string
                example: ''
              ticketseverities:
                type: string
                example: ''
              ticketstatus:
                type: string
                example: Open
              ticketcategories:
                type: string
                example: ''
              hours:
                type: number
                example: 0.00000000
              days:
                type: number
                example: 0.00000000
              createdtime:
                type: string
                format: date-time
                example: '2017-02-08T10:56:07Z'
              modifiedtime:
                type: string
                format: date-time
                example: '2018-07-13T18:55:51Z'
              from_portal:
                type: string
                example: '0'
              modifiedby:
                type: string
                example: 19x1
              ticket_title:
                type: string
                example: Problem with emails
              description:
                type: string
                example: They are not attached to client
              solution:
                type: string
                example: Solution not provided yet
              contact_id:
                type: string
                example: ''
              created_user_id:
                type: string
                example: 19x1
              source:
                type: string
                example: IMPORT
              starred:
                type: boolean
                example: false
              tags:
                type: array
                example: ["test1", "test2"]
              id:
                type: string
                example: 17x923
              label:
                type: string
                example: Problem with emails
          Comment:
            type: "object"
            properties:
              id:
                type: "string"
                example: "37x123"
              commentcontent:
                type: "string"
                example: "This is a test comment."
              source:
                type: "string"
                example: "CRM"
              customer:
                type: "string"
                example: "11x456"
              userid:
                type: "string"
                example: "19x789"
              reasontoedit:
                type: "string"
                example: "Typo fix"
              creator:
                type: "string"
                example: "19x123"
              assigned_user_id:
                type: "string"
                example: "19x456"
              createdtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21T10:00:00Z"
              modifiedtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21T10:15:00Z"
              related_to:
                type: "string"
                example: "17x923"
              parent_comments:
                type: "string"
                example: ""
              is_private:
                type: "boolean"
                example: false
              filename:
                type: "string"
                example: "attachment.txt"
              related_email_id:
                type: "string"
                example: "eml-654"
              author:
                $ref: '#/components/schemas/CommentsAuthor'
          Document:
            type: "object"
            properties:
              notes_title:
                type: "string"
                example: "Sample Document"
              createdtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21 10:00:00"
              modifiedtime:
                type: "string"
                format: "date-time"
                example: "2023-04-21 10:15:00"
              filename:
                type: "string"
                example: "document.pdf"
              assigned_user_id:
                type: "string"
                example: "19x1"
              notecontent:
                type: "string"
                example: "This is a sample document content."
              filetype:
                type: "string"
                example: "application/pdf"
              filesize:
                type: "string"
                example: "1024"
              filelocationtype:
                type: "string"
                example: "I"
              fileversion:
                type: "string"
                example: "1.0"
              filestatus:
                type: "string"
                example: "1"
              filedownloadcount:
                type: "string"
                example: "5"
              folderid:
                type: "string"
                example: "22x1"
              note_no:
                type: "string"
                example: "DOC1"
              modifiedby:
                type: "string"
                example: "19x1"
              source:
                type: "string"
                example: "CRM"
              starred:
                type: "boolean"
                example: false
              tags:
                type: "array"
                items:
                  type: "string"
                example: ["tag1", "tag2"]
              id:
                type: "string"
                example: "15x40"
              imageattachmentids:
                type: "string"
                example: "15x41"
          File:
            type: "object"
            properties:
              fileid:
                type: "string"
                example: "file-123"
              filename:
                type: "string"
                example: "example.txt"
              filetype:
                type: "string"
                example: "text/plain"
              filesize:
                type: "integer"
                format: "int32"
                example: 1024
              filecontent:
                type: "string"
                example: "This is the content of the file."
          Faq:
            type: object
            properties:
              product_id:
                type: string
                example: "16x18"
              id:
                type: string
                example: "6x50"
              faqcategories:
                type: string
                example: "General"
              faqstatus:
                type: string
                example: "Published"
              question:
                type: string
                example: "What is your name?"
              faq_answer:
                type: string
                example: "My name is Sergey"
              createdtime:
                type: string
                format: date-time
                example: "2023-04-25 12:34:56"
              modifiedtime:
                type: string
                format: date-time
                example: "2023-04-26 12:34:56"
              starred:
                type: boolean
                example: false
              tags:
                type: array
                items:
                  type: string
                example:
                  - "products"
                  - "services"
          Company:
            type: object
            properties:
              organizationname:
                type: string
                example: "Индивидуальный предприниматель Емельянов Сергей Петрович"
              address:
                type: string
                example: "Бульвар Юности, д. 3, кв. 251"
              city:
                type: string
                example: "Чебоксары"
              state:
                type: string
                example: "Чувашия"
              country:
                type: string
                example: "Россия"
              code:
                type: string
                example: "428034"
              phone:
                type: string
                example: "+78432023893"
              fax:
                type: string
                example: "+78352223606"
              website:
                type: string
                example: "https://itvolga.com"
              logoname:
                type: string
                example: "logo.png"
              logo:
                type: string
                example: ''
              vatid:
                type: string
                example: ''
              inn:
                type: string
                example: "212802719116"
              kpp:
                type: string
                example: "0"
              bankaccount:
                type: string
                example: "40802810602500022487"
              bankname:
                type: string
                example: 'ТОЧКА ПАО БАНКА "ФК ОТКРЫТИЕ"'
              bankid:
                type: string
                example: "044525999"
              corraccount:
                type: string
                example: "30101810845250000999"
              director:
                type: string
                example: "Емельянов С.П."
              bookkeeper:
                type: string
                example: "Емельянов С.П."
              entepreneur:
                type: string
                example: "Емельянов Сергей Петрович"
              entepreneurreg:
                type: string
                example: "308213034700026"
              okpo:
                type: string
                example: "0157757201"
              id:
                type: string
                example: "23x1"
          Invoice:
            type: object
            properties:
              subject: 
                type: string
                example: Some laptops
              salesorder_id: 
                type: string
                example: "16x5"
              customerno: 
                type: string
                example: "customer-1"
              contact_id: 
                type: string
                example: 12x11
              invoicedate: 
                type: string
                format: date
                example: 2023-04-26
              duedate: 
                type: string
                format: date
                example: 2023-05-01
              vtiger_purchaseorder: 
                type: string
                example: "12x15"
              txtAdjustment: 
                type: number
                example: 0
              salescommission: 
                type: number
                example: 0
              exciseduty: 
                type: number
                example: 0.000
              hdnSubTotal: 
                type: number
                example: 1015.00000000
              hdnGrandTotal: 
                type: number
                example: 1289.05
              hdnTaxType: 
                type: string
                example: group
              hdnDiscountPercent: 
                type: string
                example: "15"
              hdnDiscountAmount: 
                type: string
                example: "18"
              hdnS_H_Amount: 
                type: number
                example: 0.00000000
              account_id: 
                type: string
                example: 11x6
              invoicestatus: 
                type: string
                example: "Created"
              assigned_user_id: 
                type: string
                example: 19x1
              createdtime: 
                type: string
                format: date-time
                example: "2023-04-26 18:07:57"
              modifiedtime: 
                type: string
                format: date-time
                example: "2023-04-26 18:07:57"
              modifiedby: 
                type: string
                example: 19x1
              currency_id: 
                type: string
                example: 21x1
              conversion_rate: 
                type: number
                example: 1.000
              bill_street: 
                type: string
                example: Bulvar Yunosti 3
              ship_street: 
                type: string
                example: Bulvar Yunosti 3
              bill_city: 
                type: string
                example: Cheboksary
              ship_city: 
                type: string
                example: Cheboksary
              bill_state: 
                type: string
                example: Chuvashia
              ship_state: 
                type: string
                example: Chuvashia
              bill_code: 
                type: string
                example: "428010"
              ship_code: 
                type: string
                example: "428010"
              bill_country: 
                type: string
                example: Russia
              ship_country: 
                type: string
                example: Russia
              bill_pobox: 
                type: string
                example: ""
              ship_pobox: 
                type: string
                example: ""
              description: 
                type: string
                example: "Some description"
              terms_conditions: 
                type: string
                example: "- Unless otherwise agreed in writing by the supplier all invoices are payable within thirty (30) days of the date of invoice in the currency of the invoice drawn on a bank based in India or by such other method as is agreed in advance by the Supplier."
              invoice_no: 
                type: string
                example: "INV1"
              pre_tax_total: 
                type: number
                example: 1015.00000000
              received: 
                type: number
                example: 0.00000000
              balance: 
                type: number
                example: 1289.05000000
              hdnS_H_Percent: 
                type: number
                example: 0.00000000
              potential_id: 
                type: string
                example: "5x18"
              source: 
                type: string
                example: CRM
              starred: 
                type: boolean
                example: false
              tags: 
                type: string
                example: "test1,test2"
              region_id: 
                type: string
                example: "0"
              id: 
                type: string
                example: 2x53
              label: 
                type: string
                example: Some laptops
              shipping_&_handling: 
                type: number
                example: 0
              shipping_&_handling_shtax1: 
                type: number
                example: 4.500
              shipping_&_handling_shtax2: 
                type: number
                example: 10.000
              shipping_&_handling_shtax3: 
                type: number
                example: 12.500
              LineItems: 
                type: array
                items: 
                  type: object
                  properties: 
                    parent_id: 
                      type: string
                      example: 2xArray
                    productid: 
                      type: string
                      example: 14x10
                    sequence_no: 
                      type: number
                      example: 1
                    quantity: 
                      type: number
                      example: 1.000
                    listprice: 
                      type: number
                      example: 1000.00000000
                    discount_percent: 
                      type: string
                      example: ""
                    discount_amount: 
                      type: string
                      example: ""
                    comment: 
                      type: string
                      example: "Some comment"
                    description: 
                      type: string
                      example: "Some description"
                    incrementondel: 
                      type: string
                      example: "1"
                    tax1: 
                      type: number
                      example: 4.500
                    tax2: 
                      type: number
                      example: 10.000
                    tax3: 
                      type: number
                      example: 12.500
                    image: 
                      type: string
                      example: ""
                    purchase_cost: 
                      type: number
                      example: 500.00000000
                    margin: 
                      type: number
                      example: 500.00000000
                    id: 
                      type: string
                      example: 33x4
                    product_name: 
                      type: string
                      example: Laptop HP
                    entity_type: 
                      type: string
                      example: Products
                    deleted: 
                      type: string
                      example: "0"
              productid: 
                type: string
                example: 14x10
              LineItems_FinalDetails: 
                type: object
          InvoiceShort:
            type: object
            properties:
              subject: 
                type: string
                example: Some laptops
              salesorder_id: 
                type: string
                example: "16x5"
              customerno: 
                type: string
                example: "customer-1"
              contact_id: 
                type: string
                example: 12x11
              invoicedate: 
                type: string
                format: date
                example: 2023-04-26
              duedate: 
                type: string
                format: date
                example: 2023-05-01
              vtiger_purchaseorder: 
                type: string
                example: "12x15"
              txtAdjustment: 
                type: number
                example: 0
              salescommission: 
                type: number
                example: 0
              exciseduty: 
                type: number
                example: 0.000
              hdnSubTotal: 
                type: number
                example: 1015.00000000
              hdnGrandTotal: 
                type: number
                example: 1289.05
              hdnTaxType: 
                type: string
                example: group
              hdnDiscountPercent: 
                type: string
                example: "15"
              hdnDiscountAmount: 
                type: string
                example: "18"
              hdnS_H_Amount: 
                type: number
                example: 0.00000000
              account_id: 
                type: string
                example: 11x6
              invoicestatus: 
                type: string
                example: "Created"
              assigned_user_id: 
                type: string
                example: 19x1
              createdtime: 
                type: string
                format: date-time
                example: "2023-04-26 18:07:57"
              modifiedtime: 
                type: string
                format: date-time
                example: "2023-04-26 18:07:57"
              modifiedby: 
                type: string
                example: 19x1
              currency_id: 
                type: string
                example: 21x1
              conversion_rate: 
                type: number
                example: 1.000
              bill_street: 
                type: string
                example: Bulvar Yunosti 3
              ship_street: 
                type: string
                example: Bulvar Yunosti 3
              bill_city: 
                type: string
                example: Cheboksary
              ship_city: 
                type: string
                example: Cheboksary
              bill_state: 
                type: string
                example: Chuvashia
              ship_state: 
                type: string
                example: Chuvashia
              bill_code: 
                type: string
                example: "428010"
              ship_code: 
                type: string
                example: "428010"
              bill_country: 
                type: string
                example: Russia
              ship_country: 
                type: string
                example: Russia
              bill_pobox: 
                type: string
                example: ""
              ship_pobox: 
                type: string
                example: ""
              description: 
                type: string
                example: "Some description"
              terms_conditions: 
                type: string
                example: "- Unless otherwise agreed in writing by the supplier all invoices are payable within thirty (30) days of the date of invoice in the currency of the invoice drawn on a bank based in India or by such other method as is agreed in advance by the Supplier."
              invoice_no: 
                type: string
                example: "INV1"
              pre_tax_total: 
                type: number
                example: 1015.00000000
              received: 
                type: number
                example: 0.00000000
              balance: 
                type: number
                example: 1289.05000000
              hdnS_H_Percent: 
                type: number
                example: 0.00000000
              potential_id: 
                type: string
                example: "5x18"
              source: 
                type: string
                example: CRM
              starred: 
                type: boolean
                example: false
              tags: 
                type: string
                example: "test1,test2"
              region_id: 
                type: string
                example: "0"
              id: 
                type: string
                example: 2x53
              label: 
                type: string
                example: Some laptops
              shipping_&_handling: 
                type: number
                example: 0
              shipping_&_handling_shtax1: 
                type: number
                example: 4.500
              shipping_&_handling_shtax2: 
                type: number
                example: 10.000
              shipping_&_handling_shtax3: 
                type: number
                example: 12.500
          ServiceContract:
                type: object
                properties:
                  id:
                    type: string
                    example: "24x59"
                  assigned_user_id:
                    type: string
                    example: "19x1"
                  start_date:
                    type: string
                    format: date-time
                    example: "2023-05-01T00:00:00Z"
                  end_date:
                    type: string
                    format: date-time
                    example: "2023-12-31T00:00:00Z"
                  sc_related_to:
                    type: string
                    example: "12x11"
                  tracking_unit:
                    type: string
                    example: "hours"
                  total_units:
                    type: number
                    format: float
                    example: 1000
                  used_units:
                    type: number
                    format: float
                    example: 200
                  subject:
                    type: string
                    example: "Mocked Service Contract"
                  due_date:
                    type: string
                    format: date-time
                    example: "2023-08-15T00:00:00Z"
                  planned_duration:
                    type: integer
                    example: 120
                  actual_duration:
                    type: integer
                    example: 90
                  contract_status:
                    type: string
                    example: "In Progress"
                  contract_priority:
                    type: string
                    example: "high"
                  contract_type:
                    type: string
                    example: "Support"
                  progress:
                    type: number
                    format: float
                    example: 20
                  contract_no:
                    type: string
                    example: "SERCON2"
                  created_time:
                    type: string
                    format: date-time
                    example: "2023-04-25T00:00:00Z"
                  modified_time:
                    type: string
                    format: date-time
                    example: "2023-04-30T00:00:00Z"
                  starred:
                    type: boolean
                    example: false
                  tags:
                    type: array
                    items:
                      type: string
                    example: ["tag1", "tag2"]
                  label:
                    type: string
                    example: "Label-A"
          Product:
            type: object
            properties:
              productname:
                type: string
                example: "Example Product"
              product_no:
                type: string
                example: "PRO1"
              productcode:
                type: string
                example: "ABC123"
              discontinued:
                type: boolean
                example: false
              manufacturer:
                type: string
                example: "MetBeat Corp"
              productcategory:
                type: string
                example: "Hardware"
              sales_start_date:
                type: string
                format: date-time
                example: "2023-01-01T09:57:19Z"
              sales_end_date:
                type: string
                format: date-time
                example: "2023-12-31T09:57:19Z"
              start_date:
                type: string
                format: date-time
                example: "2023-01-01T09:57:19Z"
              expiry_date:
                type: string
                format: date-time
                example: "2023-12-31T09:57:19Z"
              website:
                type: string
                example: "https://example.com/product"
              vendor_id:
                type: string
                example: "V123"
              mfr_part_no:
                type: string
                example: "MFR-123"
              vendor_part_no:
                type: string
                example: "VENDOR-456"
              serial_no:
                type: string
                example: "SN-789"
              productsheet:
                type: string
                example: "https://example.com/product/sheet.pdf"
              glacct:
                type: string
                example: "302-Rental-Income"
              createdtime:
                type: string
                format: date-time
                example: "2023-05-18T09:57:19Z"
              modifiedtime:
                type: string
                format: date-time
                example: "2023-05-18T09:57:19Z"
              unit_price:
                type: number
                example: 10.99
              commissionrate:
                type: number
                example: 0.05
              taxclass:
                type: string
                example: ""
              usageunit:
                type: string
                example: "Each"
              qty_per_unit:
                type: number
                example: 1.0
              qtyinstock:
                type: number
                example: 100.0
              reorderlevel:
                type: integer
                example: 50
              assigned_user_id:
                type: string
                example: "19x1"
              qtyindemand:
                type: integer
                example: 10
              description:
                type: string
                example: "Example product description"
              purchase_cost:
                type: number
                example: 50.0
              starred:
                type: boolean
                example: true
              id:
                type: string
                example: "14x9"
              imageattachmentids:
                type: string
                example: "14x62"
              label:
                type: string
                example: "Featured"
              currency1:
                type: number
                example: 100.0
              currency_id:
                type: string
                example: "21x11"
              currency:
                $ref: "#/components/schemas/Currency"
              imagecontent:
                type: string
          Currency:
            type: object
            properties:
              id:
                type: string
                example: "21x1"
              currency_name:
                type: string
                example: "Euro"
              currency_code:
                type: string
                example: "EUR"
              currency_symbol:
                type: string
                example: "€"
              conversion_rate:
                type: number
                format: float
                example: 1.0
              currency_status:
                type: string
                example: "Active"
              defaultid:
                type: string
                example: "-11"
              deleted:
                type: boolean
                example: false
          Service:
            type: object
            properties:
              servicename:
                type: string
                example: "Premium Hosting"
              service_no:
                type: string
                example: "SER1"
              discontinued:
                type: boolean
                example: true
              sales_start_date:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              sales_end_date:
                type: string
                format: date-time
                example: "2023-12-31T00:00:00Z"
              start_date:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              expiry_date:
                type: string
                format: date-time
                example: "2023-12-31T00:00:00Z"
              website:
                type: string
                example: "https://example.com"
              service_usageunit:
                type: string
                example: "Hours"
              qty_per_unit:
                type: number
                format: float
                example: 4
              servicecategory:
                type: string
                example: "Support"
              unit_price:
                type: number
                format: float
                example: 9.99
              taxclass:
                type: string
                example: ""
              commissionrate:
                type: number
                format: float
                example: 0.1
              purchase_cost:
                type: number
                format: float
                example: 5
              tax2:
                type: number
                format: float
                example: 0.05
              tax3:
                type: number
                format: float
                example: 0.02
              currency1:
                type: number
                format: float
                example: 1.2
              currency_id:
                type: string
                example: "21x1"
              created_time:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              modified_time:
                type: string
                format: date-time
                example: "2023-01-10T00:00:00Z"
              assigned_user_id:
                type: string
                example: "19x1"
              description:
                type: string
                example: "Premium web hosting with unlimited bandwidth"
              source:
                type: string
                example: "CRM"
              starred:
                type: boolean
                example: false
              tags:
                type: array
                items:
                  type: string
                example: ["web", "hosting"]
              id:
                type: string
                example: "25x52"
              label:
                type: string
                example: "Premium Hosting"
              currency:
                $ref: '#/components/schemas/Currency'
          Project:
            type: object
            properties:
              projectname:
                type: string
                example: "Website Redesign"
              startdate:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              targetenddate:
                type: string
                format: date-time
                example: "2023-03-31T00:00:00Z"
              actualenddate:
                type: string
                format: date-time
                example: "2023-03-30T00:00:00Z"
              projectstatus:
                type: string
                example: "prospecting"
              projecttype:
                type: string
                example: "administrative"
              linktoaccountscontacts:
                type: string
                example: "11x6"
              project_no:
                type: string
                example: "PROJ1"
              targetbudget:
                type: string
                example: "10000"
              projecturl:
                type: string
                example: "https://example.com/redesign-project"
              projectpriority:
                type: string
                example: "normal"
              progress:
                type: string
                example: "10%"
              isconvertedfrompotential:
                type: boolean
                example: false
              potentialid:
                type: string
                example: "13x14"
              created_time:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              modified_time:
                type: string
                format: date-time
                example: "2023-03-30T00:00:00Z"
              assigned_user_id:
                type: string
                example: "19x1"
              description:
                type: string
                example: "Redesign the company website to improve user experience"
              source:
                type: string
                example: "CRM"
              starred:
                type: boolean
                example: false
              tags:
                type: array
                items:
                  type: string
                example: ["website", "redesign"]
              id:
                type: string
                example: "29x54"
              label:
                type: string
                example: "Website Redesign"
              statistics:
                $ref: '#/components/schemas/CurrentProjectStatistics'
          ProjectTask:
            type: object
            properties:
              projecttaskname:
                type: string
                example: "Design Homepage"
              projecttasktype:
                type: string
                example: "administrative"
              projecttaskpriority:
                type: string
                example: "low"
              projectid:
                type: string
                example: "29x54"
              assigned_user_id:
                type: string
                example: "19x1"
              projecttasknumber:
                type: string
                example: "1"
              projecttask_no:
                type: string
                example: "PT1"
              projecttaskprogress:
                type: string
                example: "75%"
              projecttaskhours:
                type: string
                example: "10"
              startdate:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              enddate:
                type: string
                format: date-time
                example: "2023-01-07T00:00:00Z"
              createdtime:
                type: string
                format: date-time
                example: "2023-01-01T00:00:00Z"
              modifiedtime:
                type: string
                format: date-time
                example: "2023-01-05T00:00:00Z"
              description:
                type: string
                example: "Create a new design for the homepage"
              source:
                type: string
                example: "CRM"
              starred:
                type: boolean
                example: false
              tags:
                type: array
                items:
                  type: string
                example: ["design", "homepage"]
              projecttaskstatus:
                type: string
                example: "Open"
              id:
                type: string
                example: "28x56"
              label:
                type: string
                example: "Design Homepage"
          Statistics:
            type: object
            properties:
              tickets:
                $ref: '#/components/schemas/TicketStatistics'
              projects:
                $ref: '#/components/schemas/ProjectStatistics'
              tasks:
                $ref: '#/components/schemas/TaskStatistics'
              invoices:
                $ref: '#/components/schemas/InvoiceStatistics'
          TicketStatistics:
            type: object
            properties:
              total:
                type: integer
                example: 100
              Open:
                type: integer
                example: 20
              In Progress:
                type: integer
                example: 50
              Wait For Response:
                type: integer
                example: 10
              Closed:
                type: integer
                example: 20
          ProjectStatistics:
            type: object
            properties:
              total:
                type: integer
                example: 50
              open:
                type: integer
                example: 25
              open_hours:
                type: number
                format: float
                example: 100.25
              closed:
                type: integer
                example: 25
              closed_hours:
                type: number
                format: float
                example: 333.25
          TaskStatistics:
            type: object
            properties:
              total:
                type: integer
                example: 200
              open:
                type: integer
                example: 50
              open-hours:
                type: number
                format: float
                example: 100.25
              In Progress:
                type: integer
                example: 100
              In Progress-hours:
                type: number
                format: float
                example: 100.25
              Completed:
                type: integer
                example: 50
              Completed-hours:
                type: number
                format: float
                example: 100.25
          InvoiceStatistics:
            type: object
            properties:
              total_qty:
                type: integer
                example: 100
              total_sum:
                type: number
                format: float
                example: 12000.00
              open_qty:
                type: integer
                example: 30
              open_sum:
                type: number
                format: float
                example: 5000.00
              paid_qty:
                type: integer
                example: 70
              paid_sum:
                type: number
                format: float
                example: 7000.00
          CommentsAuthor:
            type: object
            properties:
              firstname:
                type: string
                example: "Ksenia"
              lastname:
                type: string
                example: "Ivanova"
              email:
                type: string
                example: "ks@mail.ru"
              imagecontent:
                type: string
                example: ""
              id:
                type: string
                example: "19x1"
          CurrentProjectStatistics:
            type: object
            properties:
              total_tasks:
                type: number
                example: 10
              total_hours:
                type: number
                example: 120
              open_tasks:
                type: number
                example: 3
              closed_tasks:
                type: number
                example: 5
              in_progress_tasks:
                type: number
                example: 1
              deferred_tasks:
                type: number
                example: 2
              cancelled_tasks:
                type: number
                example: 1
              low_tasks:
                type: number
                example: 1
              normal_tasks:
                type: number
                example: 5
              high_tasks:
                type: number
                example: 1
    contentType: yaml
    _type: api_spec
  - _id: env_env_7051e4988ba662848196b333737a56823b214220_sub
    parentId: env_7051e4988ba662848196b333737a56823b214220
    modified: 1682232639925
    created: 1681752584168
    name: OpenAPI env
    data:
      scheme: http
      base_path: /api/v1
      host: 127.0.0.1:4050
      bearerToken: DJWC32V7MAGCRDT27RVTVLPSQA
      URL: http://127.0.0.1:4050/api/v1
      MAIN_URL: http://127.0.0.1:4050
      managerId: 19x1
      moduleName: HelpDesk
      fileId: 15x46
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - URL
        - MAIN_URL
        - bearerToken
        - managerId
        - moduleName
        - fileId
    color: null
    isPrivate: false
    metaSortKey: 1681752584168
    _type: environment
  - _id: env_1bfede95dc144997a9155f6e79a3eaa5
    parentId: env_7051e4988ba662848196b333737a56823b214220
    modified: 1684649726981
    created: 1681826841922
    name: Local
    data:
      scheme: http
      base_path: /api/v1
      host: 127.0.0.1:4050
      URL: http://127.0.0.1:4050/api/v1
      MAIN_URL: http://127.0.0.1:4050
      bearerToken: YXXNAEFCDWVOAWRADJTS4GOG6E
      managerId: 19x1
      moduleName: HelpDesk
      ticketId: 17x28
      fileId: 15x46
      invoiceId: 2x53
      scId: 24x59
      productId: 14x9
      serviceId: 25x52
      projectId: 29x54
      taskId: 28x56
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - URL
        - MAIN_URL
        - bearerToken
        - managerId
        - moduleName
        - ticketId
        - fileId
        - invoiceId
        - scId
        - productId
        - serviceId
        - projectId
        - taskId
    color: null
    isPrivate: false
    metaSortKey: 1681826841922
    _type: environment
  - _id: env_1e7a3ddb61424a3aa9695942d9b177e5
    parentId: env_7051e4988ba662848196b333737a56823b214220
    modified: 1684519423950
    created: 1684504939920
    name: Development
    data:
      scheme: http
      base_path: /api/v1
      host: 185.135.137.48:4050
      URL: http://185.135.137.48:4050/api/v1
      MAIN_URL: http://185.135.137.48:4050
      bearerToken: NRZQDXVYYXXIBEYVEO2IZM66TU
      managerId: 19x1
      moduleName: HelpDesk
      ticketId: 17x6081
      fileId: 15x46
      invoiceId: 2x53
      scId: 24x59
      productId: 14x9
      serviceId: 25x52
      projectId: 29x54
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - URL
        - MAIN_URL
        - bearerToken
        - managerId
        - moduleName
        - ticketId
        - fileId
        - invoiceId
        - scId
        - productId
        - serviceId
        - projectId
    color: null
    isPrivate: false
    metaSortKey: 1684504939920
    _type: environment
