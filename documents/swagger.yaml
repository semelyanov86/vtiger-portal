openapi: 3.0.0
info:
  description: "This is API documentation for Vtiger custmer portal service. This is only client for Vtiger API. This is a place for your customers to see and update tickets, view past quotes and invoices, and share files. The customer portal is a self-service portal where customers can get their business-related questions answered."
  version: 1.0.2
  title: Vtiger Go Customer Portal
  termsOfService: http://swagger.io/terms/
  contact:
    email: se@sergeyem.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: user
    description: Operations with users, mapped to contacts module
    externalDocs:
      description: Contacts module
      url: https://www.vtiger.com/features/contact-management/
  - name: support
    description: Technical stuff for analytics and checking portal status
  - name: manager
    description: Users module in vtiger, getting info about assigned managers
    externalDocs:
      description: Users module
      url: https://help.vtiger.com/article/146605576-User-Management---Users
  - name: module
    description: Module informations with all data in it
  - name: tickets
    description: Operations with HelpDesk module
  - name: faq
    description: Frequently asked questions
  - name: invoice
    description: Endpoints for getting invoices
    externalDocs:
      description: Invoices module
      url: https://help.vtiger.com/article/117268545-Creating-and-Managing-Invoices
  - name: sales-order
    description: Endpoints for getting sales orders
  - name: service-contracts
    description: Service contracts data
  - name: product
    description: Product data from vtiger
  - name: service
    description: Endpoints for getting services from Vtiger.
  - name: project
    description: Project module in Vtiger CRM
  - name: statistics
    description: Endpoints for dashboards
  - name: leads
    description: Storing leads in crm
  - name: otp
    description: Routes for handling 2FA processes
  - name: search
    description: Routes for doing global search
  - name: payment
    description: Accepting stripe payments
  - name: notification
    description: Notification messages for users
  - name: custom-modules
    description: Endpoints to get data from custom modules
paths:
  /users:
    post:
      tags:
        - user
      summary: Create user
      description: Here you can register new contact in portal using activation code. In order to register, you need to enter in vtiger crm in contact module special code, which allows contact to register in portal. Name of field stored in configuration of script. After successfull registration content of this field will be removed. After successfull registration system will also sent welcome email. You can disable sending email process in configuration.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "emelyanov86@km.ru"
                password:
                  type: string
                  example: "PasswordHere"
                code:
                  type: string
                  example: "1122"
        description: Passing email and password you can authorize in system and get bearer token
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /users/login:
    post:
      tags:
        - user
      summary: Login in system
      description: "Here you can get authentication bearer"
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "emelyanov86@km.ru"
                password:
                  type: string
                  example: "PasswordHere"
        description: Pass needed data to create new user from contact in Vtiger
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "400":
          description: Invalid username/password supplied
  /users/restore:
    post:
      tags:
        - user
      summary: Restore Password
      description: "Send password restore token to email"
      operationId: restorePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "emelyanov86@km.ru"
        description: Pass an email address where you receive an email with token link
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Invalid email supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /users/password:
    put:
      tags:
        - user
      summary: Reset Password
      description: "Reset password usin password reset token"
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "FDDD23FDDFKR"
                password:
                  type: string
                  example: "NewPassword"
        description: Pass a token and new password to update a user
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid token provided
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /users/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  "/users/all":
    get:
      tags:
        - user
      summary: Get Users From My Company
      description: This endpoint returns a list vtiger contacts, attached to the same company, as authorized user.
      operationId: getAllAccountUsers
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  /users/my:
    get:
      tags:
        - user
      summary: Get data about authenticated user
      description: You must provide an Authorisation header in order to get currenc user data. Note, that if user does not attached to any company, you will get 403 response.
      operationId: myUser
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/User"
        "401":
          description: anonymous access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Anonymous Access"
                  field:
                    type: string
                    example: "crmid"
                  message:
                    type: string
                    example: "Got anonymous user from token or user without crmid"
    put:
      tags:
        - user
      summary: Update User
      description: Allows authorized user information about yourself.
      operationId: updateUser
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "202":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: User or file not found
        "403":
          description: Operation not permitted
  /users/settings:
    get:
      tags:
        - user
      summary: Get User Settings
      description: Get supported user settings fields. Currently supported only boolean. Returns - key as field name and value - boolean value of this field
      operationId: userSettings
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserSettings"
        "401":
          description: anonymous access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Anonymous Access"
                  field:
                    type: string
                    example: "crmid"
                  message:
                    type: string
                    example: "Got anonymous user from token or user without crmid"
    patch:
      tags:
        - user
      summary: Update Settings
      description: Allows user to change settings. Send key as a user name and boolean value
      operationId: updateUserSettings
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettings"
      responses:
        "202":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: User or file not found
        "403":
          description: Operation not permitted
  "/users/my/documents":
    get:
      tags:
        - user
      summary: My Documents
      description: Returns list of attached to contact or account documents
      operationId: getMyDocuments
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  /users/my/account:
    get:
      tags:
        - user
      summary: Get account data
      description: Returns account data, attached to current contact
      operationId: myAccount
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
        "401":
          description: anonymous access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Anonymous Access"
                  field:
                    type: string
                    example: "crmid"
                  message:
                    type: string
                    example: "Got anonymous user from token or user without crmid"
  "/users/{userId}/file/{fileId}":
    get:
      tags:
        - user
      summary: Get file from User
      description: Returns a content of file from user. Need to pass as user ID crmid
      operationId: getFileFromUser
      security:
        - bearerAuth: []
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: string
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/File"
        "400":
          description: Invalid ID supplied
        "404":
          description: User or file not found
        "403":
          description: Operation not permitted
  "/users/{userId}/documents/{documentId}":
    delete:
      tags:
        - user
      summary: Delete file from user
      description: Deletes document from related user
      operationId: deleteDocumentFromUser
      security:
        - bearerAuth: []
      parameters:
        - name: documentId
          in: path
          description: ID of document
          required: true
          schema:
            type: string
            format: string
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: string
      responses:
        "204":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: User or file not found
        "403":
          description: Operation not permitted
  "/otp/generate":
    get:
      tags:
        - otp
      summary: Generate OTP
      description: Here you can get token params to display QR code
      operationId: generateOTP
      security:
        - bearerAuth: []
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OtpResult"
        "401":
          description: anonymous access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Anonymous Access"
                  field:
                    type: string
                    example: "crmid"
                  message:
                    type: string
                    example: "Got anonymous user from token or user without crmid"
  /otp/verify:
    patch:
      tags:
        - otp
      summary: Verify Token
      description: "Attach application to verification service"
      operationId: verifyToken
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "12x12"
                token:
                  type: string
                  example: "TOKENDATA"
        description: Pass a user id and token to verify token
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid token provided
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /otp/validate:
    patch:
      tags:
        - otp
      summary: Validate Token
      description: "Main endpoint for passing 2fa authentication"
      operationId: validateToken
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "558776"
        description: Pass digits to verify token
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid token provided
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /otp/disable:
    patch:
      tags:
        - otp
      summary: Disable OTP
      description: "Here you can completely remove 2FA data"
      operationId: disalbeOTP
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "558776"
        description: Pass digits to verify token
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid token provided
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  "/managers/{managerId}":
    get:
      tags:
        - manager
      summary: Find manager by ID
      description: Returns a single manager
      operationId: getManagerById
      security:
        - bearerAuth: []
      parameters:
        - name: managerId
          in: path
          description: ID of manager to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Manager"
        "400":
          description: Invalid ID supplied
        "404":
          description: Manager not found
  "/modules/{moduleName}":
    get:
      tags:
        - module
      summary: Module Info
      description: Get all information about module by it name
      operationId: describeModule
      security:
        - bearerAuth: []
      parameters:
        - name: moduleName
          in: path
          description: Name of module to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Module"
        "400":
          description: Invalid Name supplied
        "404":
          description: Module not found
        "500":
          description: Vtiger error response
  /ping:
    get:
      tags:
        - support
      summary: Status of application
      description: Get response with full status of application
      operationId: ping
      responses:
        "200":
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /company:
    get:
      tags:
        - support
      summary: Get company data
      description: All company information stored in company details of Vtiger. Accessable without bearer token.
      operationId: companyDetails
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Company"
  "/tickets/{ticketId}":
    get:
      tags:
        - tickets
      summary: Find HelpDesk by ID
      description: Returns a single ticket
      operationId: getHelpDeskById
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/HelpDesk"
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk not found
        "403":
          description: Operation not permitted
    put:
      tags:
        - tickets
      summary: Update ticket
      description: Allows authorized user update ticket.
      operationId: updateTicket
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_title:
                  description: Title of ticket
                  type: string
                  example: "Problem with internet"
                ticketpriorities:
                  description: Proirity of ticket
                  type: string
                  example: "Normal"
                ticketseverities:
                  description: Severity of ticket
                  type: string
                  example: "Minor"
                ticketcategories:
                  description: Category of ticket
                  type: string
                  example: "Big Problem"
                description:
                  description: Some description of ticket
                  type: string
                  example: "There are no internet in my appartment."
      responses:
        "202":
          description: Ticket updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelpDesk"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
    patch:
      tags:
        - tickets
      summary: Partly Update ticket
      description: Allows update specific field in ticket. Currently we support only status field.
      operationId: updateTicketPartly
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ticketstatus:
                  description: Status of ticket
                  type: string
                  example: "Closed"
      responses:
        "202":
          description: Ticket updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelpDesk"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
  "/tickets/{ticketId}/comments":
    get:
      tags:
        - tickets
      summary: Related comments from ticket
      description: Returns an array of comments from related ticket
      operationId: getCommentsFromTicket
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk not found
        "403":
          description: Operation not permitted
    post:
      tags:
        - tickets
      summary: Add comment
      description: Create new comment, attached to current ticket
      operationId: addCommentToTicket
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commentcontent:
                  description: Comment content
                  type: string
                  example: "Please fix problem ASAP"
      responses:
        "201":
          description: comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk not found
        "403":
          description: Operation not permitted
  "/tickets/{ticketId}/documents":
    get:
      tags:
        - tickets
      summary: Related documents from ticket
      description: Returns an array of documents from related ticket
      operationId: getDocumentsFromTicket
      security:
        - bearerAuth: []
      parameters:
        - name: ticketId
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk not found
        "403":
          description: Operation not permitted
  "/tickets/{ticketId}/file/{fileId}":
    get:
      tags:
        - tickets
      summary: Get file in Ticket
      description: Returns an array of documents from related ticket
      operationId: getFileFromTicket
      security:
        - bearerAuth: []
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: string
        - name: ticketId
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/File"
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
  "/tickets":
    post:
      tags:
        - tickets
      summary: Create new ticket
      description: Allows authorized user create new ticket and send it to Vtiger CRM.
      operationId: createTicket
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_title:
                  description: Title of ticket
                  type: string
                  example: "Problem with internet"
                ticketpriorities:
                  description: Proirity of ticket
                  type: string
                  example: "Normal"
                ticketseverities:
                  description: Severity of ticket
                  type: string
                  example: "Minor"
                ticketcategories:
                  description: Category of ticket
                  type: string
                  example: "Big Problem"
                description:
                  description: Some description of ticket
                  type: string
                  example: "There are no internet in my appartment."
      responses:
        "201":
          description: Ticket created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelpDesk"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
    get:
      tags:
        - tickets
      summary: Get Tickets
      description: This endpoint returns a list of tickets based on the provided page number and page size. You can see tickets attached to company of authorized user. Note, there is a known problem with count param. Currently we count all tickets. If you pass search param, we return all tickets of user, not searched one.
      operationId: getAllTickets
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
          required: false
          schema:
            type: string
            example: -ticket_no
        - name: search
          in: query
          description: Search with LIKE filter in ticket_no and ticket_title fields
          required: false
          schema:
            type: string
            example: TT3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/HelpDesk"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/faqs":
    get:
      tags:
        - faq
      summary: Get All Faqs
      description: This endpoint returns a list of frequently asked questions based on the provided page number and page size.
      operationId: getAllFaqs
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Faq"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/faqs/starred":
    get:
      tags:
        - faq
      summary: Get Only Starred Faqs
      description: This endpoint returns a list of frequently asked questions based on the starred status.
      operationId: getStarredFaqs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Faq"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/search":
    get:
      tags:
        - search
      summary: Global Search
      description: Doing search in faq, tickets and project tasks
      operationId: globalSearch
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Search with LIKE filter in ticket_no and ticket_title fields
          required: false
          schema:
            type: string
            example: TT3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Search"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/invoices":
    get:
      tags:
        - invoice
      summary: Get Invoices
      description: This endpoint returns a list of invoices based on the provided page number and page size.
      operationId: getAllInvoices
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
          required: false
          schema:
            type: string
            example: -invoice_no
        - name: search
          in: query
          description: Search with LIKE filter in salesorder_no and subject
          required: false
          schema:
            type: string
            example: SO3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SalesOrderShort"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/sales-orders/{salesOrderId}":
    get:
      tags:
        - sales-order
      summary: Find Sales Order by id
      description: Returns a single Sales Order
      operationId: getSalesOrderById
      security:
        - bearerAuth: []
      parameters:
        - name: salesOrderId
          in: path
          description: ID of sales order to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/SalesOrder"
        "400":
          description: Invalid ID supplied
        "404":
          description: Sales Order not found
        "403":
          description: Operation not permitted
  "/sales-orders":
    get:
      tags:
        - sales-order
      summary: Get Sales Orders
      description: This endpoint returns a list of sales orders based on the provided page number and page size.
      operationId: getAllSalesOrders
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
          required: false
          schema:
            type: string
            example: -salesorder_no
        - name: search
          in: query
          description: Search with LIKE filter in salesorder_no and subject
          required: false
          schema:
            type: string
            example: INV3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/InvoiceShort"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/invoices/{invoiceId}":
    get:
      tags:
        - invoice
      summary: Find Invoice by id
      description: Returns a single Invoice
      operationId: getInvoiceById
      security:
        - bearerAuth: []
      parameters:
        - name: invoiceId
          in: path
          description: ID of invoice to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Invoice"
        "400":
          description: Invalid ID supplied
        "404":
          description: Invoice not found
        "403":
          description: Operation not permitted
  "/service-contracts/{scId}":
    get:
      tags:
        - service-contracts
      summary: Find Service Contract by ID
      description: Returns a single service contract
      operationId: getServiceContractById
      security:
        - bearerAuth: []
      parameters:
        - name: scId
          in: path
          description: ID of service contract to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ServiceContract"
        "400":
          description: Invalid ID supplied
        "404":
          description: ServiceContract not found
        "403":
          description: Operation not permitted
  "/products":
    get:
      tags:
        - product
      summary: Get Products
      description: This endpoint returns a list of products based on the provided page number and page size and filter params.
      operationId: getAllProducts
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: filter[discontinued]
          in: query
          description: Filter products by their discontinued status (e.g., filter[discontinued]=false)
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/products/{productId}":
    get:
      tags:
        - product
      summary: Find Product by ID
      description: Returns a single product
      operationId: getProductById
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "403":
          description: Operation not permitted
  "/services":
    get:
      tags:
        - service
      summary: Get Services
      description: This endpoint returns a list of services based on the provided page number and page size and filter params.
      operationId: getAllServices
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: filter[discontinued]
          in: query
          description: Filter services by their discontinued status (e.g., filter[discontinued]=false)
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Service"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/services/{serviceId}":
    get:
      tags:
        - service
      summary: Find Service by ID
      description: Returns a single service
      operationId: getServiceById
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of service to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Service"
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "403":
          description: Operation not permitted
  "/service-contracts":
    get:
      tags:
        - service-contracts
      summary: Get All Service Contracts
      description: This endpoint returns a list of service contracts based on the provided page number and page size.
      operationId: getAllServiceContracts
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ServiceContract"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/projects":
    get:
      tags:
        - project
      summary: Get Projects
      description: This endpoint returns a list of projects based on the provided page number and page size. Currently there is known problem abount count key. It calculates all project, not filtered by search param.
      operationId: getAllProjects
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
          required: false
          schema:
            type: string
            example: -project_no
        - name: search
          in: query
          description: Search with LIKE filter in project_no and projecttitle and projecttype fields
          required: false
          schema:
            type: string
            example: TT3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
  "/projects/{projectId}":
    get:
      tags:
        - project
      summary: Find Project by ID
      description: Returns a single project
      operationId: getProjectById
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project to return
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/comments":
    get:
      tags:
        - project
      summary: Related comments from project
      description: Returns an array of comments from related project
      operationId: getCommentsFromProject
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
    post:
      tags:
        - project
      summary: Add comment
      description: Create new comment, attached to current ticket
      operationId: addCommentToProject
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commentcontent:
                  description: Comment content
                  type: string
                  example: "Please fix problem ASAP"
      responses:
        "201":
          description: comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/documents":
    get:
      tags:
        - project
      summary: Related documents from project
      description: Returns an array of documents from related project
      operationId: getDocumentsFromProject
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/file/{fileId}":
    get:
      tags:
        - project
      summary: Get file in Project
      description: Returns an array of documents from related project
      operationId: getFileFromProject
      security:
        - bearerAuth: []
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: string
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/File"
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/tasks/{taskId}":
    get:
      tags:
        - project
      summary: Get Project Task
      description: Returns a project task by its ID
      operationId: getProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: taskId
          in: path
          description: ID of task
          required: true
          schema:
            type: string
            format: string
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProjectTask"
        "400":
          description: Invalid ID supplied
        "404":
          description: ProjectTask or Project not found
        "403":
          description: Operation not permitted
    patch:
      tags:
        - project
      summary: Task Update
      description: Allows update specific field in project task.
      operationId: updateTaskPartly
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of related Project
          required: true
          schema:
            type: string
            format: string
        - name: taskId
          in: path
          description: ID of task
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projecttaskstatus:
                  description: Status of task
                  type: string
                  example: "Closed"
                projecttaskname:
                  description: Name of task
                  type: string
                  example: "Need to fix issue"
                description:
                  description: Description of project task
                  type: string
                  example: "There is very big problem"
                projecttaskpriority:
                  description: Priority of Project Task
                  type: string
                  example: "Urgent"
                projecttasktype:
                  description: Type of task
                  type: string
                  example: "administrative"
      responses:
        "202":
          description: Ticket updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTask"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: ProjectTask or project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/tasks":
    get:
      tags:
        - project
      summary: Get Project Tasks
      description: This endpoint returns a list of project tasks based on the provided page number and page size. There is permission validation based on project ID. If contact if not owned by project, it can not see project tasks.
      operationId: getTasksFromProject
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectTask"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid pagination params
        "403":
          description: Operation not permitted
    post:
      tags:
        - project
      summary: Create new task
      description: Allows authorized user create project task, attached to project
      operationId: createProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projecttaskname:
                  description: Title of task
                  type: string
                  example: "Problem with internet"
                projecttasktype:
                  description: Type of task
                  type: string
                  example: "administrative"
                projecttaskpriority:
                  description: Priority of task
                  type: string
                  example: "normal"
                description:
                  description: Some description of task
                  type: string
                  example: "There are no internet in my appartment."
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTask"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: Task or file not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/tasks/{taskId}/comments":
    get:
      tags:
        - project
      summary: Project Task Comments
      description: Returns an array of comments from related project and project task
      operationId: getCommentsFromProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
        - name: taskId
          in: path
          description: ID of project Task
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
    post:
      tags:
        - project
      summary: Add comment
      description: Create new comment, attached to current ticket
      operationId: addCommentToProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
        - name: taskId
          in: path
          description: ID of project Task
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commentcontent:
                  description: Comment content
                  type: string
                  example: "Please fix problem ASAP"
      responses:
        "201":
          description: comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/tasks/{taskId}/documents":
    get:
      tags:
        - project
      summary: Project Task Documents
      description: Returns an array of documents from related project task
      operationId: getDocumentsFromProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
        - name: taskId
          in: path
          description: ID of project Task
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/projects/{projectId}/tasks/{taskId}/file/{fileId}":
    get:
      tags:
        - project
      summary: Get file in Task
      description: Returns a file content by ID
      operationId: getFileFromProjectTask
      security:
        - bearerAuth: []
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: string
        - name: projectId
          in: path
          description: ID of project
          required: true
          schema:
            type: string
            format: string
        - name: taskId
          in: path
          description: ID of task
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/File"
        "400":
          description: Invalid ID supplied
        "404":
          description: HelpDesk or file not found
        "403":
          description: Operation not permitted
  "/statistics":
    get:
      tags:
        - statistics
      summary: Statistics
      description: Short information for dashboards
      operationId: getStatistics
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Statistics"
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/statistics/tasks":
    get:
      tags:
        - statistics
      summary: List of Progress Tasks
      description: Get list of tasks from project in progress status
      operationId: getProgressTasks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectTask"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/leads":
    post:
      tags:
        - leads
      summary: Create new lead
      description: Send new lead information in crm.
      operationId: createLead
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  description: Name of Lead
                  type: string
                  example: "Boris Johns"
                email:
                  description: Email of lead
                  type: string
                  example: "boris@mail.ru"
                phone:
                  description: Phone number
                  type: string
                  example: "+79578889654"
      responses:
        "201":
          description: Ticket created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "403":
          description: Operation not permitted
  "/payments/":
    get:
      tags:
        - payment
      summary: Get Payments from account
      description: Get list of last 20 payments
      operationId: getPayments
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Invalid ID supplied
        "403":
          description: Operation not permitted
  "/payments/config":
    get:
      tags:
        - payment
      summary: Get payment config
      description: Get payment config
      operationId: getPaymentCOnfig
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      publishableKey:
                        type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
        "403":
          description: Operation not permitted
  "/payments/create-payment-intent":
    post:
      tags:
        - payment
      summary: Create Payment Intent
      description: Send generic payment data and get token
      operationId: createPaymentIntent
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  description: Currency
                  type: string
                  example: "EUR"
                paymentMethodType:
                  description: Payment Method Type
                  type: string
                  example: "card"
                invoice_id:
                  description: Invoice ID
                  type: string
                  example: "5x23"
                so_id:
                  description: Sales Order ID
                  type: string
                  example: "3x23"
                amount:
                  description: Payment amount
                  type: number
                  example: 19.99
      responses:
        "200":
          description: Payment acceepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientSecret:
                    description: Client secret
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "403":
          description: Operation not permitted
  "/payments/confirm":
    post:
      tags:
        - payment
      summary: Confirm Payment
      description: Changes payment status to success
      operationId: confirmPayment
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentIntent"
      responses:
        "200":
          description: Payment confirmed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "403":
          description: Operation not permitted
  "/notifications/":
    get:
      tags:
        - notification
      summary: Get All Notifications
      description: Get all notifications attached to current user
      operationId: getNotifications
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Notification"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "403":
          description: Operation not permitted
  "/notifications/{id}/":
    delete:
      tags:
        - notification
      summary: Mark notification as Read
      description: Removes current notification from response
      operationId: deleteNotification
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of notification
          required: true
          schema:
            type: number
      responses:
        "204":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Notification not found
        "403":
          description: Operation not permitted
  "/custom-modules/{module}":
    get:
      tags:
        - custom-modules
      summary: Get All Records
      description: Get all records from custom module
      operationId: getCustomModuleRecords
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: The number of items per page (default is 20)
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Field, which accepts order by algorithm. Minus sign at the beginning means desc order.
          required: false
          schema:
            type: string
            example: -pay_no
        - name: search
          in: query
          description: Search with LIKE filter in fields which set in config
          required: false
          schema:
            type: string
            example: TT3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "403":
          description: Operation not permitted
    post:
      tags:
        - custom-modules
      summary: Create new entity
      description: Create new custom module
      operationId: createEntity
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          description: Ticket created
          content:
            application/json:
              schema:
                type: object
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "403":
          description: Operation not permitted
  "/custom-modules/{module}/{id}":
    get:
      tags:
        - custom-modules
      summary: Get Record
      description: Get custom module record by ID
      operationId: getCustomModuleRecordById
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Record ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid ID supplied
        "403":
          description: Operation not permitted
    put:
      tags:
        - custom-modules
      summary: Update entity
      description: Allows authorized user update custom module entity.
      operationId: updateCustomEntity
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of entity to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "202":
          description: Ticket updated
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: Entity not found
        "403":
          description: Operation not permitted
    patch:
      tags:
        - custom-modules
      summary: Partly Update entity
      description: Allows update specific field in entity
      operationId: updateEntityPartly
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of entity to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "202":
          description: Entity updated
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: Entity not found
        "403":
          description: Operation not permitted
  "/custom-modules/{module}/{id}/comments":
    get:
      tags:
        - custom-modules
      summary: Related comments from custom module
      description: Returns an array of comments from custom module
      operationId: getCommentsFromCustomModule
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Custom module not found
        "403":
          description: Operation not permitted
    post:
      tags:
        - custom-modules
      summary: Add comment
      description: Create new comment, attached to current custom module ID
      operationId: addCommentToCustomModule
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of custom module record
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commentcontent:
                  description: Comment content
                  type: string
                  example: "Please fix problem ASAP"
      responses:
        "201":
          description: comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Entity not found
        "403":
          description: Operation not permitted
  "/custom-modules/{module}/{id}/documents":
    get:
      tags:
        - custom-modules
      summary: Related documents from custom module
      description: Returns an array of documents from related custom module
      operationId: getDocumentsFromCustomModule
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of entity
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  count:
                    type: number
                    example: 100
                  page:
                    type: number
                    example: 1
                  size:
                    type: number
                    example: 100
        "400":
          description: Invalid ID supplied
        "404":
          description: Entity not found
        "403":
          description: Operation not permitted
  "/custom-modules/{module}/{id}/file/{fileId}":
    get:
      tags:
        - custom-modules
      summary: Get file in Custom Module
      description: Returns a content from file attached to custom module
      operationId: getFileFromCustomModule
      security:
        - bearerAuth: []
      parameters:
        - name: module
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/File"
        "400":
          description: Invalid ID supplied
        "404":
          description: Entity or file not found
        "403":
          description: Operation not permitted
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:4045/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Anonymous Access"
              field:
                type: string
                example: "crmid"
              message:
                type: string
                example: "Got anonymous user from token or user without crmid"
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        crmid:
          type: string
          example: "12x11"
        firstname:
          type: string
          example: "Ivan"
        lastname:
          type: string
          example: "Ivanov"
        description:
          type: string
          example: "This is description of contact"
        account_id:
          type: string
          example: "11x6"
        account_name:
          type: string
          example: "Coca Cola"
        title:
          type: string
          example: "Manager"
        departmant:
          type: string
          example: "Management"
        created_at:
          type: string
          example: "2023-04-17T19:44:08.791999494+02:00"
        updated_at:
          type: string
          example: "2023-04-17T19:44:08.791999494+02:00"
        is_active:
          type: boolean
        mailingcity:
          type: string
          example: "Moscow"
        email:
          type: string
          example: "emelyanov86@km.ru"
        password:
          type: string
        mailingstreet:
          type: string
          example: "Repina street, 143"
        mailingcountry:
          type: string
          example: "Russia"
        mailingstate:
          type: string
          example: "Chuvashia"
        image:
          type: string
        imagecontent:
          type: string
        assigned_user_id:
          type: string
          example: "17x1"
      xml:
        name: User
    Manager:
      type: object
      properties:
        id:
          type: string
          example: "19x1"
        user_name:
          type: string
          example: "jdoe"
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        email2:
          type: string
          example: "john.doe@example.com"
        title:
          type: string
          example: "Project Manager"
        phone_work:
          type: string
          example: "+1 555 123456"
        department:
          type: string
          example: "IT Department"
        description:
          type: string
          example: "Responsible for managing IT projects."
        address_street:
          type: string
          example: "123 Main St"
        address_city:
          type: string
          example: "New York"
        address_state:
          type: string
          example: "NY"
        address_postalcode:
          type: string
          example: "10001"
        address_country:
          type: string
          example: "USA"
        imagename:
          type: string
          example: "johndoe.jpg"

    Token:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        token:
          type: string
          example: "DSR24DSRDWEFR"
        expiry:
          type: string
          example: "2023-04-17T19:44:08.791999494+02:00"
        otp_enabled:
          type: boolean
          example: true
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    ValidationResponse:
      type: object
      properties:
        message:
          type: string
          example: "Key: 'UserSignUpInput.Password' Error:Field validation for 'Password' failed on the 'min' tag"
        field:
          type: string
          example: "Password"
        error:
          type: string
          example: "Validation Error"
    MessageResponse:
      type: object
      properties:
        message:
          type: string
          example: "Response was success"
        success:
          type: boolean
          example: true
    Module:
      type: object
      properties:
        label:
          type: string
          example: "Invoices"
        name:
          type: string
          example: "Invoice"
        createable:
          type: boolean
          example: true
        updateable:
          type: boolean
          example: true
        deleteable:
          type: boolean
          example: true
        retrieveable:
          type: boolean
          example: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ModuleField'
          example:
            - name: "subject"
              label: "Subject"
              mandatory: true
              isunique: true
              nullable: false
              editable: true
              default: ""
            - name: "duedate"
              label: "Due Date"
              mandatory: false
              isunique: false
              nullable: true
              editable: true
              default: "default2"
        idPrefix:
          type: string
          example: "2"
        isEntity:
          type: boolean
          example: true
        allowDuplicates:
          type: boolean
          example: false
        labelFields:
          type: string
          example: "subject"
    ModuleField:
      type: object
      properties:
        name:
          type: string
          example: "invoicestatus"
        label:
          type: string
          example: "Invoice Status"
        mandatory:
          type: boolean
          example: true
        isunique:
          type: boolean
          example: true
        nullable:
          type: boolean
          example: false
        editable:
          type: boolean
          example: true
        default:
          type: string
          example: "Created"
    HelpDesk:
      type: object
      properties:
        ticket_no:
          type: string
          example: TICKET_28
        assigned_user_id:
          type: string
          example: 19x1
        parent_id:
          type: string
          example: 11x329
        ticketpriorities:
          type: string
          example: Normal
        product_id:
          type: string
          example: ''
        ticketseverities:
          type: string
          example: ''
        ticketstatus:
          type: string
          example: Open
        ticketcategories:
          type: string
          example: ''
        hours:
          type: number
          example: 0.00000000
        days:
          type: number
          example: 0.00000000
        createdtime:
          type: string
          format: date-time
          example: '2017-02-08T10:56:07Z'
        modifiedtime:
          type: string
          format: date-time
          example: '2018-07-13T18:55:51Z'
        from_portal:
          type: string
          example: '0'
        modifiedby:
          type: string
          example: 19x1
        ticket_title:
          type: string
          example: Problem with emails
        description:
          type: string
          example: They are not attached to client
        solution:
          type: string
          example: Solution not provided yet
        contact_id:
          type: string
          example: ''
        created_user_id:
          type: string
          example: 19x1
        source:
          type: string
          example: IMPORT
        starred:
          type: boolean
          example: false
        tags:
          type: array
          example: ["test1", "test2"]
        id:
          type: string
          example: 17x923
        label:
          type: string
          example: Problem with emails
    Comment:
      type: "object"
      properties:
        id:
          type: "string"
          example: "37x123"
        commentcontent:
          type: "string"
          example: "This is a test comment."
        source:
          type: "string"
          example: "CRM"
        customer:
          type: "string"
          example: "11x456"
        userid:
          type: "string"
          example: "19x789"
        reasontoedit:
          type: "string"
          example: "Typo fix"
        creator:
          type: "string"
          example: "19x123"
        assigned_user_id:
          type: "string"
          example: "19x456"
        createdtime:
          type: "string"
          format: "date-time"
          example: "2023-04-21T10:00:00Z"
        modifiedtime:
          type: "string"
          format: "date-time"
          example: "2023-04-21T10:15:00Z"
        related_to:
          type: "string"
          example: "17x923"
        parent_comments:
          type: "string"
          example: ""
        is_private:
          type: "boolean"
          example: false
        filename:
          type: "string"
          example: "attachment.txt"
        related_email_id:
          type: "string"
          example: "eml-654"
        author:
          $ref: '#/components/schemas/CommentsAuthor'
    Document:
      type: "object"
      properties:
        notes_title:
          type: "string"
          example: "Sample Document"
        createdtime:
          type: "string"
          format: "date-time"
          example: "2023-04-21 10:00:00"
        modifiedtime:
          type: "string"
          format: "date-time"
          example: "2023-04-21 10:15:00"
        filename:
          type: "string"
          example: "document.pdf"
        assigned_user_id:
          type: "string"
          example: "19x1"
        notecontent:
          type: "string"
          example: "This is a sample document content."
        filetype:
          type: "string"
          example: "application/pdf"
        filesize:
          type: "string"
          example: "1024"
        filelocationtype:
          type: "string"
          example: "I"
        fileversion:
          type: "string"
          example: "1.0"
        filestatus:
          type: "string"
          example: "1"
        filedownloadcount:
          type: "string"
          example: "5"
        folderid:
          type: "string"
          example: "22x1"
        note_no:
          type: "string"
          example: "DOC1"
        modifiedby:
          type: "string"
          example: "19x1"
        source:
          type: "string"
          example: "CRM"
        starred:
          type: "boolean"
          example: false
        tags:
          type: "array"
          items:
            type: "string"
          example: ["tag1", "tag2"]
        id:
          type: "string"
          example: "15x40"
        imageattachmentids:
          type: "string"
          example: "15x41"
    File:
      type: "object"
      properties:
        fileid:
          type: "string"
          example: "file-123"
        filename:
          type: "string"
          example: "example.txt"
        filetype:
          type: "string"
          example: "text/plain"
        filesize:
          type: "integer"
          format: "int32"
          example: 1024
        filecontent:
          type: "string"
          example: "This is the content of the file."
    Faq:
      type: object
      properties:
        product_id:
          type: string
          example: "16x18"
        id:
          type: string
          example: "6x50"
        faqcategories:
          type: string
          example: "General"
        faqstatus:
          type: string
          example: "Published"
        question:
          type: string
          example: "What is your name?"
        faq_answer:
          type: string
          example: "My name is Sergey"
        createdtime:
          type: string
          format: date-time
          example: "2023-04-25 12:34:56"
        modifiedtime:
          type: string
          format: date-time
          example: "2023-04-26 12:34:56"
        starred:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example:
            - "products"
            - "services"
    Company:
      type: object
      properties:
        organizationname:
          type: string
          example: "Индивидуальный предприниматель Емельянов Сергей Петрович"
        address:
          type: string
          example: "Бульвар Юности, д. 3, кв. 251"
        city:
          type: string
          example: "Чебоксары"
        state:
          type: string
          example: "Чувашия"
        country:
          type: string
          example: "Россия"
        code:
          type: string
          example: "428034"
        phone:
          type: string
          example: "+78432023893"
        fax:
          type: string
          example: "+78352223606"
        website:
          type: string
          example: "https://itvolga.com"
        logoname:
          type: string
          example: "logo.png"
        logo:
          type: string
          example: ''
        vatid:
          type: string
          example: ''
        inn:
          type: string
          example: "212802719116"
        kpp:
          type: string
          example: "0"
        bankaccount:
          type: string
          example: "40802810602500022487"
        bankname:
          type: string
          example: 'ТОЧКА ПАО БАНКА "ФК ОТКРЫТИЕ"'
        bankid:
          type: string
          example: "044525999"
        corraccount:
          type: string
          example: "30101810845250000999"
        director:
          type: string
          example: "Емельянов С.П."
        bookkeeper:
          type: string
          example: "Емельянов С.П."
        entepreneur:
          type: string
          example: "Емельянов Сергей Петрович"
        entepreneurreg:
          type: string
          example: "308213034700026"
        okpo:
          type: string
          example: "0157757201"
        id:
          type: string
          example: "23x1"
    Invoice:
      type: object
      properties:
        subject:
          type: string
          example: Some laptops
        salesorder_id:
          type: string
          example: "16x5"
        customerno:
          type: string
          example: "customer-1"
        contact_id:
          type: string
          example: 12x11
        invoicedate:
          type: string
          format: date
          example: 2023-04-26
        duedate:
          type: string
          format: date
          example: 2023-05-01
        vtiger_purchaseorder:
          type: string
          example: "12x15"
        txtAdjustment:
          type: number
          example: 0
        salescommission:
          type: number
          example: 0
        exciseduty:
          type: number
          example: 0.000
        hdnSubTotal:
          type: number
          example: 1015.00000000
        hdnGrandTotal:
          type: number
          example: 1289.05
        hdnTaxType:
          type: string
          example: group
        hdnDiscountPercent:
          type: string
          example: "15"
        hdnDiscountAmount:
          type: string
          example: "18"
        hdnS_H_Amount:
          type: number
          example: 0.00000000
        account_id:
          type: string
          example: 11x6
        invoicestatus:
          type: string
          example: "Created"
        assigned_user_id:
          type: string
          example: 19x1
        createdtime:
          type: string
          format: date-time
          example: "2023-04-26 18:07:57"
        modifiedtime:
          type: string
          format: date-time
          example: "2023-04-26 18:07:57"
        modifiedby:
          type: string
          example: 19x1
        currency_id:
          type: string
          example: 21x1
        conversion_rate:
          type: number
          example: 1.000
        bill_street:
          type: string
          example: Bulvar Yunosti 3
        ship_street:
          type: string
          example: Bulvar Yunosti 3
        bill_city:
          type: string
          example: Cheboksary
        ship_city:
          type: string
          example: Cheboksary
        bill_state:
          type: string
          example: Chuvashia
        ship_state:
          type: string
          example: Chuvashia
        bill_code:
          type: string
          example: "428010"
        ship_code:
          type: string
          example: "428010"
        bill_country:
          type: string
          example: Russia
        ship_country:
          type: string
          example: Russia
        bill_pobox:
          type: string
          example: ""
        ship_pobox:
          type: string
          example: ""
        description:
          type: string
          example: "Some description"
        terms_conditions:
          type: string
          example: "- Unless otherwise agreed in writing by the supplier all invoices are payable within thirty (30) days of the date of invoice in the currency of the invoice drawn on a bank based in India or by such other method as is agreed in advance by the Supplier."
        invoice_no:
          type: string
          example: "INV1"
        pre_tax_total:
          type: number
          example: 1015.00000000
        received:
          type: number
          example: 0.00000000
        balance:
          type: number
          example: 1289.05000000
        hdnS_H_Percent:
          type: number
          example: 0.00000000
        potential_id:
          type: string
          example: "5x18"
        source:
          type: string
          example: CRM
        starred:
          type: boolean
          example: false
        tags:
          type: string
          example: "test1,test2"
        region_id:
          type: string
          example: "0"
        id:
          type: string
          example: 2x53
        label:
          type: string
          example: Some laptops
        shipping_&_handling:
          type: number
          example: 0
        shipping_&_handling_shtax1:
          type: number
          example: 4.500
        shipping_&_handling_shtax2:
          type: number
          example: 10.000
        shipping_&_handling_shtax3:
          type: number
          example: 12.500
        currency:
          $ref: "#/components/schemas/Currency"
        LineItems:
          type: array
          items:
            type: object
            properties:
              parent_id:
                type: string
                example: 2xArray
              productid:
                type: string
                example: 14x10
              sequence_no:
                type: number
                example: 1
              quantity:
                type: number
                example: 1.000
              listprice:
                type: number
                example: 1000.00000000
              discount_percent:
                type: string
                example: ""
              discount_amount:
                type: string
                example: ""
              comment:
                type: string
                example: "Some comment"
              description:
                type: string
                example: "Some description"
              incrementondel:
                type: string
                example: "1"
              tax1:
                type: number
                example: 4.500
              tax2:
                type: number
                example: 10.000
              tax3:
                type: number
                example: 12.500
              image:
                type: string
                example: ""
              purchase_cost:
                type: number
                example: 500.00000000
              margin:
                type: number
                example: 500.00000000
              id:
                type: string
                example: 33x4
              product_name:
                type: string
                example: Laptop HP
              entity_type:
                type: string
                example: Products
              deleted:
                type: string
                example: "0"
        productid:
          type: string
          example: 14x10
        LineItems_FinalDetails:
          type: object
    InvoiceShort:
      type: object
      properties:
        subject:
          type: string
          example: Some laptops
        salesorder_id:
          type: string
          example: "16x5"
        customerno:
          type: string
          example: "customer-1"
        contact_id:
          type: string
          example: 12x11
        invoicedate:
          type: string
          format: date
          example: 2023-04-26
        duedate:
          type: string
          format: date
          example: 2023-05-01
        vtiger_purchaseorder:
          type: string
          example: "12x15"
        txtAdjustment:
          type: number
          example: 0
        salescommission:
          type: number
          example: 0
        exciseduty:
          type: number
          example: 0.000
        hdnSubTotal:
          type: number
          example: 1015.00000000
        hdnGrandTotal:
          type: number
          example: 1289.05
        hdnTaxType:
          type: string
          example: group
        hdnDiscountPercent:
          type: string
          example: "15"
        hdnDiscountAmount:
          type: string
          example: "18"
        hdnS_H_Amount:
          type: number
          example: 0.00000000
        account_id:
          type: string
          example: 11x6
        invoicestatus:
          type: string
          example: "Created"
        assigned_user_id:
          type: string
          example: 19x1
        createdtime:
          type: string
          format: date-time
          example: "2023-04-26 18:07:57"
        modifiedtime:
          type: string
          format: date-time
          example: "2023-04-26 18:07:57"
        modifiedby:
          type: string
          example: 19x1
        currency_id:
          type: string
          example: 21x1
        conversion_rate:
          type: number
          example: 1.000
        bill_street:
          type: string
          example: Bulvar Yunosti 3
        ship_street:
          type: string
          example: Bulvar Yunosti 3
        bill_city:
          type: string
          example: Cheboksary
        ship_city:
          type: string
          example: Cheboksary
        bill_state:
          type: string
          example: Chuvashia
        ship_state:
          type: string
          example: Chuvashia
        bill_code:
          type: string
          example: "428010"
        ship_code:
          type: string
          example: "428010"
        bill_country:
          type: string
          example: Russia
        ship_country:
          type: string
          example: Russia
        bill_pobox:
          type: string
          example: ""
        ship_pobox:
          type: string
          example: ""
        description:
          type: string
          example: "Some description"
        terms_conditions:
          type: string
          example: "- Unless otherwise agreed in writing by the supplier all invoices are payable within thirty (30) days of the date of invoice in the currency of the invoice drawn on a bank based in India or by such other method as is agreed in advance by the Supplier."
        invoice_no:
          type: string
          example: "INV1"
        pre_tax_total:
          type: number
          example: 1015.00000000
        received:
          type: number
          example: 0.00000000
        balance:
          type: number
          example: 1289.05000000
        hdnS_H_Percent:
          type: number
          example: 0.00000000
        potential_id:
          type: string
          example: "5x18"
        source:
          type: string
          example: CRM
        starred:
          type: boolean
          example: false
        tags:
          type: string
          example: "test1,test2"
        region_id:
          type: string
          example: "0"
        id:
          type: string
          example: 2x53
        label:
          type: string
          example: Some laptops
        shipping_&_handling:
          type: number
          example: 0
        shipping_&_handling_shtax1:
          type: number
          example: 4.500
        shipping_&_handling_shtax2:
          type: number
          example: 10.000
        shipping_&_handling_shtax3:
          type: number
          example: 12.500
    SalesOrderShort:
      type: object
      properties:
        salesorder_no:
          type: string
        subject:
          type: string
        potential_id:
          type: string
        customerno:
          type: string
        quote_id:
          type: string
        vtiger_purchaseorder:
          type: string
        contact_id:
          type: string
        duedate:
          type: string
        carrier:
          type: string
        pending:
          type: string
        sostatus:
          type: string
        txtAdjustment:
          type: string
        salescommission:
          type: string
        exciseduty:
          type: string
        hdnGrandTotal:
          type: string
        hdnSubTotal:
          type: string
        hdnTaxType:
          type: string
        hdnDiscountPercent:
          type: string
        hdnDiscountAmount:
          type: string
        hdnS_H_Amount:
          type: string
        account_id:
          type: string
        assigned_user_id:
          type: string
        createdtime:
          type: string
        modifiedtime:
          type: string
        modifiedby:
          type: string
        currency_id:
          type: string
        conversion_rate:
          type: number
        bill_street:
          type: string
        ship_street:
          type: string
        bill_city:
          type: string
        ship_city:
          type: string
        bill_state:
          type: string
        ship_state:
          type: string
        bill_code:
          type: string
        ship_code:
          type: string
        bill_country:
          type: string
        ship_country:
          type: string
        bill_pobox:
          type: string
        ship_pobox:
          type: string
        description:
          type: string
        terms_conditions:
          type: string
        enable_recurring:
          type: string
        recurring_frequency:
          type: string
        start_period:
          type: string
        end_period:
          type: string
        payment_duration:
          type: string
        invoicestatus:
          type: string
        fromsite:
          type: string
        pre_tax_total:
          type: string
        hdnS_H_Percent:
          type: string
        spcompany:
          type: string
        created_user_id:
          type: string
        source:
          type: string
        starred:
          type: boolean
        tags:
          type: string
        region_id:
          type: string
        id:
          type: string
        label:
          type: string
        shipping_and_handling:
          type: number
        shipping_and_handling_shtax1:
          type: number
        currency:
          $ref: "#/components/schemas/Currency"
    SalesOrder:
      type: object
      properties:
        salesorder_no:
          type: string
        subject:
          type: string
        potential_id:
          type: string
        customerno:
          type: string
        quote_id:
          type: string
        vtiger_purchaseorder:
          type: string
        contact_id:
          type: string
        duedate:
          type: string
        carrier:
          type: string
        pending:
          type: string
        sostatus:
          type: string
        txtAdjustment:
          type: string
        salescommission:
          type: string
        exciseduty:
          type: string
        hdnGrandTotal:
          type: string
        hdnSubTotal:
          type: string
        hdnTaxType:
          type: string
        hdnDiscountPercent:
          type: string
        hdnDiscountAmount:
          type: string
        hdnS_H_Amount:
          type: string
        account_id:
          type: string
        assigned_user_id:
          type: string
        createdtime:
          type: string
        modifiedtime:
          type: string
        modifiedby:
          type: string
        currency_id:
          type: string
        conversion_rate:
          type: number
        bill_street:
          type: string
        ship_street:
          type: string
        bill_city:
          type: string
        ship_city:
          type: string
        bill_state:
          type: string
        ship_state:
          type: string
        bill_code:
          type: string
        ship_code:
          type: string
        bill_country:
          type: string
        ship_country:
          type: string
        bill_pobox:
          type: string
        ship_pobox:
          type: string
        description:
          type: string
        terms_conditions:
          type: string
        enable_recurring:
          type: string
        recurring_frequency:
          type: string
        start_period:
          type: string
        end_period:
          type: string
        payment_duration:
          type: string
        invoicestatus:
          type: string
        fromsite:
          type: string
        pre_tax_total:
          type: string
        hdnS_H_Percent:
          type: string
        spcompany:
          type: string
        created_user_id:
          type: string
        source:
          type: string
        starred:
          type: boolean
        tags:
          type: string
        region_id:
          type: string
        id:
          type: string
        label:
          type: string
        shipping_and_handling:
          type: number
        shipping_and_handling_shtax1:
          type: number
        currency:
          $ref: "#/components/schemas/Currency"
        LineItems:
          type: array
          items:
            type: object
            properties:
              parent_id:
                type: string
                example: 2xArray
              productid:
                type: string
                example: 14x10
              sequence_no:
                type: number
                example: 1
              quantity:
                type: number
                example: 1.000
              listprice:
                type: number
                example: 1000.00000000
              discount_percent:
                type: string
                example: ""
              discount_amount:
                type: string
                example: ""
              comment:
                type: string
                example: "Some comment"
              description:
                type: string
                example: "Some description"
              incrementondel:
                type: string
                example: "1"
              tax1:
                type: number
                example: 4.500
              tax2:
                type: number
                example: 10.000
              tax3:
                type: number
                example: 12.500
              image:
                type: string
                example: ""
              purchase_cost:
                type: number
                example: 500.00000000
              margin:
                type: number
                example: 500.00000000
              id:
                type: string
                example: 33x4
              product_name:
                type: string
                example: Laptop HP
              entity_type:
                type: string
                example: Products
              deleted:
                type: string
                example: "0"
        productid:
          type: string
          example: 14x10
        LineItems_FinalDetails:
          type: object
    ServiceContract:
      type: object
      properties:
        id:
          type: string
          example: "24x59"
        assigned_user_id:
          type: string
          example: "19x1"
        start_date:
          type: string
          format: date-time
          example: "2023-05-01T00:00:00Z"
        end_date:
          type: string
          format: date-time
          example: "2023-12-31T00:00:00Z"
        sc_related_to:
          type: string
          example: "12x11"
        tracking_unit:
          type: string
          example: "hours"
        total_units:
          type: number
          format: float
          example: 1000
        used_units:
          type: number
          format: float
          example: 200
        subject:
          type: string
          example: "Mocked Service Contract"
        due_date:
          type: string
          format: date-time
          example: "2023-08-15T00:00:00Z"
        planned_duration:
          type: integer
          example: 120
        actual_duration:
          type: integer
          example: 90
        contract_status:
          type: string
          example: "In Progress"
        contract_priority:
          type: string
          example: "high"
        contract_type:
          type: string
          example: "Support"
        progress:
          type: number
          format: float
          example: 20
        contract_no:
          type: string
          example: "SERCON2"
        created_time:
          type: string
          format: date-time
          example: "2023-04-25T00:00:00Z"
        modified_time:
          type: string
          format: date-time
          example: "2023-04-30T00:00:00Z"
        starred:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        label:
          type: string
          example: "Label-A"
    Product:
      type: object
      properties:
        productname:
          type: string
          example: "Example Product"
        product_no:
          type: string
          example: "PRO1"
        productcode:
          type: string
          example: "ABC123"
        discontinued:
          type: boolean
          example: false
        manufacturer:
          type: string
          example: "MetBeat Corp"
        productcategory:
          type: string
          example: "Hardware"
        sales_start_date:
          type: string
          format: date-time
          example: "2023-01-01T09:57:19Z"
        sales_end_date:
          type: string
          format: date-time
          example: "2023-12-31T09:57:19Z"
        start_date:
          type: string
          format: date-time
          example: "2023-01-01T09:57:19Z"
        expiry_date:
          type: string
          format: date-time
          example: "2023-12-31T09:57:19Z"
        website:
          type: string
          example: "https://example.com/product"
        vendor_id:
          type: string
          example: "V123"
        mfr_part_no:
          type: string
          example: "MFR-123"
        vendor_part_no:
          type: string
          example: "VENDOR-456"
        serial_no:
          type: string
          example: "SN-789"
        productsheet:
          type: string
          example: "https://example.com/product/sheet.pdf"
        glacct:
          type: string
          example: "302-Rental-Income"
        createdtime:
          type: string
          format: date-time
          example: "2023-05-18T09:57:19Z"
        modifiedtime:
          type: string
          format: date-time
          example: "2023-05-18T09:57:19Z"
        unit_price:
          type: number
          example: 10.99
        commissionrate:
          type: number
          example: 0.05
        taxclass:
          type: string
          example: ""
        usageunit:
          type: string
          example: "Each"
        qty_per_unit:
          type: number
          example: 1.0
        qtyinstock:
          type: number
          example: 100.0
        reorderlevel:
          type: integer
          example: 50
        assigned_user_id:
          type: string
          example: "19x1"
        qtyindemand:
          type: integer
          example: 10
        description:
          type: string
          example: "Example product description"
        purchase_cost:
          type: number
          example: 50.0
        starred:
          type: boolean
          example: true
        id:
          type: string
          example: "14x9"
        imageattachmentids:
          type: string
          example: "14x62"
        label:
          type: string
          example: "Featured"
        currency1:
          type: number
          example: 100.0
        currency_id:
          type: string
          example: "21x11"
        currency:
          $ref: "#/components/schemas/Currency"
        imagecontent:
          type: string
    Currency:
      type: object
      properties:
        id:
          type: string
          example: "21x1"
        currency_name:
          type: string
          example: "Euro"
        currency_code:
          type: string
          example: "EUR"
        currency_symbol:
          type: string
          example: "€"
        conversion_rate:
          type: number
          format: float
          example: 1.0
        currency_status:
          type: string
          example: "Active"
        defaultid:
          type: string
          example: "-11"
        deleted:
          type: boolean
          example: false
    Service:
      type: object
      properties:
        servicename:
          type: string
          example: "Premium Hosting"
        service_no:
          type: string
          example: "SER1"
        discontinued:
          type: boolean
          example: true
        sales_start_date:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        sales_end_date:
          type: string
          format: date-time
          example: "2023-12-31T00:00:00Z"
        start_date:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        expiry_date:
          type: string
          format: date-time
          example: "2023-12-31T00:00:00Z"
        website:
          type: string
          example: "https://example.com"
        service_usageunit:
          type: string
          example: "Hours"
        qty_per_unit:
          type: number
          format: float
          example: 4
        servicecategory:
          type: string
          example: "Support"
        unit_price:
          type: number
          format: float
          example: 9.99
        taxclass:
          type: string
          example: ""
        commissionrate:
          type: number
          format: float
          example: 0.1
        purchase_cost:
          type: number
          format: float
          example: 5
        tax2:
          type: number
          format: float
          example: 0.05
        tax3:
          type: number
          format: float
          example: 0.02
        currency1:
          type: number
          format: float
          example: 1.2
        currency_id:
          type: string
          example: "21x1"
        created_time:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        modified_time:
          type: string
          format: date-time
          example: "2023-01-10T00:00:00Z"
        assigned_user_id:
          type: string
          example: "19x1"
        description:
          type: string
          example: "Premium web hosting with unlimited bandwidth"
        source:
          type: string
          example: "CRM"
        starred:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example: ["web", "hosting"]
        id:
          type: string
          example: "25x52"
        label:
          type: string
          example: "Premium Hosting"
        currency:
          $ref: '#/components/schemas/Currency'
    Project:
      type: object
      properties:
        projectname:
          type: string
          example: "Website Redesign"
        startdate:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        targetenddate:
          type: string
          format: date-time
          example: "2023-03-31T00:00:00Z"
        actualenddate:
          type: string
          format: date-time
          example: "2023-03-30T00:00:00Z"
        projectstatus:
          type: string
          example: "prospecting"
        projecttype:
          type: string
          example: "administrative"
        linktoaccountscontacts:
          type: string
          example: "11x6"
        project_no:
          type: string
          example: "PROJ1"
        targetbudget:
          type: string
          example: "10000"
        projecturl:
          type: string
          example: "https://example.com/redesign-project"
        projectpriority:
          type: string
          example: "normal"
        progress:
          type: string
          example: "10%"
        isconvertedfrompotential:
          type: boolean
          example: false
        potentialid:
          type: string
          example: "13x14"
        created_time:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        modified_time:
          type: string
          format: date-time
          example: "2023-03-30T00:00:00Z"
        assigned_user_id:
          type: string
          example: "19x1"
        description:
          type: string
          example: "Redesign the company website to improve user experience"
        source:
          type: string
          example: "CRM"
        starred:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example: ["website", "redesign"]
        id:
          type: string
          example: "29x54"
        label:
          type: string
          example: "Website Redesign"
        statistics:
          $ref: '#/components/schemas/CurrentProjectStatistics'
    ProjectTask:
      type: object
      properties:
        projecttaskname:
          type: string
          example: "Design Homepage"
        projecttasktype:
          type: string
          example: "administrative"
        projecttaskpriority:
          type: string
          example: "low"
        projectid:
          type: string
          example: "29x54"
        assigned_user_id:
          type: string
          example: "19x1"
        projecttasknumber:
          type: string
          example: "1"
        projecttask_no:
          type: string
          example: "PT1"
        projecttaskprogress:
          type: string
          example: "75%"
        projecttaskhours:
          type: string
          example: "10"
        startdate:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        enddate:
          type: string
          format: date-time
          example: "2023-01-07T00:00:00Z"
        createdtime:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        modifiedtime:
          type: string
          format: date-time
          example: "2023-01-05T00:00:00Z"
        description:
          type: string
          example: "Create a new design for the homepage"
        source:
          type: string
          example: "CRM"
        starred:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example: ["design", "homepage"]
        projecttaskstatus:
          type: string
          example: "Open"
        id:
          type: string
          example: "28x56"
        label:
          type: string
          example: "Design Homepage"
    Statistics:
      type: object
      properties:
        tickets:
          $ref: '#/components/schemas/TicketStatistics'
        projects:
          $ref: '#/components/schemas/ProjectStatistics'
        tasks:
          $ref: '#/components/schemas/TaskStatistics'
        invoices:
          $ref: '#/components/schemas/InvoiceStatistics'
    TicketStatistics:
      type: object
      properties:
        total:
          type: integer
          example: 100
        Open:
          type: integer
          example: 20
        In Progress:
          type: integer
          example: 50
        Wait For Response:
          type: integer
          example: 10
        Closed:
          type: integer
          example: 20
    ProjectStatistics:
      type: object
      properties:
        total:
          type: integer
          example: 50
        open:
          type: integer
          example: 25
        open_hours:
          type: number
          format: float
          example: 100.25
        closed:
          type: integer
          example: 25
        closed_hours:
          type: number
          format: float
          example: 333.25
    TaskStatistics:
      type: object
      properties:
        total:
          type: integer
          example: 200
        open:
          type: integer
          example: 50
        open-hours:
          type: number
          format: float
          example: 100.25
        In Progress:
          type: integer
          example: 100
        In Progress-hours:
          type: number
          format: float
          example: 100.25
        Completed:
          type: integer
          example: 50
        Completed-hours:
          type: number
          format: float
          example: 100.25
    InvoiceStatistics:
      type: object
      properties:
        total_qty:
          type: integer
          example: 100
        total_sum:
          type: number
          format: float
          example: 12000.00
        open_qty:
          type: integer
          example: 30
        open_sum:
          type: number
          format: float
          example: 5000.00
        paid_qty:
          type: integer
          example: 70
        paid_sum:
          type: number
          format: float
          example: 7000.00
    CommentsAuthor:
      type: object
      properties:
        firstname:
          type: string
          example: "Ksenia"
        lastname:
          type: string
          example: "Ivanova"
        email:
          type: string
          example: "ks@mail.ru"
        imagecontent:
          type: string
          example: ""
        id:
          type: string
          example: "19x1"
    CurrentProjectStatistics:
      type: object
      properties:
        total_tasks:
          type: number
          example: 10
        total_hours:
          type: number
          example: 120
        open_tasks:
          type: number
          example: 3
        closed_tasks:
          type: number
          example: 5
        in_progress_tasks:
          type: number
          example: 1
        deferred_tasks:
          type: number
          example: 2
        cancelled_tasks:
          type: number
          example: 1
        low_tasks:
          type: number
          example: 1
        normal_tasks:
          type: number
          example: 5
        high_tasks:
          type: number
          example: 1
    Lead:
      type: object
      properties:
        id:
          type: string
          example: "10x45"
        lastname:
          type: string
          example: "Boris Johns"
        email:
          type: string
          example: "boris@mail.ru"
        phone:
          type: string
          example: "+7957889965"
    OtpResult:
      type: object
      properties:
        base32:
          type: string
          example: "3HDFEUFHWSD"
        otpauth_url:
          type: string
          example: "https://itvolga.com"
    Search:
      type: object
      properties:
        label:
          type: string
          example: "Test search result"
        crmid:
          type: string
          example: "15x223"
        parent:
          type: string
          example: "11x243"
        module:
          type: string
          example: "HelpDesk"
    Account:
      type: object
      properties:
        accountname:
          type: string
          example: "Центр информационных технологий"
        account_no:
          type: string
          example: "ACC1"
        phone:
          type: string
          example: "+78432023893"
        website:
          type: string
          example: "https://itvolga.com"
        fax:
          type: string
          example: ""
        tickersymbol:
          type: string
          example: ""
        otherphone:
          type: string
          example: ""
        account_id:
          type: string
          example: ""
        email1:
          type: string
          example: "info@itvolga.com"
        employees:
          type: string
          example: "0"
        email2:
          type: string
          example: ""
        ownership:
          type: string
          example: ""
        rating:
          type: string
          example: "Active"
        industry:
          type: string
          example: "Communications"
        siccode:
          type: string
          example: ""
        accounttype:
          type: string
          example: "Integrator"
        annual_revenue:
          type: string
          example: "12100.00000000"
        emailoptout:
          type: string
          example: "0"
        notify_owner:
          type: string
          example: "0"
        assigned_user_id:
          type: string
          example: "19x1"
        createdtime:
          type: string
          example: "2022-09-06 18:52:10"
        modifiedtime:
          type: string
          example: "2022-09-06 18:53:13"
        modifiedby:
          type: string
          example: "19x1"
        bill_street:
          type: string
          example: "Bulvar Yunosti, 3"
        ship_street:
          type: string
          example: "Bulvar Yunosti, 3"
        bill_city:
          type: string
          example: "Cheboksary"
        ship_city:
          type: string
          example: "Cheboksary"
        bill_state:
          type: string
          example: "Chuvashia"
        ship_state:
          type: string
          example: "Chuvashia"
        bill_code:
          type: string
          example: "428010"
        ship_code:
          type: string
          example: "428010"
        bill_country:
          type: string
          example: "Russia"
        ship_country:
          type: string
          example: "Russia"
        bill_pobox:
          type: string
          example: ""
        ship_pobox:
          type: string
          example: ""
        description:
          type: string
          example: ""
        isconvertedfromlead:
          type: string
          example: "0"
        source:
          type: string
          example: "CRM"
        starred:
          type: string
          example: "0"
        tags:
          type: string
          example: ""
        imagename:
          type: string
          example: ""
        id:
          type: string
          example: "11x6"
        imageattachmentids:
          type: string
          example: "11x8"
        label:
          type: string
          example: "Центр информационных технологий"
    PaymentIntent:
      type: object
      properties:
        id:
          type: string
          example: pi_3NJaRqAMEMdfzJss11r1Z0XS
        object:
          type: string
          example: payment_intent
        amount:
          type: integer
          example: 450000
        amount_details:
          type: object
          properties:
            tip:
              type: object
          example:
            tip: {}
        capture_method:
          type: string
          example: automatic
        client_secret:
          type: string
          example: pi_3NJaRqAMEMdfzJss11r1Z0XS_secret_Hx0HO0fDX1eWeKSXger4x7Nsk
        confirmation_method:
          type: string
          example: automatic
        created:
          type: integer
          example: 1686913450
        currency:
          type: string
          example: rub
        livemode:
          type: boolean
          example: false
        payment_method:
          type: string
          example: pm_1NJaRqAMEMdfzJ
        payment_method_types:
          type: array
          items:
            type: string
          example:
            - card
        status:
          type: string
          example: succeeded
    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        stripe_payment_id:
          type: string
          example: pi_3NJaRqAMEMdfzJss11r1Z0XS
        user_id:
          type: string
          example: user_123
        account_id:
          type: string
          example: 2x33
        amount:
          type: number
          format: float
          example: 4500.00
        currency:
          type: string
          example: usd
        payment_method:
          type: string
          example: card
        status:
          type: integer
          example: 1
        parent_id:
          type: string
          example: parent_123
        created_at:
          type: string
          format: date-time
          example: '2023-01-01T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-01-01T12:00:00Z'
    UserSettings:
      type: object
      properties:
        emailoptout:
          type: boolean
          example: true
        donotcall:
          type: boolean
          example: false
    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        crmid:
          type: string
          example: crm_123
        module:
          type: string
          example: module_name
        label:
          type: string
          example: label_name
        description:
          type: string
          example: some description
        manager:
          $ref: "#/components/schemas/Manager"
        is_read:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2023-01-01T12:00:00Z'
        updatead_at:
          type: string
          format: date-time
          example: '2023-01-01T12:00:00Z'